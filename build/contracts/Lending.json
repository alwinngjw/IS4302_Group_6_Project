{
  "contractName": "Lending",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Avax",
          "name": "avaxTokenAddress",
          "type": "address"
        },
        {
          "internalType": "contract LiquidityPool",
          "name": "lp",
          "type": "address"
        },
        {
          "internalType": "contract Reserves",
          "name": "reservesAddress",
          "type": "address"
        },
        {
          "internalType": "contract PriceFeed",
          "name": "pf",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "depositCollateral",
          "type": "uint256"
        }
      ],
      "name": "borrowAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "repayAVAXDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "topUpCollateral",
          "type": "uint256"
        }
      ],
      "name": "topUpAVAXCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidateAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "topUpETHCollateral",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "repayEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidateETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserTotaETHRepaymentAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserTotaAVAXRepaymentAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initUserTotalEthRepaymentAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initUserTotalAVAXRepaymentAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "percentage",
          "type": "uint256"
        }
      ],
      "name": "calculatePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHoldingAVAXCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHoldingEthCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAVAXDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Avax\",\"name\":\"avaxTokenAddress\",\"type\":\"address\"},{\"internalType\":\"contract LiquidityPool\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"contract Reserves\",\"name\":\"reservesAddress\",\"type\":\"address\"},{\"internalType\":\"contract PriceFeed\",\"name\":\"pf\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"depositCollateral\",\"type\":\"uint256\"}],\"name\":\"borrowAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"calculatePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAVAXDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHoldingAVAXCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHoldingEthCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserTotaAVAXRepaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserTotaETHRepaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initUserTotalAVAXRepaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initUserTotalEthRepaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"repayAVAXDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"repayEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"topUpCollateral\",\"type\":\"uint256\"}],\"name\":\"topUpAVAXCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topUpETHCollateral\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Lending.sol\":\"Lending\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Avax.sol\":{\"keccak256\":\"0x76c6d23036985af800ac83d13f2344ed4aa4b150f131105d065536bcc6524f50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e990488108af0835f96864b8215ed1618ec7520bebb303fc52891ef12a558ee\",\"dweb:/ipfs/QmVJC2CvE3zHqw2B6mYVijvyevJJxDwdW1674rbUwyPnKC\"]},\"project:/contracts/ERC20.sol\":{\"keccak256\":\"0xfeef30ad2b2473035147ce29aedc86f3af9da74a44013bd0b232a387039ac7e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f1ceef2c3f56e2da1fa62b8ae94e8ba6cb3c184a0bc193bfa63684152cfe94d\",\"dweb:/ipfs/QmYoUkcUyb4Ze4iiK3Zx1GweZdHnaPtMK76Fxtqx9hjJR4\"]},\"project:/contracts/Lending.sol\":{\"keccak256\":\"0x3de0cc69383b2a9899a54ae3caaa5ef543d0868fb620467629f391f12d66e901\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d77d3989d913b2a74f066b15bd1d09cae06758a4f4afe60ed7edb847756be582\",\"dweb:/ipfs/QmVmSJuqGm3dJFGByc9iRhi41ZVY2FUyjroQ5h9Yoeo3Vf\"]},\"project:/contracts/LiquidityPool.sol\":{\"keccak256\":\"0xcaa68e052c37c0ca7ad3f952f463bba2c5923e88dcd8c9af88fde44d8bcec478\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9200187b90b5990dec5ec8fd8f7b67b30f32fbf1c3682c6ed74237730c37f19\",\"dweb:/ipfs/QmaQMdppYk4SVSrCrrwp3ErKv3nYUKEoJU4M3za2kN7u39\"]},\"project:/contracts/PriceFeed.sol\":{\"keccak256\":\"0x190137437d41a4b57d199f3d03612177129834aa1705e6d8015590fbf30d23b1\",\"urls\":[\"bzz-raw://b6748338e100de69cdf82df66af5dd8fbde4d13b2f09692f9a97781d2b5f2a9a\",\"dweb:/ipfs/QmUtSeAJWosp4D2XvPfLg15VEkCa66mHAvtfqQZ8v6YHjX\"]},\"project:/contracts/Reserves.sol\":{\"keccak256\":\"0xcdcf784661018652289847931f5979876afb0f1a4e606bfd198d3830cd79f75c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91f25ba593f6e50798fef42bbfffa6240c4ffabaf9b0519abcb623efc5e8ee5c\",\"dweb:/ipfs/QmWziNrYM5bnDVDUQUzUJNEA55HxCMjbiCnudY4qovNfys\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100fe5760003560e01c80636862f58911610095578063b731bc6d11610064578063b731bc6d14610293578063b968c930146102be578063db8bf7e6146102e7578063dcbbdbb8146102fe578063fcd6e19114610329576100fe565b80636862f5891461020a5780636e67fcdd14610235578063734997e514610260578063b60d26171461026a576100fe565b806342b9309a116100d157806342b9309a146101a05780634a282670146101b75780634b84a647146101c15780634fed0518146101ec576100fe565b80632133e3b91461010357806323ded52a146101405780632b0fa3991461016b57806338cc483114610175575b600080fd5b34801561010f57600080fd5b5061012a60048036038101906101259190612abf565b610354565b6040516101379190612b0e565b60405180910390f35b34801561014c57600080fd5b50610155610377565b6040516101629190612b0e565b60405180910390f35b61017361043f565b005b34801561018157600080fd5b5061018a610672565b6040516101979190612b6a565b60405180910390f35b3480156101ac57600080fd5b506101b561067a565b005b6101bf610dc7565b005b3480156101cd57600080fd5b506101d6611375565b6040516101e39190612b0e565b60405180910390f35b6101f4611417565b6040516102019190612b0e565b60405180910390f35b34801561021657600080fd5b5061021f61172f565b60405161022c9190612b0e565b60405180910390f35b34801561024157600080fd5b5061024a611776565b6040516102579190612b0e565b60405180910390f35b6102686117bd565b005b34801561027657600080fd5b50610291600480360381019061028c9190612b85565b611cbd565b005b34801561029f57600080fd5b506102a8611fae565b6040516102b59190612b0e565b60405180910390f35b3480156102ca57600080fd5b506102e560048036038101906102e09190612b85565b61200a565b005b3480156102f357600080fd5b506102fc6124d9565b005b34801561030a57600080fd5b50610313612a20565b6040516103209190612b0e565b60405180910390f35b34801561033557600080fd5b5061033e612a7c565b60405161034b9190612b0e565b60405180910390f35b600061271082846103659190612be1565b61036f9190612c52565b905092915050565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190612d06565b60405180910390fd5b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116104c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b890612d72565b60405180910390fd5b600034905060008103610509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050090612dde565b60405180910390fd5b6000670de0b6b3a76400008261051f9190612c52565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a1cf9e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b49190612e13565b826105bf9190612be1565b905082600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106109190612e40565b9250508190555080600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106669190612e40565b92505081905550505050565b600030905090565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116106fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f390612d06565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016107589190612b6a565b602060405180830381865afa158015610775573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107999190612e13565b116107d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d090612ee6565b60405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108779190612b6a565b602060405180830381865afa158015610894573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b89190612e13565b10156108f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f090612f78565b60405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161099a93929190612f98565b6020604051808303816000875af11580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd9190613007565b5060006109ec82600554610354565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30338486610a389190613034565b6040518463ffffffff1660e01b8152600401610a5693929190612f98565b6020604051808303816000875af1158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a999190613007565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ad415bd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b689190613094565b846040518463ffffffff1660e01b8152600401610b8793929190612f98565b6020604051808303816000875af1158015610ba6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bca9190613007565b50600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090556001600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ce49190612e40565b9250508190555060005b601080549050811015610dc1573373ffffffffffffffffffffffffffffffffffffffff1660108281548110610d2657610d256130c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610dae5760108181548110610d8057610d7f6130c1565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b8080610db9906130f0565b915050610cee565b50505050565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610e49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4090612d72565b60405180910390fd5b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080341015610ed0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec790613184565b60405180910390fd5b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000610f2282600554610354565b905060003390508073ffffffffffffffffffffffffffffffffffffffff166108fc8385610f4f9190613034565b9081150290604051600060405180830381858888f19350505050158015610f7a573d6000803e3d6000fd5b5083471015610fbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb5906131f0565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663996e96f06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561102d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110519190613094565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc869081150290604051600060405180830381858888f19350505050158015611099573d6000803e3d6000fd5b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ad415bd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112d9190613094565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f19350505050158015611175573d6000803e3d6000fd5b50600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090556001600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461128f9190612e40565b9250508190555060005b600f8054905081101561136c573373ffffffffffffffffffffffffffffffffffffffff16600f82815481106112d1576112d06130c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361135957600f818154811061132b5761132a6130c1565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b8080611364906130f0565b915050611299565b50505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113d19190612b6a565b602060405180830381865afa1580156113ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114129190612e13565b905090565b60008034905060008103611460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145790612dde565b60405180910390fd5b6000670de0b6b3a7640000826114769190612c52565b90506000600f339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a1cf9e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561154a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156e9190612e13565b826115799190612be1565b9050600061158984600454610354565b905083600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394a54a1282336040518363ffffffff1660e01b81526004016116b4929190613231565b600060405180830381600087803b1580156116ce57600080fd5b505af11580156116e2573d6000803e3d6000fd5b50505050600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205494505050505090565b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166319d747236040518163ffffffff1660e01b8152600401602060405180830381865afa15801561182c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118509190612e13565b905060005b600f80549050811015611cb9576000670de0b6b3a7640000600b6000600f8581548110611885576118846130c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118f59190612c52565b836119009190612be1565b9050600d6000600f848154811061191a576119196130c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111611ca5576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663996e96f06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a199190613094565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc600b6000600f8781548110611a4d57611a4c6130c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f19350505050158015611ade573d6000803e3d6000fd5b50600b6000600f8581548110611af757611af66130c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600c6000600f8581548110611b7857611b776130c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600d6000600f8581548110611bf957611bf86130c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600f8381548110611c7657611c756130c1565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505b508080611cb1906130f0565b915050611855565b5050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611d3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3690612d06565b60405180910390fd5b60008103611d82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7990612dde565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401611ddc9190612b6a565b602060405180830381865afa158015611df9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1d9190612e13565b1015611e5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e5590612f78565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663946e34726040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ecd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef19190612e13565b82611efc9190612be1565b905081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611f4d9190612e40565b9250508190555080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611fa39190612e40565b925050819055505050565b60006064600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546120009190612e40565b9250508190555090565b6000810361204d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204490612dde565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016120a79190612b6a565b602060405180830381865afa1580156120c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120e89190612e13565b1015612129576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161212090612f78565b60405180910390fd5b6010339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600061219a82600454610354565b905081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600082905080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663996e96f06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123009190613094565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161235f93929190612f98565b6020604051808303816000875af115801561237e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a29190613007565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663598c5b4284306040518363ffffffff1660e01b815260040161240092919061325a565b600060405180830381600087803b15801561241a57600080fd5b505af115801561242e573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033866040518463ffffffff1660e01b815260040161248f93929190612f98565b6020604051808303816000875af11580156124ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d29190613007565b5050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffa8ce506040518163ffffffff1660e01b8152600401602060405180830381865afa158015612548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061256c9190612e13565b905060005b601080549050811015612a1c5760006007600060108481548110612598576125976130c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836126099190612be1565b90506009600060108481548110612623576126226130c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111612a08576000601083815481106126a5576126a46130c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663996e96f06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561277c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a09190613094565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518463ffffffff1660e01b81526004016127fe93929190612f98565b6020604051808303816000875af115801561281d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128419190613007565b50600760006010858154811061285a576128596130c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560086000601085815481106128db576128da6130c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600960006010858154811061295c5761295b6130c1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055601083815481106129d9576129d86130c1565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505b508080612a14906130f0565b915050612571565b5050565b60006064600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612a729190612e40565b9250508190555090565b600047905090565b600080fd5b6000819050919050565b612a9c81612a89565b8114612aa757600080fd5b50565b600081359050612ab981612a93565b92915050565b60008060408385031215612ad657612ad5612a84565b5b6000612ae485828601612aaa565b9250506020612af585828601612aaa565b9150509250929050565b612b0881612a89565b82525050565b6000602082019050612b236000830184612aff565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b5482612b29565b9050919050565b612b6481612b49565b82525050565b6000602082019050612b7f6000830184612b5b565b92915050565b600060208284031215612b9b57612b9a612a84565b5b6000612ba984828501612aaa565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612bec82612a89565b9150612bf783612a89565b9250828202612c0581612a89565b91508282048414831517612c1c57612c1b612bb2565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612c5d82612a89565b9150612c6883612a89565b925082612c7857612c77612c23565b5b828204905092915050565b600082825260208201905092915050565b7f596f7520646f206e6f74206861766520616e79206f75747374616e64696e672060008201527f6465627400000000000000000000000000000000000000000000000000000000602082015250565b6000612cf0602483612c83565b9150612cfb82612c94565b604082019050919050565b60006020820190508181036000830152612d1f81612ce3565b9050919050565b7f596f7520646f206e6f742068617665206f75747374616e64696e672064656274600082015250565b6000612d5c602083612c83565b9150612d6782612d26565b602082019050919050565b60006020820190508181036000830152612d8b81612d4f565b9050919050565b7f506c6561736520707574206d6f726520636f6c6c61746572616c000000000000600082015250565b6000612dc8601a83612c83565b9150612dd382612d92565b602082019050919050565b60006020820190508181036000830152612df781612dbb565b9050919050565b600081519050612e0d81612a93565b92915050565b600060208284031215612e2957612e28612a84565b5b6000612e3784828501612dfe565b91505092915050565b6000612e4b82612a89565b9150612e5683612a89565b9250828201905080821115612e6e57612e6d612bb2565b5b92915050565b7f596f7520646f206e6f74206861766520656e6f756768205553444320746f207260008201527f6570617920746869732064656274000000000000000000000000000000000000602082015250565b6000612ed0602e83612c83565b9150612edb82612e74565b604082019050919050565b60006020820190508181036000830152612eff81612ec3565b9050919050565b7f596f7520646f206e6f74206861766520656e6f756768204156415820746f6b6560008201527f6e21000000000000000000000000000000000000000000000000000000000000602082015250565b6000612f62602283612c83565b9150612f6d82612f06565b604082019050919050565b60006020820190508181036000830152612f9181612f55565b9050919050565b6000606082019050612fad6000830186612b5b565b612fba6020830185612b5b565b612fc76040830184612aff565b949350505050565b60008115159050919050565b612fe481612fcf565b8114612fef57600080fd5b50565b60008151905061300181612fdb565b92915050565b60006020828403121561301d5761301c612a84565b5b600061302b84828501612ff2565b91505092915050565b600061303f82612a89565b915061304a83612a89565b925082820390508181111561306257613061612bb2565b5b92915050565b61307181612b49565b811461307c57600080fd5b50565b60008151905061308e81613068565b92915050565b6000602082840312156130aa576130a9612a84565b5b60006130b88482850161307f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006130fb82612a89565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361312d5761312c612bb2565b5b600182019050919050565b7f56616c756520696e736572746564206973206e6f7420656e6f75676800000000600082015250565b600061316e601c83612c83565b915061317982613138565b602082019050919050565b6000602082019050818103600083015261319d81613161565b9050919050565b7f4552524f52000000000000000000000000000000000000000000000000000000600082015250565b60006131da600583612c83565b91506131e5826131a4565b602082019050919050565b60006020820190508181036000830152613209816131cd565b9050919050565b600061321b82612b29565b9050919050565b61322b81613210565b82525050565b60006040820190506132466000830185612aff565b6132536020830184613222565b9392505050565b600060408201905061326f6000830185612aff565b61327c6020830184612b5b565b939250505056fea2646970667358221220371b836509973c80badb1379118a58d5a11ad28a73db39720cc9a4b96bb213e864736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3509:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:6",
                "type": ""
              }
            ],
            "src": "7:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:6",
                "type": ""
              }
            ],
            "src": "334:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:6",
                "type": ""
              }
            ],
            "src": "466:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "624:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "634:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "663:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "645:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "634:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Avax_$60",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "606:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "616:7:6",
                "type": ""
              }
            ],
            "src": "568:107:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:90:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "803:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "812:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "815:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "805:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "805:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "805:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "758:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "794:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Avax_$60",
                              "nodeType": "YulIdentifier",
                              "src": "765:28:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "765:35:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "755:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "755:46:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "748:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "748:54:6"
                  },
                  "nodeType": "YulIf",
                  "src": "745:74:6"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Avax_$60",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "728:5:6",
                "type": ""
              }
            ],
            "src": "681:144:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "905:91:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "915:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "930:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "924:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "924:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "915:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "984:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Avax_$60",
                      "nodeType": "YulIdentifier",
                      "src": "946:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "946:44:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "946:44:6"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Avax_$60_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "883:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "891:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "899:5:6",
                "type": ""
              }
            ],
            "src": "831:165:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1055:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1065:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1094:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1076:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1076:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1065:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1037:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1047:7:6",
                "type": ""
              }
            ],
            "src": "1002:104:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1179:59:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1189:43:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1226:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "1200:25:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1200:32:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1189:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_LiquidityPool_$1976",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1161:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1171:7:6",
                "type": ""
              }
            ],
            "src": "1112:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1309:101:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1388:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1397:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1400:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1390:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1390:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1390:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1332:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1379:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_LiquidityPool_$1976",
                              "nodeType": "YulIdentifier",
                              "src": "1339:39:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1339:46:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1329:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1329:57:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1322:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1322:65:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1319:85:6"
                }
              ]
            },
            "name": "validator_revert_t_contract$_LiquidityPool_$1976",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1302:5:6",
                "type": ""
              }
            ],
            "src": "1244:166:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1501:102:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1511:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1526:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1520:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1520:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1511:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1591:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_LiquidityPool_$1976",
                      "nodeType": "YulIdentifier",
                      "src": "1542:48:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1542:55:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1542:55:6"
                }
              ]
            },
            "name": "abi_decode_t_contract$_LiquidityPool_$1976_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1479:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1487:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1495:5:6",
                "type": ""
              }
            ],
            "src": "1416:187:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1671:59:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1681:43:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1718:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "1692:25:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1692:32:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1681:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Reserves_$2239",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1653:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1663:7:6",
                "type": ""
              }
            ],
            "src": "1609:121:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1796:96:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1870:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1879:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1882:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1872:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1872:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1872:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1819:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1861:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Reserves_$2239",
                              "nodeType": "YulIdentifier",
                              "src": "1826:34:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1826:41:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1816:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1816:52:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1809:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1809:60:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1806:80:6"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Reserves_$2239",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1789:5:6",
                "type": ""
              }
            ],
            "src": "1736:156:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1978:97:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1988:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2003:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1997:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1997:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1988:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2063:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Reserves_$2239",
                      "nodeType": "YulIdentifier",
                      "src": "2019:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2019:50:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2019:50:6"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Reserves_$2239_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1956:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1964:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1972:5:6",
                "type": ""
              }
            ],
            "src": "1898:177:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2144:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2154:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2183:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2165:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2165:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2154:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_PriceFeed_$2011",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2126:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2136:7:6",
                "type": ""
              }
            ],
            "src": "2081:114:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2262:97:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2337:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2346:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2349:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2339:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2339:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2339:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2285:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2328:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_PriceFeed_$2011",
                              "nodeType": "YulIdentifier",
                              "src": "2292:35:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2292:42:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2282:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2282:53:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2275:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2275:61:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2272:81:6"
                }
              ]
            },
            "name": "validator_revert_t_contract$_PriceFeed_$2011",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2255:5:6",
                "type": ""
              }
            ],
            "src": "2201:158:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2446:98:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2456:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2471:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2465:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2465:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2456:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2532:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_PriceFeed_$2011",
                      "nodeType": "YulIdentifier",
                      "src": "2487:44:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2487:51:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2487:51:6"
                }
              ]
            },
            "name": "abi_decode_t_contract$_PriceFeed_$2011_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2424:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2432:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2440:5:6",
                "type": ""
              }
            ],
            "src": "2365:179:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2746:760:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2793:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2795:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2795:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2795:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2767:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2776:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2763:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2763:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2788:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2759:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2759:33:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2756:120:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2886:139:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2901:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2915:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2905:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2930:85:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2987:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2998:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2983:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2983:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3007:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Avax_$60_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2940:42:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2940:75:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2930:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3035:151:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3050:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3064:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3054:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3080:96:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3148:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3159:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3144:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3144:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3168:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_LiquidityPool_$1976_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3090:53:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3090:86:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3080:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3196:146:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3211:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3225:2:6",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3215:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3241:91:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3304:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3315:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3300:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3300:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3324:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Reserves_$2239_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3251:48:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3251:81:6"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3241:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3352:147:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3367:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3381:2:6",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3371:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3397:92:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3461:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3472:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3457:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3457:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3481:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PriceFeed_$2011_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3407:49:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3407:82:6"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3397:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Avax_$60t_contract$_LiquidityPool_$1976t_contract$_Reserves_$2239t_contract$_PriceFeed_$2011_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2692:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2703:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2715:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2723:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2731:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2739:6:6",
                "type": ""
              }
            ],
            "src": "2550:956:6"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Avax_$60(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_Avax_$60(value) {\n        if iszero(eq(value, cleanup_t_contract$_Avax_$60(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Avax_$60_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Avax_$60(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_LiquidityPool_$1976(value) -> cleaned {\n        cleaned := cleanup_t_address_payable(value)\n    }\n\n    function validator_revert_t_contract$_LiquidityPool_$1976(value) {\n        if iszero(eq(value, cleanup_t_contract$_LiquidityPool_$1976(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_LiquidityPool_$1976_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_LiquidityPool_$1976(value)\n    }\n\n    function cleanup_t_contract$_Reserves_$2239(value) -> cleaned {\n        cleaned := cleanup_t_address_payable(value)\n    }\n\n    function validator_revert_t_contract$_Reserves_$2239(value) {\n        if iszero(eq(value, cleanup_t_contract$_Reserves_$2239(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Reserves_$2239_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Reserves_$2239(value)\n    }\n\n    function cleanup_t_contract$_PriceFeed_$2011(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_PriceFeed_$2011(value) {\n        if iszero(eq(value, cleanup_t_contract$_PriceFeed_$2011(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_PriceFeed_$2011_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_PriceFeed_$2011(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Avax_$60t_contract$_LiquidityPool_$1976t_contract$_Reserves_$2239t_contract$_PriceFeed_$2011_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Avax_$60_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_LiquidityPool_$1976_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_Reserves_$2239_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_contract$_PriceFeed_$2011_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14670:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:6",
                "type": ""
              }
            ],
            "src": "7:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:6",
                "type": ""
              }
            ],
            "src": "334:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:6",
                "type": ""
              }
            ],
            "src": "417:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:6",
                "type": ""
              }
            ],
            "src": "545:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "773:391:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "819:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "821:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "821:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "821:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "794:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "803:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "790:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "790:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "815:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "786:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "786:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "783:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "912:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "927:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "941:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "931:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "956:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "991:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1002:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "987:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "987:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1011:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "966:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "966:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "956:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1039:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1054:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1068:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1058:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1084:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1119:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1130:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1115:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1115:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1139:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1094:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1094:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1084:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "735:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "746:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "758:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "766:6:6",
                "type": ""
              }
            ],
            "src": "690:474:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1235:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1252:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1275:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1257:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1257:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1245:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1245:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1245:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1223:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1230:3:6",
                "type": ""
              }
            ],
            "src": "1170:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1392:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1402:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1414:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1425:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1410:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1410:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1402:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1482:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1495:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1506:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1491:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1491:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1438:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1438:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1438:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1364:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1376:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1387:4:6",
                "type": ""
              }
            ],
            "src": "1294:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1567:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1577:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1592:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1599:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1588:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1588:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1577:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1549:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1559:7:6",
                "type": ""
              }
            ],
            "src": "1522:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1699:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1709:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1738:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1720:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1720:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1709:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1681:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1691:7:6",
                "type": ""
              }
            ],
            "src": "1654:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1821:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1838:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1861:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1843:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1843:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1831:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1831:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1831:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1809:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1816:3:6",
                "type": ""
              }
            ],
            "src": "1756:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1978:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1988:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2000:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2011:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1996:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1996:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1988:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2068:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2081:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2092:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2077:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2077:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2024:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2024:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2024:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1950:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1962:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1973:4:6",
                "type": ""
              }
            ],
            "src": "1880:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2174:263:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2220:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2222:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2222:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2222:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2195:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2204:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2191:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2191:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2216:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2187:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2187:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2184:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2313:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2328:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2342:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2332:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2357:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2392:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2403:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2388:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2388:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2412:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2367:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2367:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2357:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2144:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2155:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2167:6:6",
                "type": ""
              }
            ],
            "src": "2108:329:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2471:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2488:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2491:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2481:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2481:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2481:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2585:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2588:4:6",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2578:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2578:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2578:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2609:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2612:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2602:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2602:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2602:15:6"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2443:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2677:362:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2687:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2710:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2692:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2692:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "2687:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2721:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2744:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2726:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2726:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "2721:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2755:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2778:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2781:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2774:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2774:9:6"
                  },
                  "variables": [
                    {
                      "name": "product_raw",
                      "nodeType": "YulTypedName",
                      "src": "2759:11:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2792:41:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "product_raw",
                        "nodeType": "YulIdentifier",
                        "src": "2821:11:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2803:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2803:30:6"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "2792:7:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3010:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3012:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3012:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3012:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2943:1:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2936:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2936:9:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "2966:1:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "2973:7:6"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2982:1:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "2969:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2969:15:6"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "2963:2:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2963:22:6"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "2916:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2916:83:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2896:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2896:113:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2893:139:6"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2660:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2663:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "2669:7:6",
                "type": ""
              }
            ],
            "src": "2629:410:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3073:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3090:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3093:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3083:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3083:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3083:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3187:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3190:4:6",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3180:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3180:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3180:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3211:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3214:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3204:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3204:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3204:15:6"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "3045:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3273:143:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3283:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3306:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3288:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3288:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3283:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3317:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3340:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3322:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3322:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3317:1:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3364:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "3366:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3366:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3366:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3361:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3354:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3354:9:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3351:35:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3396:14:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3405:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3408:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3401:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3401:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "3396:1:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3262:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3265:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "3271:1:6",
                "type": ""
              }
            ],
            "src": "3231:185:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3518:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3535:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3540:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3528:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3528:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3528:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3556:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3575:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3580:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3571:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3571:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3556:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3490:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3495:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3506:11:6",
                "type": ""
              }
            ],
            "src": "3422:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3703:117:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3725:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3733:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3721:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3721:14:6"
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520616e79206f75747374616e64696e6720",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3737:34:6",
                        "type": "",
                        "value": "You do not have any outstanding "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3714:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3714:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3714:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3793:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3801:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3789:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3789:15:6"
                      },
                      {
                        "hexValue": "64656274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3806:6:6",
                        "type": "",
                        "value": "debt"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3782:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3782:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3782:31:6"
                }
              ]
            },
            "name": "store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3695:6:6",
                "type": ""
              }
            ],
            "src": "3597:223:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3972:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3982:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4048:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4053:2:6",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3989:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3989:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3982:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4154:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
                      "nodeType": "YulIdentifier",
                      "src": "4065:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4065:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4065:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4167:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4178:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4183:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4174:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4174:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4167:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3960:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3968:3:6",
                "type": ""
              }
            ],
            "src": "3826:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4369:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4379:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4391:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4402:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4387:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4387:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4379:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4426:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4437:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4422:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4422:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4445:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4451:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4441:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4441:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4415:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4415:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4415:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4471:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4605:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4479:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4479:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4471:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4349:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4364:4:6",
                "type": ""
              }
            ],
            "src": "4198:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4729:76:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4751:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4759:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4747:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4747:14:6"
                      },
                      {
                        "hexValue": "596f7520646f206e6f742068617665206f75747374616e64696e672064656274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4763:34:6",
                        "type": "",
                        "value": "You do not have outstanding debt"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4740:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4740:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4740:58:6"
                }
              ]
            },
            "name": "store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4721:6:6",
                "type": ""
              }
            ],
            "src": "4623:182:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4957:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4967:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5033:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5038:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4974:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4974:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4967:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5139:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
                      "nodeType": "YulIdentifier",
                      "src": "5050:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5050:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5050:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5152:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5163:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5168:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5159:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5159:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5152:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4945:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4953:3:6",
                "type": ""
              }
            ],
            "src": "4811:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5354:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5364:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5376:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5387:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5372:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5372:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5364:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5411:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5422:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5407:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5407:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5430:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5436:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5426:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5426:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5400:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5400:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5400:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5456:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5590:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5464:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5464:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5456:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5334:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5349:4:6",
                "type": ""
              }
            ],
            "src": "5183:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5714:70:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5736:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5744:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5732:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5732:14:6"
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5748:28:6",
                        "type": "",
                        "value": "Please put more collateral"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5725:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5725:52:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5725:52:6"
                }
              ]
            },
            "name": "store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5706:6:6",
                "type": ""
              }
            ],
            "src": "5608:176:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5936:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5946:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6012:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6017:2:6",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5953:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5953:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5946:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6118:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                      "nodeType": "YulIdentifier",
                      "src": "6029:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6029:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6029:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6131:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6142:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6147:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6138:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6138:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6131:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5924:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5932:3:6",
                "type": ""
              }
            ],
            "src": "5790:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6333:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6343:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6355:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6366:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6351:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6351:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6343:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6390:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6401:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6386:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6386:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6409:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6415:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6405:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6405:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6379:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6379:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6379:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6435:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6569:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6443:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6443:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6435:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6313:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6328:4:6",
                "type": ""
              }
            ],
            "src": "6162:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6650:80:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6660:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6675:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6669:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6669:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6660:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6718:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6691:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6691:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6691:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6628:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6636:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6644:5:6",
                "type": ""
              }
            ],
            "src": "6587:143:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6813:274:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6859:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6861:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6861:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6861:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6834:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6843:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6830:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6830:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6855:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6826:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6826:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "6823:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6952:128:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6967:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6981:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6971:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6996:74:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7042:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7053:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7038:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7038:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7062:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "7006:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7006:64:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6996:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6783:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6794:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6806:6:6",
                "type": ""
              }
            ],
            "src": "6736:351:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7137:147:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7147:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7170:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7152:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7152:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7147:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7181:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7204:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7186:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7186:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7181:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7215:16:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7226:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7229:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7222:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7222:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7215:3:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7255:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7257:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7257:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7257:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7247:1:6"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "7250:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7244:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7244:10:6"
                  },
                  "nodeType": "YulIf",
                  "src": "7241:36:6"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7124:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7127:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7133:3:6",
                "type": ""
              }
            ],
            "src": "7093:191:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7396:127:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7418:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7426:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7414:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7414:14:6"
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768205553444320746f2072",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7430:34:6",
                        "type": "",
                        "value": "You do not have enough USDC to r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7407:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7407:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7407:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7486:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7494:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7482:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7482:15:6"
                      },
                      {
                        "hexValue": "6570617920746869732064656274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7499:16:6",
                        "type": "",
                        "value": "epay this debt"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7475:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7475:41:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7475:41:6"
                }
              ]
            },
            "name": "store_literal_in_memory_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7388:6:6",
                "type": ""
              }
            ],
            "src": "7290:233:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7675:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7685:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7751:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7756:2:6",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7692:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7692:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7685:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7857:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8",
                      "nodeType": "YulIdentifier",
                      "src": "7768:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7768:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7768:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7870:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7881:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7886:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7877:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7877:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7870:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7663:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7671:3:6",
                "type": ""
              }
            ],
            "src": "7529:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8072:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8082:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8094:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8105:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8090:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8090:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8082:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8129:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8140:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8125:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8125:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8148:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8154:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8144:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8144:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8118:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8118:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8118:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8174:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8308:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8182:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8182:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8174:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8052:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8067:4:6",
                "type": ""
              }
            ],
            "src": "7901:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8432:115:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8454:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8462:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8450:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8450:14:6"
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8466:34:6",
                        "type": "",
                        "value": "You do not have enough AVAX toke"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8443:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8443:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8443:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8522:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8530:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8518:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8518:15:6"
                      },
                      {
                        "hexValue": "6e21",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8535:4:6",
                        "type": "",
                        "value": "n!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8511:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8511:29:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8511:29:6"
                }
              ]
            },
            "name": "store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8424:6:6",
                "type": ""
              }
            ],
            "src": "8326:221:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8699:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8709:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8775:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8780:2:6",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8716:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8716:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8709:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8881:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                      "nodeType": "YulIdentifier",
                      "src": "8792:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8792:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8792:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8894:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8905:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8910:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8901:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8901:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8894:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8687:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8695:3:6",
                "type": ""
              }
            ],
            "src": "8553:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9096:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9106:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9118:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9129:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9114:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9114:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9106:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9153:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9164:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9149:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9149:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9172:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9178:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9168:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9168:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9142:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9142:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9142:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9198:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9332:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9206:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9206:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9198:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9076:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9091:4:6",
                "type": ""
              }
            ],
            "src": "8925:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9504:288:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9514:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9526:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9537:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9522:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9522:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9514:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9594:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9607:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9618:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9603:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9603:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9550:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9550:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9550:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9675:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9688:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9699:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9684:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9684:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9631:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9631:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9631:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9757:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9770:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9781:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9766:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9766:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9713:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9713:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9713:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9460:9:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9472:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9480:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9488:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9499:4:6",
                "type": ""
              }
            ],
            "src": "9350:442:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9840:48:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9850:32:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9875:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9868:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9868:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9861:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9861:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9850:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9822:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9832:7:6",
                "type": ""
              }
            ],
            "src": "9798:90:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9934:76:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9988:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9997:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10000:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9990:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9990:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9990:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9957:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9979:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "9964:14:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9964:21:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9954:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9954:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9947:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9947:40:6"
                  },
                  "nodeType": "YulIf",
                  "src": "9944:60:6"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9927:5:6",
                "type": ""
              }
            ],
            "src": "9894:116:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10076:77:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10086:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10101:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10095:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10095:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "10086:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10141:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "10117:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10117:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10117:30:6"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "10054:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10062:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10070:5:6",
                "type": ""
              }
            ],
            "src": "10016:137:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10233:271:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10279:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "10281:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10281:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10281:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10254:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10263:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10250:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10250:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10275:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10246:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10246:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10243:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10372:125:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10387:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10401:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10391:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10416:71:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10459:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10470:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10455:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10455:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10479:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10426:28:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10426:61:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10416:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10203:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10214:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10226:6:6",
                "type": ""
              }
            ],
            "src": "10159:345:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10555:149:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10565:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10588:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10570:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10570:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10565:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10599:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10622:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10604:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10604:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10599:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10633:17:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10645:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10648:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10641:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10641:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "10633:4:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10675:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10677:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10677:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10677:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "10666:4:6"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10672:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10663:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10663:11:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10660:37:6"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10541:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10544:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "10550:4:6",
                "type": ""
              }
            ],
            "src": "10510:194:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10753:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10810:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10819:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10822:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10812:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10812:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10812:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10776:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10801:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "10783:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10783:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10773:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10773:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10766:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10766:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10763:63:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10746:5:6",
                "type": ""
              }
            ],
            "src": "10710:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10901:80:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10911:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10926:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10920:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10920:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "10911:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10969:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "10942:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10942:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10942:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "10879:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10887:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10895:5:6",
                "type": ""
              }
            ],
            "src": "10838:143:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11064:274:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11110:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "11112:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11112:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11112:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11085:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11094:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11081:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11081:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11106:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11077:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11077:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "11074:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11203:128:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11218:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11232:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "11222:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11247:74:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11293:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11304:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11289:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11289:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11313:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "11257:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11257:64:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "11247:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11034:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11045:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11057:6:6",
                "type": ""
              }
            ],
            "src": "10987:351:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11372:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11389:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11392:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11382:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11382:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11382:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11486:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11489:4:6",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11479:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11479:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11479:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11510:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11513:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11503:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11503:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11503:15:6"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "11344:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11573:190:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11583:33:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11610:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11592:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11592:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11583:5:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11706:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11708:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11708:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11708:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11631:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11638:66:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "11628:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11628:77:6"
                  },
                  "nodeType": "YulIf",
                  "src": "11625:103:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11737:20:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11748:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11755:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11744:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11744:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "11737:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11559:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "11569:3:6",
                "type": ""
              }
            ],
            "src": "11530:233:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11875:72:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11897:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11905:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11893:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11893:14:6"
                      },
                      {
                        "hexValue": "56616c756520696e736572746564206973206e6f7420656e6f756768",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11909:30:6",
                        "type": "",
                        "value": "Value inserted is not enough"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11886:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11886:54:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11886:54:6"
                }
              ]
            },
            "name": "store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11867:6:6",
                "type": ""
              }
            ],
            "src": "11769:178:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12099:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12109:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12175:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12180:2:6",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12116:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12116:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12109:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12281:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
                      "nodeType": "YulIdentifier",
                      "src": "12192:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12192:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12192:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12294:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12305:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12310:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12301:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12301:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12294:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12087:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12095:3:6",
                "type": ""
              }
            ],
            "src": "11953:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12496:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12506:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12518:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12529:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12514:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12514:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12506:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12553:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12564:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12549:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12549:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12572:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12578:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12568:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12568:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12542:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12542:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12542:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12598:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12732:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12606:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12606:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12598:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12476:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12491:4:6",
                "type": ""
              }
            ],
            "src": "12325:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12856:49:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12878:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12886:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12874:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12874:14:6"
                      },
                      {
                        "hexValue": "4552524f52",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12890:7:6",
                        "type": "",
                        "value": "ERROR"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12867:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12867:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12867:31:6"
                }
              ]
            },
            "name": "store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12848:6:6",
                "type": ""
              }
            ],
            "src": "12750:155:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13057:219:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13067:73:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13133:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13138:1:6",
                        "type": "",
                        "value": "5"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13074:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13074:66:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13067:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13238:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
                      "nodeType": "YulIdentifier",
                      "src": "13149:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13149:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13149:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13251:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13262:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13267:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13258:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13258:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13251:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13045:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13053:3:6",
                "type": ""
              }
            ],
            "src": "12911:365:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13453:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13463:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13475:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13486:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13471:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13471:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13463:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13510:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13521:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13506:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13506:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13529:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13535:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13525:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13525:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13499:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13499:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13499:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13555:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13689:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13563:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13563:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13555:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13433:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13448:4:6",
                "type": ""
              }
            ],
            "src": "13282:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13760:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13770:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13799:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "13781:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13781:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13770:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13742:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13752:7:6",
                "type": ""
              }
            ],
            "src": "13707:104:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13898:61:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13915:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13946:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "13920:25:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13920:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13908:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13908:45:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13908:45:6"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13886:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13893:3:6",
                "type": ""
              }
            ],
            "src": "13817:142:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14107:222:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14117:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14129:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14140:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14125:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14125:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14117:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14197:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14210:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14221:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14206:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14206:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14153:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14153:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14153:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14294:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14307:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14318:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14303:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14303:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14234:59:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14234:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14234:88:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14071:9:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14083:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14091:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14102:4:6",
                "type": ""
              }
            ],
            "src": "13965:364:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14461:206:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14471:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14483:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14494:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14479:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14479:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14471:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14551:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14564:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14575:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14560:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14560:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14507:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14507:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14507:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14632:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14645:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14656:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14641:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14641:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14588:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14588:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14588:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14425:9:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14437:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14445:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14456:4:6",
                "type": ""
              }
            ],
            "src": "14335:332:6"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have any outstanding \")\n\n        mstore(add(memPtr, 32), \"debt\")\n\n    }\n\n    function abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have outstanding debt\")\n\n    }\n\n    function abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please put more collateral\")\n\n    }\n\n    function abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have enough USDC to r\")\n\n        mstore(add(memPtr, 32), \"epay this debt\")\n\n    }\n\n    function abi_encode_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have enough AVAX toke\")\n\n        mstore(add(memPtr, 32), \"n!\")\n\n    }\n\n    function abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Value inserted is not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR\")\n\n    }\n\n    function abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n        store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address_payable__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "181:11335:2:-:0;;;341:4;305:40;;393:3;371:25;;448:10;427:31;;;;;;;;;;;;;;;;;;;;1083:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1199:16;1187:9;;:28;;;;;;;;;;;;;;;;;;1241:2;1225:13;;:18;;;;;;;;;;;;;;;;;;1264:15;1253:8;;:26;;;;;;;;;;;;;;;;;;1301:2;1289:9;;:14;;;;;;;;;;;;;;;;;;1083:227;;;;181:11335;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:107::-;616:7;645:24;663:5;645:24;:::i;:::-;634:35;;568:107;;;:::o;681:144::-;765:35;794:5;765:35;:::i;:::-;758:5;755:46;745:74;;815:1;812;805:12;745:74;681:144;:::o;831:165::-;899:5;930:6;924:13;915:22;;946:44;984:5;946:44;:::i;:::-;831:165;;;;:::o;1002:104::-;1047:7;1076:24;1094:5;1076:24;:::i;:::-;1065:35;;1002:104;;;:::o;1112:126::-;1171:7;1200:32;1226:5;1200:32;:::i;:::-;1189:43;;1112:126;;;:::o;1244:166::-;1339:46;1379:5;1339:46;:::i;:::-;1332:5;1329:57;1319:85;;1400:1;1397;1390:12;1319:85;1244:166;:::o;1416:187::-;1495:5;1526:6;1520:13;1511:22;;1542:55;1591:5;1542:55;:::i;:::-;1416:187;;;;:::o;1609:121::-;1663:7;1692:32;1718:5;1692:32;:::i;:::-;1681:43;;1609:121;;;:::o;1736:156::-;1826:41;1861:5;1826:41;:::i;:::-;1819:5;1816:52;1806:80;;1882:1;1879;1872:12;1806:80;1736:156;:::o;1898:177::-;1972:5;2003:6;1997:13;1988:22;;2019:50;2063:5;2019:50;:::i;:::-;1898:177;;;;:::o;2081:114::-;2136:7;2165:24;2183:5;2165:24;:::i;:::-;2154:35;;2081:114;;;:::o;2201:158::-;2292:42;2328:5;2292:42;:::i;:::-;2285:5;2282:53;2272:81;;2349:1;2346;2339:12;2272:81;2201:158;:::o;2365:179::-;2440:5;2471:6;2465:13;2456:22;;2487:51;2532:5;2487:51;:::i;:::-;2365:179;;;;:::o;2550:956::-;2715:6;2723;2731;2739;2788:3;2776:9;2767:7;2763:23;2759:33;2756:120;;;2795:79;;:::i;:::-;2756:120;2915:1;2940:75;3007:7;2998:6;2987:9;2983:22;2940:75;:::i;:::-;2930:85;;2886:139;3064:2;3090:86;3168:7;3159:6;3148:9;3144:22;3090:86;:::i;:::-;3080:96;;3035:151;3225:2;3251:81;3324:7;3315:6;3304:9;3300:22;3251:81;:::i;:::-;3241:91;;3196:146;3381:2;3407:82;3481:7;3472:6;3461:9;3457:22;3407:82;:::i;:::-;3397:92;;3352:147;2550:956;;;;;;;:::o;181:11335:2:-;;;;;;;",
  "deployedSourceMap": "181:11335:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10359:169;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10852:124;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6452:530;;;:::i;:::-;;10982:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2456:1475;;;;;;;;;;;;;:::i;:::-;;6993:1566;;;:::i;:::-;;10534:124;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5566:880;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9539:137;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9682:140;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8576:957;;;:::i;:::-;;3937:539;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9855:133;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1352:1098;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4483:1040;;;;;;;;;;;;;:::i;:::-;;9994:136;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10664:110;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10359:169;10455:7;10515:6;10501:10;10482:16;:29;;;;:::i;:::-;10481:40;;;;:::i;:::-;10474:47;;10359:169;;;;:::o;10852:124::-;10915:7;11154:1;11125:14;:26;11140:10;11125:26;;;;;;;;;;;;;;;;:30;11117:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;10942:14:::1;:26;10957:10;10942:26;;;;;;;;;;;;;;;;10934:35;;10852:124:::0;:::o;6452:530::-;11295:1;11267:13;:25;11281:10;11267:25;;;;;;;;;;;;;;;;:29;11259:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;6525:23:::1;6551:9;6525:35;;6597:1;6578:15;:20:::0;6570:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;6639:28;6688:19;6670:15;:37;;;;:::i;:::-;6639:68;;6717:28;6802:9;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6779:20;:51;;;;:::i;:::-;6756:74;;6885:15;6850:19;:31;6870:10;6850:31;;;;;;;;;;;;;;;;:50;;;;;;;:::i;:::-;;;;;;;;6955:20;6910:29;:41;6940:10;6910:41;;;;;;;;;;;;;;;;:65;;;;;;;:::i;:::-;;;;;;;;6515:467;;;6452:530::o:0;10982:89::-;11025:7;11059:4;11044:20;;10982:89;:::o;2456:1475::-;11154:1;11125:14;:26;11140:10;11125:26;;;;;;;;;;;;;;;;:30;11117:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;11444:1:::1;11410:9:::0;::::1;;;;;;;;;;:19;;;11430:10;11410:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;11402:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;2595:22:::2;2620:14;:26;2635:10;2620:26;;;;;;;;;;;;;;;;2595:51;;2743:14;2708:9;::::0;::::2;;;;;;;;:19;;;2728:10;2708:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;2699:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;2807:24;2834:20;:32;2855:10;2834:32;;;;;;;;;;;;;;;;2807:59;;2931:9;::::0;::::2;;;;;;;;:22;;;2954:10;2974:4;2981:14;2931:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3069:26;3098:50;3118:16;3136:11;;3098:19;:50::i;:::-;3069:79;;3201:9;::::0;::::2;;;;;;;;:22;;;3232:4;3239:10;3271:18;3252:16;:37;;;;:::i;:::-;3201:90;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3326:9;::::0;::::2;;;;;;;;:22;;;3357:4;3364:8;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3395:18;3326:88;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3470:20;:32;3491:10;3470:32;;;;;;;;;;;;;;;3463:39;;;3564:14;:26;3579:10;3564:26;;;;;;;;;;;;;;;3557:33;;;3652:30;:42;3683:10;3652:42;;;;;;;;;;;;;;;3645:49;;;3752:1;3704:32;:44;3737:10;3704:44;;;;;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;;;;;3769:9;3764:161;3788:11;:18;;;;3784:1;:22;3764:161;;;3849:10;3831:28;;:11;3843:1;3831:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:28;;::::0;3827:88:::2;;3886:11;3898:1;3886:14;;;;;;;;:::i;:::-;;;;;;;;;;3879:21;;;;;;;;;;;3827:88;3808:3;;;;;:::i;:::-;;;;3764:161;;;;2526:1405;;;2456:1475::o:0;6993:1566::-;11295:1;11267:13;:25;11281:10;11267:25;;;;;;;;;;;;;;;;:29;11259:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7121:22:::1;7146:13;:25;7160:10;7146:25;;;;;;;;;;;;;;;;7121:50;;7246:14;7233:9;:27;;7224:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;7303:24;7330:19;:31;7350:10;7330:31;;;;;;;;;;;;;;;;7303:58;;7434:26;7463:50;7483:16;7501:11;;7463:19;:50::i;:::-;7434:79;;7566:29;7607:10;7566:52;;7628:13;:22;;:61;7670:18;7651:16;:37;;;;:::i;:::-;7628:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;7759:14;7734:21;:39;;7725:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;7793:25;7830:13;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7793:66;;7869:9;:18;;:34;7888:14;7869:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;7954:31;7996:8;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7954:72;;8036:15;:24;;:44;8061:18;8036:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;8098:19;:31;8118:10;8098:31;;;;;;;;;;;;;;;8091:38;;;8191:13;:25;8205:10;8191:25;;;;;;;;;;;;;;;8184:32;;;8278:29;:41;8308:10;8278:41;;;;;;;;;;;;;;;8271:48;;;8375:1;8329:30;:42;8360:10;8329:42;;;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;;;;;;;8400:9;8395:158;8419:10;:17;;;;8415:1;:21;8395:158;;;8478:10;8461:27;;:10;8472:1;8461:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:27;;::::0;8457:86:::1;;8515:10;8526:1;8515:13;;;;;;;;:::i;:::-;;;;;;;;;;8508:20;;;;;;;;;;;8457:86;8438:3;;;;;:::i;:::-;;;;8395:158;;;;7046:1513;;;;;;6993:1566::o:0;10534:124::-;10591:7;10617:9;;;;;;;;;;;:19;;;10645:4;10617:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10610:41;;10534:124;:::o;5566:880::-;5611:7;5630:25;5658:9;5630:37;;5706:1;5685:17;:22;5677:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5748:30;5801:19;5781:17;:39;;;;:::i;:::-;5748:72;;5830:30;5871:10;5887;5871:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5958:9;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5933:22;:53;;;;:::i;:::-;5908:78;;6006:19;6028:65;6048:17;6067:25;;6028:19;:65::i;:::-;6006:87;;6157:17;6123:19;:31;6143:10;6123:31;;;;;;;;;;;;;;;:51;;;;6212:11;6184:13;:25;6198:10;6184:25;;;;;;;;;;;;;;;:39;;;;6277:22;6233:29;:41;6263:10;6233:41;;;;;;;;;;;;;;;:66;;;;6318:13;;;;;;;;;;;:29;;;6348:11;6369:10;6318:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6398:29;:41;6428:10;6398:41;;;;;;;;;;;;;;;;6391:48;;;;;;5566:880;:::o;9539:137::-;9601:7;9627:30;:42;9658:10;9627:42;;;;;;;;;;;;;;;;9620:49;;9539:137;:::o;9682:140::-;9745:7;9771:32;:44;9804:10;9771:44;;;;;;;;;;;;;;;;9764:51;;9682:140;:::o;8576:957::-;8625:25;8653:9;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8625:62;;8702:6;8697:830;8718:10;:17;;;;8714:1;:21;8697:830;;;8756:26;8844:19;8807;:34;8827:10;8838:1;8827:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8807:34;;;;;;;;;;;;;;;;:56;;;;:::i;:::-;8786:17;:78;;;;:::i;:::-;8756:109;;8905:29;:44;8935:10;8946:1;8935:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8905:44;;;;;;;;;;;;;;;;8883:18;:66;8879:638;;9031:29;9072:13;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9031:70;;9119:13;:22;;:58;9142:19;:34;9162:10;9173:1;9162:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9142:34;;;;;;;;;;;;;;;;9119:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9203:19;:34;9223:10;9234:1;9223:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9203:34;;;;;;;;;;;;;;;9196:41;;;9314:13;:28;9328:10;9339:1;9328:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9314:28;;;;;;;;;;;;;;;9307:35;;;9419:29;:44;9449:10;9460:1;9449:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9419:44;;;;;;;;;;;;;;;9412:51;;;9489:10;9500:1;9489:13;;;;;;;;:::i;:::-;;;;;;;;;;9482:20;;;;;;;;;;;8951:566;8879:638;8742:785;8737:3;;;;;:::i;:::-;;;;8697:830;;;;8615:918;8576:957::o;3937:539::-;11154:1;11125:14;:26;11140:10;11125:26;;;;;;;;;;;;;;;;:30;11117:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;4063:1:::1;4044:15;:20:::0;4036:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4149:15;4114:9;::::0;::::1;;;;;;;;:19;;;4134:10;4114:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;4105:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;4213:28;4293:9;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4275:15;:47;;;;:::i;:::-;4252:70;;4378:15;4342:20;:32;4363:10;4342:32;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;4449:20;4403:30;:42;4434:10;4403:42;;;;;;;;;;;;;;;;:66;;;;;;;:::i;:::-;;;;;;;;4017:459;3937:539:::0;:::o;9855:133::-;9914:7;9978:3;9932:30;:42;9963:10;9932:42;;;;;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;;;;;9855:133;:::o;1352:1098::-;1445:1;1424:17;:22;1416:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1531:17;1496:9;;;;;;;;;;:19;;;1516:10;1496:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;1487:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;1597:11;1614:10;1597:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1635:19;1657:65;1677:17;1696:25;;1657:19;:65::i;:::-;1635:87;;1788:17;1753:20;:32;1774:10;1753:32;;;;;;;;;;;;;;;:52;;;;1844:11;1815:14;:26;1830:10;1815:26;;;;;;;;;;;;;;;:40;;;;1866:30;1899:17;1866:50;;1980:22;1935:30;:42;1966:10;1935:42;;;;;;;;;;;;;;;:67;;;;2013:27;2043:13;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2013:58;;2081:9;;;;;;;;;;:22;;;2104:10;2124:4;2131:17;2081:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2207:13;;;;;;;;;;;:39;;;2247:11;2268:4;2207:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2326:9;;;;;;;;;;:22;;;2357:4;2364:10;2376:11;2326:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1406:1044;;;1352:1098;:::o;4483:1040::-;4525:26;4554:9;;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4525:64;;4604:6;4599:918;4620:11;:18;;;;4616:1;:22;4599:918;;;4659:26;4711:20;:36;4732:11;4744:1;4732:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4711:36;;;;;;;;;;;;;;;;4689:18;:59;;;;:::i;:::-;4659:90;;4789:30;:46;4820:11;4832:1;4820:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4789:46;;;;;;;;;;;;;;;;4767:18;:68;4763:744;;4997:22;5022:11;5034:1;5022:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4997:39;;5055:9;;;;;;;;;;:22;;;5086:4;5093:13;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5123:20;:36;5144:14;5123:36;;;;;;;;;;;;;;;;5055:105;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5186:20;:36;5207:11;5219:1;5207:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5186:36;;;;;;;;;;;;;;;5179:43;;;5299:14;:30;5314:11;5326:1;5314:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5299:30;;;;;;;;;;;;;;;5292:37;;;5406:30;:46;5437:11;5449:1;5437:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5406:46;;;;;;;;;;;;;;;5399:53;;;5478:11;5490:1;5478:14;;;;;;;;:::i;:::-;;;;;;;;;;5471:21;;;;;;;;;;;4837:670;4763:744;4645:872;4640:3;;;;;:::i;:::-;;;;4599:918;;;;4515:1008;4483:1040::o;9994:136::-;10054:7;10120:3;10072:32;:44;10105:10;10072:44;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;9994:136;:::o;10664:110::-;10720:7;10746:21;10739:28;;10664:110;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:118::-;1257:24;1275:5;1257:24;:::i;:::-;1252:3;1245:37;1170:118;;:::o;1294:222::-;1387:4;1425:2;1414:9;1410:18;1402:26;;1438:71;1506:1;1495:9;1491:17;1482:6;1438:71;:::i;:::-;1294:222;;;;:::o;1522:126::-;1559:7;1599:42;1592:5;1588:54;1577:65;;1522:126;;;:::o;1654:96::-;1691:7;1720:24;1738:5;1720:24;:::i;:::-;1709:35;;1654:96;;;:::o;1756:118::-;1843:24;1861:5;1843:24;:::i;:::-;1838:3;1831:37;1756:118;;:::o;1880:222::-;1973:4;2011:2;2000:9;1996:18;1988:26;;2024:71;2092:1;2081:9;2077:17;2068:6;2024:71;:::i;:::-;1880:222;;;;:::o;2108:329::-;2167:6;2216:2;2204:9;2195:7;2191:23;2187:32;2184:119;;;2222:79;;:::i;:::-;2184:119;2342:1;2367:53;2412:7;2403:6;2392:9;2388:22;2367:53;:::i;:::-;2357:63;;2313:117;2108:329;;;;:::o;2443:180::-;2491:77;2488:1;2481:88;2588:4;2585:1;2578:15;2612:4;2609:1;2602:15;2629:410;2669:7;2692:20;2710:1;2692:20;:::i;:::-;2687:25;;2726:20;2744:1;2726:20;:::i;:::-;2721:25;;2781:1;2778;2774:9;2803:30;2821:11;2803:30;:::i;:::-;2792:41;;2982:1;2973:7;2969:15;2966:1;2963:22;2943:1;2936:9;2916:83;2893:139;;3012:18;;:::i;:::-;2893:139;2677:362;2629:410;;;;:::o;3045:180::-;3093:77;3090:1;3083:88;3190:4;3187:1;3180:15;3214:4;3211:1;3204:15;3231:185;3271:1;3288:20;3306:1;3288:20;:::i;:::-;3283:25;;3322:20;3340:1;3322:20;:::i;:::-;3317:25;;3361:1;3351:35;;3366:18;;:::i;:::-;3351:35;3408:1;3405;3401:9;3396:14;;3231:185;;;;:::o;3422:169::-;3506:11;3540:6;3535:3;3528:19;3580:4;3575:3;3571:14;3556:29;;3422:169;;;;:::o;3597:223::-;3737:34;3733:1;3725:6;3721:14;3714:58;3806:6;3801:2;3793:6;3789:15;3782:31;3597:223;:::o;3826:366::-;3968:3;3989:67;4053:2;4048:3;3989:67;:::i;:::-;3982:74;;4065:93;4154:3;4065:93;:::i;:::-;4183:2;4178:3;4174:12;4167:19;;3826:366;;;:::o;4198:419::-;4364:4;4402:2;4391:9;4387:18;4379:26;;4451:9;4445:4;4441:20;4437:1;4426:9;4422:17;4415:47;4479:131;4605:4;4479:131;:::i;:::-;4471:139;;4198:419;;;:::o;4623:182::-;4763:34;4759:1;4751:6;4747:14;4740:58;4623:182;:::o;4811:366::-;4953:3;4974:67;5038:2;5033:3;4974:67;:::i;:::-;4967:74;;5050:93;5139:3;5050:93;:::i;:::-;5168:2;5163:3;5159:12;5152:19;;4811:366;;;:::o;5183:419::-;5349:4;5387:2;5376:9;5372:18;5364:26;;5436:9;5430:4;5426:20;5422:1;5411:9;5407:17;5400:47;5464:131;5590:4;5464:131;:::i;:::-;5456:139;;5183:419;;;:::o;5608:176::-;5748:28;5744:1;5736:6;5732:14;5725:52;5608:176;:::o;5790:366::-;5932:3;5953:67;6017:2;6012:3;5953:67;:::i;:::-;5946:74;;6029:93;6118:3;6029:93;:::i;:::-;6147:2;6142:3;6138:12;6131:19;;5790:366;;;:::o;6162:419::-;6328:4;6366:2;6355:9;6351:18;6343:26;;6415:9;6409:4;6405:20;6401:1;6390:9;6386:17;6379:47;6443:131;6569:4;6443:131;:::i;:::-;6435:139;;6162:419;;;:::o;6587:143::-;6644:5;6675:6;6669:13;6660:22;;6691:33;6718:5;6691:33;:::i;:::-;6587:143;;;;:::o;6736:351::-;6806:6;6855:2;6843:9;6834:7;6830:23;6826:32;6823:119;;;6861:79;;:::i;:::-;6823:119;6981:1;7006:64;7062:7;7053:6;7042:9;7038:22;7006:64;:::i;:::-;6996:74;;6952:128;6736:351;;;;:::o;7093:191::-;7133:3;7152:20;7170:1;7152:20;:::i;:::-;7147:25;;7186:20;7204:1;7186:20;:::i;:::-;7181:25;;7229:1;7226;7222:9;7215:16;;7250:3;7247:1;7244:10;7241:36;;;7257:18;;:::i;:::-;7241:36;7093:191;;;;:::o;7290:233::-;7430:34;7426:1;7418:6;7414:14;7407:58;7499:16;7494:2;7486:6;7482:15;7475:41;7290:233;:::o;7529:366::-;7671:3;7692:67;7756:2;7751:3;7692:67;:::i;:::-;7685:74;;7768:93;7857:3;7768:93;:::i;:::-;7886:2;7881:3;7877:12;7870:19;;7529:366;;;:::o;7901:419::-;8067:4;8105:2;8094:9;8090:18;8082:26;;8154:9;8148:4;8144:20;8140:1;8129:9;8125:17;8118:47;8182:131;8308:4;8182:131;:::i;:::-;8174:139;;7901:419;;;:::o;8326:221::-;8466:34;8462:1;8454:6;8450:14;8443:58;8535:4;8530:2;8522:6;8518:15;8511:29;8326:221;:::o;8553:366::-;8695:3;8716:67;8780:2;8775:3;8716:67;:::i;:::-;8709:74;;8792:93;8881:3;8792:93;:::i;:::-;8910:2;8905:3;8901:12;8894:19;;8553:366;;;:::o;8925:419::-;9091:4;9129:2;9118:9;9114:18;9106:26;;9178:9;9172:4;9168:20;9164:1;9153:9;9149:17;9142:47;9206:131;9332:4;9206:131;:::i;:::-;9198:139;;8925:419;;;:::o;9350:442::-;9499:4;9537:2;9526:9;9522:18;9514:26;;9550:71;9618:1;9607:9;9603:17;9594:6;9550:71;:::i;:::-;9631:72;9699:2;9688:9;9684:18;9675:6;9631:72;:::i;:::-;9713;9781:2;9770:9;9766:18;9757:6;9713:72;:::i;:::-;9350:442;;;;;;:::o;9798:90::-;9832:7;9875:5;9868:13;9861:21;9850:32;;9798:90;;;:::o;9894:116::-;9964:21;9979:5;9964:21;:::i;:::-;9957:5;9954:32;9944:60;;10000:1;9997;9990:12;9944:60;9894:116;:::o;10016:137::-;10070:5;10101:6;10095:13;10086:22;;10117:30;10141:5;10117:30;:::i;:::-;10016:137;;;;:::o;10159:345::-;10226:6;10275:2;10263:9;10254:7;10250:23;10246:32;10243:119;;;10281:79;;:::i;:::-;10243:119;10401:1;10426:61;10479:7;10470:6;10459:9;10455:22;10426:61;:::i;:::-;10416:71;;10372:125;10159:345;;;;:::o;10510:194::-;10550:4;10570:20;10588:1;10570:20;:::i;:::-;10565:25;;10604:20;10622:1;10604:20;:::i;:::-;10599:25;;10648:1;10645;10641:9;10633:17;;10672:1;10666:4;10663:11;10660:37;;;10677:18;;:::i;:::-;10660:37;10510:194;;;;:::o;10710:122::-;10783:24;10801:5;10783:24;:::i;:::-;10776:5;10773:35;10763:63;;10822:1;10819;10812:12;10763:63;10710:122;:::o;10838:143::-;10895:5;10926:6;10920:13;10911:22;;10942:33;10969:5;10942:33;:::i;:::-;10838:143;;;;:::o;10987:351::-;11057:6;11106:2;11094:9;11085:7;11081:23;11077:32;11074:119;;;11112:79;;:::i;:::-;11074:119;11232:1;11257:64;11313:7;11304:6;11293:9;11289:22;11257:64;:::i;:::-;11247:74;;11203:128;10987:351;;;;:::o;11344:180::-;11392:77;11389:1;11382:88;11489:4;11486:1;11479:15;11513:4;11510:1;11503:15;11530:233;11569:3;11592:24;11610:5;11592:24;:::i;:::-;11583:33;;11638:66;11631:5;11628:77;11625:103;;11708:18;;:::i;:::-;11625:103;11755:1;11748:5;11744:13;11737:20;;11530:233;;;:::o;11769:178::-;11909:30;11905:1;11897:6;11893:14;11886:54;11769:178;:::o;11953:366::-;12095:3;12116:67;12180:2;12175:3;12116:67;:::i;:::-;12109:74;;12192:93;12281:3;12192:93;:::i;:::-;12310:2;12305:3;12301:12;12294:19;;11953:366;;;:::o;12325:419::-;12491:4;12529:2;12518:9;12514:18;12506:26;;12578:9;12572:4;12568:20;12564:1;12553:9;12549:17;12542:47;12606:131;12732:4;12606:131;:::i;:::-;12598:139;;12325:419;;;:::o;12750:155::-;12890:7;12886:1;12878:6;12874:14;12867:31;12750:155;:::o;12911:365::-;13053:3;13074:66;13138:1;13133:3;13074:66;:::i;:::-;13067:73;;13149:93;13238:3;13149:93;:::i;:::-;13267:2;13262:3;13258:12;13251:19;;12911:365;;;:::o;13282:419::-;13448:4;13486:2;13475:9;13471:18;13463:26;;13535:9;13529:4;13525:20;13521:1;13510:9;13506:17;13499:47;13563:131;13689:4;13563:131;:::i;:::-;13555:139;;13282:419;;;:::o;13707:104::-;13752:7;13781:24;13799:5;13781:24;:::i;:::-;13770:35;;13707:104;;;:::o;13817:142::-;13920:32;13946:5;13920:32;:::i;:::-;13915:3;13908:45;13817:142;;:::o;13965:364::-;14102:4;14140:2;14129:9;14125:18;14117:26;;14153:71;14221:1;14210:9;14206:17;14197:6;14153:71;:::i;:::-;14234:88;14318:2;14307:9;14303:18;14294:6;14234:88;:::i;:::-;13965:364;;;;;:::o;14335:332::-;14456:4;14494:2;14483:9;14479:18;14471:26;;14507:71;14575:1;14564:9;14560:17;14551:6;14507:71;:::i;:::-;14588:72;14656:2;14645:9;14641:18;14632:6;14588:72;:::i;:::-;14335:332;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\nimport \"./LiquidityPool.sol\";\nimport \"./ERC20.sol\";\nimport \"./Reserves.sol\";\nimport \"./PriceFeed.sol\";\nimport \"./Avax.sol\";\n\ncontract Lending {\n    Avax avaxToken;\n    LiquidityPool liquidityPool;\n    Reserves reserves;\n    PriceFeed priceFeed;\n    uint256 _maximumLendingPercentage = 8500; //85% of collateral\n    uint256 _lendingFee = 500; //5% of total collateral\n    address _debtOwner = msg.sender;\n\n    mapping(address => uint256) AVAXCollateralLedger;\n    mapping(address => uint256) AVAXLoanLedger;\n    mapping(address => uint256) AVAXCollateralValueLedgerinUSD;\n    mapping(address => uint256) AVAXCUserTotalReturnTransactions;\n\n    mapping(address => uint256) ETHCollateralLedger;\n    mapping(address => uint256) ETHLoanLedger;\n    mapping(address => uint256) ETHCollateralValueLedgerinUSD;\n    mapping(address => uint256) ETHUserTotalReturnTransactions;\n\n    address[] ETHDebtors; // keep track who is still has outstanding loans\n    address[] AVAXDebtors; // keep track who is still has outstanding loans\n    \n     constructor(Avax avaxTokenAddress, LiquidityPool lp, Reserves reservesAddress,  PriceFeed pf) {\n        avaxToken = avaxTokenAddress;\n        liquidityPool = lp;\n        reserves = reservesAddress;\n        priceFeed = pf;\n    }\n\n    //Take collateral and give 85% \n    function borrowAVAX(uint256 depositCollateral) public {\n        require(depositCollateral != 0, \"Please put more collateral\");\n        require (avaxToken.balanceOf(msg.sender) >= depositCollateral, \"You do not have enough AVAX token!\");\n        AVAXDebtors.push(msg.sender);\n        uint256 _loanAmount = calculatePercentage(depositCollateral, _maximumLendingPercentage); //85% of collateral\n\n        AVAXCollateralLedger[msg.sender] = depositCollateral;\n        AVAXLoanLedger[msg.sender] = _loanAmount;\n\n        uint256 depositCollateralInUSD = depositCollateral; //in USD\n        AVAXCollateralValueLedgerinUSD[msg.sender] = depositCollateralInUSD;\n\n        address liqudityPoolAddress = liquidityPool.getLPAddress();\n        avaxToken.transferFrom(msg.sender, address(this), depositCollateral); //Transfer borrower collateral to this contract\n        liquidityPool.sendAvaxToLendingContract(_loanAmount, address(this)); // Transfer AVAX from LP to this contract\n        avaxToken.transferFrom(address(this), msg.sender, _loanAmount); //Take assets from Liquidity Pool and send to borrower\n    }\n\n    function repayAVAXDebt() public onlyAVAXDebtHolder enoughAVAXInWallet {\n        //require only the person who loan it can pay back\n        uint256 amountToReturn = AVAXLoanLedger[msg.sender]; //Get amount to return from USDCLoanLedger\n        require (avaxToken.balanceOf(msg.sender) >= amountToReturn, \"You do not have enough AVAX token!\");\n\n        uint256 collateralAmount = AVAXCollateralLedger[msg.sender]; //Get the collteral that is held by the Smart contract\n        avaxToken.transferFrom(msg.sender, address(this), amountToReturn); //Transfer USDC to pay back from wallet to this smart contract\n        uint256 lendingFeeToDeduct = calculatePercentage(collateralAmount, _lendingFee); //Calculate the USDC taken as comission 5%\n        avaxToken.transferFrom(address(this), msg.sender, (collateralAmount - lendingFeeToDeduct)); //Transfer only 95% back\n        avaxToken.transferFrom(address(this), reserves.getReservesAddress(), lendingFeeToDeduct); //Transfer 5% to the reserves\n        \n        delete AVAXCollateralLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete AVAXLoanLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete AVAXCollateralValueLedgerinUSD[msg.sender];\n        AVAXCUserTotalReturnTransactions[msg.sender] += 1;\n\n        for (uint256 i = 0; i < AVAXDebtors.length; i++) {\n            if (AVAXDebtors[i] == msg.sender) {\n                delete AVAXDebtors[i];\n            }\n        }\n    }\n\n    function topUpAVAXCollateral(uint256 topUpCollateral) public onlyAVAXDebtHolder {\n        \n        require(topUpCollateral != 0, \"Please put more collateral\");\n        require (avaxToken.balanceOf(msg.sender) >= topUpCollateral, \"You do not have enough AVAX token!\");\n        uint256 topUpCollateralInUSD; \n        topUpCollateralInUSD = topUpCollateral * priceFeed.getAvaxPriceFirst(); //in USD\n\n        AVAXCollateralLedger[msg.sender] += topUpCollateral;\n        AVAXCollateralValueLedgerinUSD[msg.sender] += topUpCollateralInUSD;\n    }\n\n     function liquidateAVAX() public {\n        uint256 currentPriceOfAVAX = priceFeed.getAvaxPriceToLiquidate();\n        for (uint i = 0; i < AVAXDebtors.length; i++) {\n            uint256 newCollateralPrice = (currentPriceOfAVAX * (AVAXCollateralLedger[AVAXDebtors[i]]));\n            if (newCollateralPrice <= AVAXCollateralValueLedgerinUSD[AVAXDebtors[i]]) {\n                //liquidate by sending collateral to the pool\n                 //addressToSend.transfer(ETHCollateralLedger[ETHDebtors[i]]);\n                 address accountAddress = AVAXDebtors[i];\n                 avaxToken.transferFrom(address(this), liquidityPool.getLPAddress(), AVAXCollateralLedger[accountAddress]);\n                 delete AVAXCollateralLedger[AVAXDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete AVAXLoanLedger[AVAXDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete AVAXCollateralValueLedgerinUSD[AVAXDebtors[i]];\n                 delete AVAXDebtors[i];\n            }\n        }\n    }\n\n     //Take collateral and give 85% \n    function borrowEth() public payable returns (uint256) {\n        uint256 depositCollateral = msg.value;\n        require(depositCollateral != 0, \"Please put more collateral\");\n        uint256 depositCollateralInEth = depositCollateral / 1000000000000000000;\n        uint256 depositCollateralInUSD; \n        ETHDebtors.push(msg.sender);\n        depositCollateralInUSD = depositCollateralInEth * priceFeed.getEthPriceFirst(); //in USD\n\n        uint256 _loanAmount = calculatePercentage(depositCollateral, _maximumLendingPercentage); //85% of collateral\n        ETHCollateralLedger[msg.sender] = depositCollateral;\n        ETHLoanLedger[msg.sender] = _loanAmount;\n        ETHCollateralValueLedgerinUSD[msg.sender] = depositCollateralInUSD;\n        \n        liquidityPool.sendEthToLender(_loanAmount, payable(msg.sender));\n        return ETHCollateralValueLedgerinUSD[msg.sender];\n    }\n\n    function topUpETHCollateral() public payable onlyEthDebtHolder {\n        uint256 topUpCollateral = msg.value;\n        require(topUpCollateral != 0, \"Please put more collateral\");\n        uint256 topUpCollateralInEth = topUpCollateral / 1000000000000000000;\n        uint256 topUpCollateralInUSD; \n        topUpCollateralInUSD = topUpCollateralInEth * priceFeed.getEthPriceFirst(); //in USD\n\n        ETHCollateralLedger[msg.sender] += topUpCollateral;\n        ETHCollateralValueLedgerinUSD[msg.sender] += topUpCollateralInUSD;\n    }\n\n   \n\n    function repayEth() public payable onlyEthDebtHolder {\n        //require only the person who loan it can pay back\n     \n        uint256 amountToReturn = ETHLoanLedger[msg.sender]; //Get amount to return from USDCLoanLedger\n        require (msg.value >= amountToReturn, \"Value inserted is not enough\");\n        uint256 collateralAmount = ETHCollateralLedger[msg.sender]; //Get the collteral that is held by the Smart contract\n       \n        uint256 lendingFeeToDeduct = calculatePercentage(collateralAmount, _lendingFee); //Calculate the USDC taken as comission 5%\n        address payable addressToSend = payable (msg.sender);\n        addressToSend.transfer(collateralAmount - lendingFeeToDeduct);\n        //Send back to LP\n        require (address(this).balance >= amountToReturn, \"ERROR\");\n        address payable lpAddress = payable (liquidityPool.getLPAddress());\n        lpAddress.transfer(amountToReturn);\n\n        //Send comissionFee to reserves\n        address payable reservesAddress = payable(reserves.getReservesAddress());\n        reservesAddress.transfer(lendingFeeToDeduct);\n\n        delete ETHCollateralLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete ETHLoanLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete ETHCollateralValueLedgerinUSD[msg.sender];\n        ETHUserTotalReturnTransactions[msg.sender] += 1;\n        \n        for (uint256 i = 0; i < ETHDebtors.length; i++) {\n            if (ETHDebtors[i] == msg.sender) {\n                delete ETHDebtors[i];\n            }\n        }\n    }\n           \n    function liquidateETH() public payable {\n        uint256 currentPriceOfEth = priceFeed.getEthPriceToLiquidate();\n        for (uint i = 0; i < ETHDebtors.length; i++) {\n            uint256 newCollateralPrice = (currentPriceOfEth * (ETHCollateralLedger[ETHDebtors[i]] / 1000000000000000000));\n            if (newCollateralPrice <= ETHCollateralValueLedgerinUSD[ETHDebtors[i]]) {\n                //liquidate by sending collateral to the pool\n                address payable addressToSend = payable (liquidityPool.getLPAddress());\n                addressToSend.transfer(ETHCollateralLedger[ETHDebtors[i]]);\n                 delete ETHCollateralLedger[ETHDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete ETHLoanLedger[ETHDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete ETHCollateralValueLedgerinUSD[ETHDebtors[i]];\n                 delete ETHDebtors[i];\n            }\n        }\n    }\n\n    function getUserTotaETHRepaymentAmount() public view returns (uint256) {\n        return ETHUserTotalReturnTransactions[msg.sender];\n    }\n\n    function getUserTotaAVAXRepaymentAmount() public view returns (uint256) {\n        return AVAXCUserTotalReturnTransactions[msg.sender];\n    }\n\n    //For testing purposes\n    function initUserTotalEthRepaymentAmount() public returns (uint256) {\n       ETHUserTotalReturnTransactions[msg.sender] += 100;\n    }\n\n    function initUserTotalAVAXRepaymentAmount() public returns (uint256) {\n       AVAXCUserTotalReturnTransactions[msg.sender] += 100;\n    }\n\n    //This function calculates Percentages\n    //Used to calculate the amount of Loan that can be given and platform lendingFees\n    //e.g \n    //Assume collateral = 100, desired percentage = 85%\n    //function returns 85\n\n    function calculatePercentage(uint256 collateralAmount, uint256 percentage) public pure returns (uint256) {\n        return (collateralAmount * percentage) / 10_000;\n    }\n\n    function getHoldingAVAXCollateral() public view returns (uint256) {\n        return avaxToken.balanceOf(address(this));\n    }\n\n    function getHoldingEthCollateral() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    //Functions to return the amount of Debt the msg.sender has in USDC\n    function getAVAXDebt() public view onlyAVAXDebtHolder returns (uint256) {\n        return (AVAXLoanLedger[msg.sender]);\n    }\n\n    function getAddress() public view returns (address) {\n        return address(this);\n    }\n\n    modifier onlyAVAXDebtHolder() {\n        require(AVAXLoanLedger[msg.sender] > 0, \"You do not have any outstanding debt\");\n        _;\n    }\n\n    modifier onlyEthDebtHolder() {\n        require(ETHLoanLedger[msg.sender] > 0, \"You do not have outstanding debt\");\n        _;\n    }\n    \n     modifier enoughAVAXInWallet() {\n        require(avaxToken.balanceOf(msg.sender) > 0, \"You do not have enough USDC to repay this debt\");\n        _;\n    }\n}",
  "sourcePath": "/Users/alwin/Developer/Liquiditas/contracts/Lending.sol",
  "ast": {
    "absolutePath": "project:/contracts/Lending.sol",
    "exportedSymbols": {
      "Avax": [
        60
      ],
      "ERC20": [
        500
      ],
      "Lending": [
        1504
      ],
      "LiquidityPool": [
        1976
      ],
      "PriceFeed": [
        2011
      ],
      "Reserves": [
        2239
      ],
      "SafeMath": [
        159
      ]
    },
    "id": 1505,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 502,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "project:/contracts/LiquidityPool.sol",
        "file": "./LiquidityPool.sol",
        "id": 503,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1505,
        "sourceUnit": 1977,
        "src": "56:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 504,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1505,
        "sourceUnit": 501,
        "src": "86:21:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Reserves.sol",
        "file": "./Reserves.sol",
        "id": 505,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1505,
        "sourceUnit": 2240,
        "src": "108:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/PriceFeed.sol",
        "file": "./PriceFeed.sol",
        "id": 506,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1505,
        "sourceUnit": 2012,
        "src": "133:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Avax.sol",
        "file": "./Avax.sol",
        "id": 507,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1505,
        "sourceUnit": 61,
        "src": "159:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Lending",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1504,
        "linearizedBaseContracts": [
          1504
        ],
        "name": "Lending",
        "nameLocation": "190:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 510,
            "mutability": "mutable",
            "name": "avaxToken",
            "nameLocation": "209:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "204:14:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Avax_$60",
              "typeString": "contract Avax"
            },
            "typeName": {
              "id": 509,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 508,
                "name": "Avax",
                "nameLocations": [
                  "204:4:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60,
                "src": "204:4:2"
              },
              "referencedDeclaration": 60,
              "src": "204:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Avax_$60",
                "typeString": "contract Avax"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 513,
            "mutability": "mutable",
            "name": "liquidityPool",
            "nameLocation": "238:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "224:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LiquidityPool_$1976",
              "typeString": "contract LiquidityPool"
            },
            "typeName": {
              "id": 512,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 511,
                "name": "LiquidityPool",
                "nameLocations": [
                  "224:13:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1976,
                "src": "224:13:2"
              },
              "referencedDeclaration": 1976,
              "src": "224:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LiquidityPool_$1976",
                "typeString": "contract LiquidityPool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 516,
            "mutability": "mutable",
            "name": "reserves",
            "nameLocation": "266:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "257:17:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Reserves_$2239",
              "typeString": "contract Reserves"
            },
            "typeName": {
              "id": 515,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 514,
                "name": "Reserves",
                "nameLocations": [
                  "257:8:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2239,
                "src": "257:8:2"
              },
              "referencedDeclaration": 2239,
              "src": "257:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Reserves_$2239",
                "typeString": "contract Reserves"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 519,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "290:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "280:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PriceFeed_$2011",
              "typeString": "contract PriceFeed"
            },
            "typeName": {
              "id": 518,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 517,
                "name": "PriceFeed",
                "nameLocations": [
                  "280:9:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2011,
                "src": "280:9:2"
              },
              "referencedDeclaration": 2011,
              "src": "280:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceFeed_$2011",
                "typeString": "contract PriceFeed"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 522,
            "mutability": "mutable",
            "name": "_maximumLendingPercentage",
            "nameLocation": "313:25:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "305:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 520,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "305:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38353030",
              "id": 521,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "341:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8500_by_1",
                "typeString": "int_const 8500"
              },
              "value": "8500"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 525,
            "mutability": "mutable",
            "name": "_lendingFee",
            "nameLocation": "379:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "371:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 523,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "371:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "353030",
              "id": 524,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "393:3:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "500"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 529,
            "mutability": "mutable",
            "name": "_debtOwner",
            "nameLocation": "435:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "427:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 526,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "427:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 527,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967281,
                "src": "448:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 528,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberLocation": "452:6:2",
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "448:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 533,
            "mutability": "mutable",
            "name": "AVAXCollateralLedger",
            "nameLocation": "493:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "465:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 532,
              "keyType": {
                "id": 530,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "473:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "465:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 531,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "484:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 537,
            "mutability": "mutable",
            "name": "AVAXLoanLedger",
            "nameLocation": "547:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "519:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 536,
              "keyType": {
                "id": 534,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "527:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "519:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 535,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "538:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 541,
            "mutability": "mutable",
            "name": "AVAXCollateralValueLedgerinUSD",
            "nameLocation": "595:30:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "567:58:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 540,
              "keyType": {
                "id": 538,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "575:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "567:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 539,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "586:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 545,
            "mutability": "mutable",
            "name": "AVAXCUserTotalReturnTransactions",
            "nameLocation": "659:32:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "631:60:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 544,
              "keyType": {
                "id": 542,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "639:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "631:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 543,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "650:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 549,
            "mutability": "mutable",
            "name": "ETHCollateralLedger",
            "nameLocation": "726:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "698:47:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 548,
              "keyType": {
                "id": 546,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "706:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "698:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 547,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "717:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 553,
            "mutability": "mutable",
            "name": "ETHLoanLedger",
            "nameLocation": "779:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "751:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 552,
              "keyType": {
                "id": 550,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "759:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "751:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 551,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "770:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 557,
            "mutability": "mutable",
            "name": "ETHCollateralValueLedgerinUSD",
            "nameLocation": "826:29:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "798:57:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 556,
              "keyType": {
                "id": 554,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "806:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "798:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 555,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "817:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 561,
            "mutability": "mutable",
            "name": "ETHUserTotalReturnTransactions",
            "nameLocation": "889:30:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "861:58:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 560,
              "keyType": {
                "id": 558,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "869:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "861:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 559,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "880:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 564,
            "mutability": "mutable",
            "name": "ETHDebtors",
            "nameLocation": "936:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "926:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 562,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "926:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 563,
              "nodeType": "ArrayTypeName",
              "src": "926:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 567,
            "mutability": "mutable",
            "name": "AVAXDebtors",
            "nameLocation": "1011:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 1504,
            "src": "1001:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 565,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1001:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 566,
              "nodeType": "ArrayTypeName",
              "src": "1001:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 598,
              "nodeType": "Block",
              "src": "1177:133:2",
              "statements": [
                {
                  "expression": {
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 582,
                      "name": "avaxToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "1187:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Avax_$60",
                        "typeString": "contract Avax"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 583,
                      "name": "avaxTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "1199:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Avax_$60",
                        "typeString": "contract Avax"
                      }
                    },
                    "src": "1187:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avax_$60",
                      "typeString": "contract Avax"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "1187:28:2"
                },
                {
                  "expression": {
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 586,
                      "name": "liquidityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 513,
                      "src": "1225:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$1976",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 587,
                      "name": "lp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 573,
                      "src": "1241:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$1976",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "src": "1225:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPool_$1976",
                      "typeString": "contract LiquidityPool"
                    }
                  },
                  "id": 589,
                  "nodeType": "ExpressionStatement",
                  "src": "1225:18:2"
                },
                {
                  "expression": {
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 590,
                      "name": "reserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "1253:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Reserves_$2239",
                        "typeString": "contract Reserves"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 591,
                      "name": "reservesAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "1264:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Reserves_$2239",
                        "typeString": "contract Reserves"
                      }
                    },
                    "src": "1253:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Reserves_$2239",
                      "typeString": "contract Reserves"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "1253:26:2"
                },
                {
                  "expression": {
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 594,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "1289:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceFeed_$2011",
                        "typeString": "contract PriceFeed"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 595,
                      "name": "pf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 579,
                      "src": "1301:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceFeed_$2011",
                        "typeString": "contract PriceFeed"
                      }
                    },
                    "src": "1289:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceFeed_$2011",
                      "typeString": "contract PriceFeed"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:14:2"
                }
              ]
            },
            "id": 599,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 570,
                  "mutability": "mutable",
                  "name": "avaxTokenAddress",
                  "nameLocation": "1100:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "1095:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Avax_$60",
                    "typeString": "contract Avax"
                  },
                  "typeName": {
                    "id": 569,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 568,
                      "name": "Avax",
                      "nameLocations": [
                        "1095:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60,
                      "src": "1095:4:2"
                    },
                    "referencedDeclaration": 60,
                    "src": "1095:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avax_$60",
                      "typeString": "contract Avax"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 573,
                  "mutability": "mutable",
                  "name": "lp",
                  "nameLocation": "1132:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "1118:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LiquidityPool_$1976",
                    "typeString": "contract LiquidityPool"
                  },
                  "typeName": {
                    "id": 572,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 571,
                      "name": "LiquidityPool",
                      "nameLocations": [
                        "1118:13:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1976,
                      "src": "1118:13:2"
                    },
                    "referencedDeclaration": 1976,
                    "src": "1118:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPool_$1976",
                      "typeString": "contract LiquidityPool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 576,
                  "mutability": "mutable",
                  "name": "reservesAddress",
                  "nameLocation": "1145:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "1136:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Reserves_$2239",
                    "typeString": "contract Reserves"
                  },
                  "typeName": {
                    "id": 575,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 574,
                      "name": "Reserves",
                      "nameLocations": [
                        "1136:8:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2239,
                      "src": "1136:8:2"
                    },
                    "referencedDeclaration": 2239,
                    "src": "1136:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Reserves_$2239",
                      "typeString": "contract Reserves"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 579,
                  "mutability": "mutable",
                  "name": "pf",
                  "nameLocation": "1173:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "1163:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PriceFeed_$2011",
                    "typeString": "contract PriceFeed"
                  },
                  "typeName": {
                    "id": 578,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 577,
                      "name": "PriceFeed",
                      "nameLocations": [
                        "1163:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2011,
                      "src": "1163:9:2"
                    },
                    "referencedDeclaration": 2011,
                    "src": "1163:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceFeed_$2011",
                      "typeString": "contract PriceFeed"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1094:82:2"
            },
            "returnParameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1177:0:2"
            },
            "scope": 1504,
            "src": "1083:227:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 701,
              "nodeType": "Block",
              "src": "1406:1044:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 605,
                          "name": "depositCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 601,
                          "src": "1424:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1445:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1424:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1448:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1416:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:61:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 614,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1516:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1520:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1516:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 612,
                              "name": "avaxToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "1496:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Avax_$60",
                                "typeString": "contract Avax"
                              }
                            },
                            "id": 613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1506:9:2",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 236,
                            "src": "1496:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1496:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 617,
                          "name": "depositCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 601,
                          "src": "1531:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1496:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b656e21",
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1550:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        },
                        "value": "You do not have enough AVAX token!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        }
                      ],
                      "id": 611,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1487:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1487:100:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "1487:100:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 625,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1614:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1618:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1614:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 622,
                        "name": "AVAXDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 567,
                        "src": "1597:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1609:4:2",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1597:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1597:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "1597:28:2"
                },
                {
                  "assignments": [
                    630
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 630,
                      "mutability": "mutable",
                      "name": "_loanAmount",
                      "nameLocation": "1643:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 701,
                      "src": "1635:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 629,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1635:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 635,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 632,
                        "name": "depositCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "1677:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 633,
                        "name": "_maximumLendingPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "1696:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 631,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1409,
                      "src": "1657:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1657:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1635:87:2"
                },
                {
                  "expression": {
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 636,
                        "name": "AVAXCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "1753:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 639,
                      "indexExpression": {
                        "expression": {
                          "id": 637,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1774:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1778:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1774:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1753:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 640,
                      "name": "depositCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "1788:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1753:52:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "1753:52:2"
                },
                {
                  "expression": {
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 643,
                        "name": "AVAXLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "1815:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 646,
                      "indexExpression": {
                        "expression": {
                          "id": 644,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1830:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1834:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1830:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1815:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 647,
                      "name": "_loanAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 630,
                      "src": "1844:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1815:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:40:2"
                },
                {
                  "assignments": [
                    651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 651,
                      "mutability": "mutable",
                      "name": "depositCollateralInUSD",
                      "nameLocation": "1874:22:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 701,
                      "src": "1866:30:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 650,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1866:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 653,
                  "initialValue": {
                    "id": 652,
                    "name": "depositCollateral",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 601,
                    "src": "1899:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1866:50:2"
                },
                {
                  "expression": {
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 654,
                        "name": "AVAXCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "1935:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 657,
                      "indexExpression": {
                        "expression": {
                          "id": 655,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1966:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1970:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1966:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1935:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 658,
                      "name": "depositCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "1980:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1935:67:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 660,
                  "nodeType": "ExpressionStatement",
                  "src": "1935:67:2"
                },
                {
                  "assignments": [
                    662
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 662,
                      "mutability": "mutable",
                      "name": "liqudityPoolAddress",
                      "nameLocation": "2021:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 701,
                      "src": "2013:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 661,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2013:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 666,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 663,
                        "name": "liquidityPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 513,
                        "src": "2043:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$1976",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2057:12:2",
                      "memberName": "getLPAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1894,
                      "src": "2043:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2043:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2013:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 670,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2104:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2108:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2104:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 674,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2124:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1504",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1504",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2116:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 672,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2116:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2116:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 676,
                        "name": "depositCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "2131:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 667,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "2081:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$60",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2091:12:2",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 360,
                      "src": "2081:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2081:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:68:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 682,
                        "name": "_loanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 630,
                        "src": "2247:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 685,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2268:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1504",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1504",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2260:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 683,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2260:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2260:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 679,
                        "name": "liquidityPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 513,
                        "src": "2207:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$1976",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2221:25:2",
                      "memberName": "sendAvaxToLendingContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1921,
                      "src": "2207:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2207:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 688,
                  "nodeType": "ExpressionStatement",
                  "src": "2207:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 694,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2357:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1504",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1504",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2349:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 692,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2349:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2349:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 696,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2364:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2368:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2364:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 698,
                        "name": "_loanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 630,
                        "src": "2376:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 689,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "2326:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$60",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2336:12:2",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 360,
                      "src": "2326:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2326:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "2326:62:2"
                }
              ]
            },
            "functionSelector": "b968c930",
            "id": 702,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrowAVAX",
            "nameLocation": "1361:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "depositCollateral",
                  "nameLocation": "1380:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "1372:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1371:27:2"
            },
            "returnParameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:2"
            },
            "scope": 1504,
            "src": "1352:1098:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 832,
              "nodeType": "Block",
              "src": "2526:1405:2",
              "statements": [
                {
                  "assignments": [
                    710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 710,
                      "mutability": "mutable",
                      "name": "amountToReturn",
                      "nameLocation": "2603:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 832,
                      "src": "2595:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 709,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2595:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 715,
                  "initialValue": {
                    "baseExpression": {
                      "id": 711,
                      "name": "AVAXLoanLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "2620:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 714,
                    "indexExpression": {
                      "expression": {
                        "id": 712,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2635:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2639:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2635:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2620:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2595:51:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 719,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2728:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2732:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2728:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 717,
                              "name": "avaxToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "2708:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Avax_$60",
                                "typeString": "contract Avax"
                              }
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2718:9:2",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 236,
                            "src": "2708:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2708:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 722,
                          "name": "amountToReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 710,
                          "src": "2743:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2708:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b656e21",
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2759:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        },
                        "value": "You do not have enough AVAX token!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        }
                      ],
                      "id": 716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2699:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2699:97:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "2699:97:2"
                },
                {
                  "assignments": [
                    728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 728,
                      "mutability": "mutable",
                      "name": "collateralAmount",
                      "nameLocation": "2815:16:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 832,
                      "src": "2807:24:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 727,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2807:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 733,
                  "initialValue": {
                    "baseExpression": {
                      "id": 729,
                      "name": "AVAXCollateralLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 533,
                      "src": "2834:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 732,
                    "indexExpression": {
                      "expression": {
                        "id": 730,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2855:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2859:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2855:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2834:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2807:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 737,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2954:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2958:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2954:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 741,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2974:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1504",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1504",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2966:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 739,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2966:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2966:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 743,
                        "name": "amountToReturn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 710,
                        "src": "2981:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 734,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "2931:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$60",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2941:12:2",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 360,
                      "src": "2931:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2931:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 745,
                  "nodeType": "ExpressionStatement",
                  "src": "2931:65:2"
                },
                {
                  "assignments": [
                    747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 747,
                      "mutability": "mutable",
                      "name": "lendingFeeToDeduct",
                      "nameLocation": "3077:18:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 832,
                      "src": "3069:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 746,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3069:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 752,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 749,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 728,
                        "src": "3118:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 750,
                        "name": "_lendingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 525,
                        "src": "3136:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 748,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1409,
                      "src": "3098:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3098:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3069:79:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 758,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3232:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1504",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1504",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3224:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 756,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3224:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3224:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 760,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3239:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3243:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3239:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 762,
                              "name": "collateralAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 728,
                              "src": "3252:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 763,
                              "name": "lendingFeeToDeduct",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 747,
                              "src": "3271:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3252:37:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 765,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3251:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 753,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "3201:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$60",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3211:12:2",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 360,
                      "src": "3201:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3201:90:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 767,
                  "nodeType": "ExpressionStatement",
                  "src": "3201:90:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 773,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3357:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1504",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1504",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3349:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 771,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3349:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3349:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 775,
                            "name": "reserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "3364:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Reserves_$2239",
                              "typeString": "contract Reserves"
                            }
                          },
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3373:18:2",
                          "memberName": "getReservesAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2222,
                          "src": "3364:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3364:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 778,
                        "name": "lendingFeeToDeduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "3395:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 768,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "3326:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$60",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3336:12:2",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 360,
                      "src": "3326:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3326:88:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 780,
                  "nodeType": "ExpressionStatement",
                  "src": "3326:88:2"
                },
                {
                  "expression": {
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3463:39:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 781,
                        "name": "AVAXCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "3470:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 784,
                      "indexExpression": {
                        "expression": {
                          "id": 782,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3491:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3495:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3491:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3470:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 786,
                  "nodeType": "ExpressionStatement",
                  "src": "3463:39:2"
                },
                {
                  "expression": {
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3557:33:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 787,
                        "name": "AVAXLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "3564:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 790,
                      "indexExpression": {
                        "expression": {
                          "id": 788,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3579:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3583:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3579:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3564:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "3557:33:2"
                },
                {
                  "expression": {
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3645:49:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 793,
                        "name": "AVAXCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "3652:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 796,
                      "indexExpression": {
                        "expression": {
                          "id": 794,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3683:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3687:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3683:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3652:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "3645:49:2"
                },
                {
                  "expression": {
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 799,
                        "name": "AVAXCUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 545,
                        "src": "3704:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 802,
                      "indexExpression": {
                        "expression": {
                          "id": 800,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3737:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3741:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3737:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3704:44:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3752:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3704:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "3704:49:2"
                },
                {
                  "body": {
                    "id": 830,
                    "nodeType": "Block",
                    "src": "3813:112:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 817,
                              "name": "AVAXDebtors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 567,
                              "src": "3831:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 819,
                            "indexExpression": {
                              "id": 818,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "3843:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3831:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 820,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3849:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3853:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3849:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3831:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 829,
                        "nodeType": "IfStatement",
                        "src": "3827:88:2",
                        "trueBody": {
                          "id": 828,
                          "nodeType": "Block",
                          "src": "3861:54:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "3879:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 823,
                                    "name": "AVAXDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 567,
                                    "src": "3886:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 825,
                                  "indexExpression": {
                                    "id": 824,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 807,
                                    "src": "3898:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3886:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 827,
                              "nodeType": "ExpressionStatement",
                              "src": "3879:21:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 810,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 807,
                      "src": "3784:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 811,
                        "name": "AVAXDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 567,
                        "src": "3788:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3800:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3788:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3784:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 831,
                  "initializationExpression": {
                    "assignments": [
                      807
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 807,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3777:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 831,
                        "src": "3769:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3769:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 809,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3781:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3769:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3808:3:2",
                      "subExpression": {
                        "id": 814,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "3808:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 816,
                    "nodeType": "ExpressionStatement",
                    "src": "3808:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3764:161:2"
                }
              ]
            },
            "functionSelector": "42b9309a",
            "id": 833,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 705,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 704,
                  "name": "onlyAVAXDebtHolder",
                  "nameLocations": [
                    "2488:18:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1474,
                  "src": "2488:18:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2488:18:2"
              },
              {
                "id": 707,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 706,
                  "name": "enoughAVAXInWallet",
                  "nameLocations": [
                    "2507:18:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1503,
                  "src": "2507:18:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2507:18:2"
              }
            ],
            "name": "repayAVAXDebt",
            "nameLocation": "2465:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2478:2:2"
            },
            "returnParameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2526:0:2"
            },
            "scope": 1504,
            "src": "2456:1475:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 883,
              "nodeType": "Block",
              "src": "4017:459:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 841,
                          "name": "topUpCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 835,
                          "src": "4044:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4063:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4044:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4066:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4036:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4036:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 846,
                  "nodeType": "ExpressionStatement",
                  "src": "4036:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 850,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4134:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4138:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4134:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 848,
                              "name": "avaxToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "4114:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Avax_$60",
                                "typeString": "contract Avax"
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4124:9:2",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 236,
                            "src": "4114:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4114:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 853,
                          "name": "topUpCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 835,
                          "src": "4149:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4114:50:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b656e21",
                        "id": 855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4166:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        },
                        "value": "You do not have enough AVAX token!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        }
                      ],
                      "id": 847,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4105:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4105:98:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 857,
                  "nodeType": "ExpressionStatement",
                  "src": "4105:98:2"
                },
                {
                  "assignments": [
                    859
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 859,
                      "mutability": "mutable",
                      "name": "topUpCollateralInUSD",
                      "nameLocation": "4221:20:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 883,
                      "src": "4213:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 858,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4213:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 860,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4213:28:2"
                },
                {
                  "expression": {
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 861,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 859,
                      "src": "4252:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 862,
                        "name": "topUpCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 835,
                        "src": "4275:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 863,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 519,
                            "src": "4293:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceFeed_$2011",
                              "typeString": "contract PriceFeed"
                            }
                          },
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4303:17:2",
                          "memberName": "getAvaxPriceFirst",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2002,
                          "src": "4293:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4293:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4275:47:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4252:70:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 868,
                  "nodeType": "ExpressionStatement",
                  "src": "4252:70:2"
                },
                {
                  "expression": {
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 869,
                        "name": "AVAXCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "4342:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 872,
                      "indexExpression": {
                        "expression": {
                          "id": 870,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4363:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4367:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4363:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4342:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 873,
                      "name": "topUpCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 835,
                      "src": "4378:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4342:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 875,
                  "nodeType": "ExpressionStatement",
                  "src": "4342:51:2"
                },
                {
                  "expression": {
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 876,
                        "name": "AVAXCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "4403:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 879,
                      "indexExpression": {
                        "expression": {
                          "id": 877,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4434:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4438:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4434:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4403:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 880,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 859,
                      "src": "4449:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4403:66:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 882,
                  "nodeType": "ExpressionStatement",
                  "src": "4403:66:2"
                }
              ]
            },
            "functionSelector": "b60d2617",
            "id": 884,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 838,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 837,
                  "name": "onlyAVAXDebtHolder",
                  "nameLocations": [
                    "3998:18:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1474,
                  "src": "3998:18:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3998:18:2"
              }
            ],
            "name": "topUpAVAXCollateral",
            "nameLocation": "3946:19:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "topUpCollateral",
                  "nameLocation": "3974:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "3966:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3966:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3965:25:2"
            },
            "returnParameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4017:0:2"
            },
            "scope": 1504,
            "src": "3937:539:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 974,
              "nodeType": "Block",
              "src": "4515:1008:2",
              "statements": [
                {
                  "assignments": [
                    888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 888,
                      "mutability": "mutable",
                      "name": "currentPriceOfAVAX",
                      "nameLocation": "4533:18:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 974,
                      "src": "4525:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 887,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4525:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 892,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 889,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "4554:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceFeed_$2011",
                          "typeString": "contract PriceFeed"
                        }
                      },
                      "id": 890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4564:23:2",
                      "memberName": "getAvaxPriceToLiquidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2010,
                      "src": "4554:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4554:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4525:64:2"
                },
                {
                  "body": {
                    "id": 972,
                    "nodeType": "Block",
                    "src": "4645:872:2",
                    "statements": [
                      {
                        "assignments": [
                          905
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 905,
                            "mutability": "mutable",
                            "name": "newCollateralPrice",
                            "nameLocation": "4667:18:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 972,
                            "src": "4659:26:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 904,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4659:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 915,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 906,
                                "name": "currentPriceOfAVAX",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 888,
                                "src": "4689:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "baseExpression": {
                                      "id": 907,
                                      "name": "AVAXCollateralLedger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 533,
                                      "src": "4711:20:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 911,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 908,
                                        "name": "AVAXDebtors",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 567,
                                        "src": "4732:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 910,
                                      "indexExpression": {
                                        "id": 909,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 894,
                                        "src": "4744:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4732:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4711:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 912,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4710:38:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4689:59:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 914,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4688:61:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4659:90:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 916,
                            "name": "newCollateralPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 905,
                            "src": "4767:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 917,
                              "name": "AVAXCollateralValueLedgerinUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 541,
                              "src": "4789:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 921,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 918,
                                "name": "AVAXDebtors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 567,
                                "src": "4820:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 920,
                              "indexExpression": {
                                "id": 919,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 894,
                                "src": "4832:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4820:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4789:46:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4767:68:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 971,
                        "nodeType": "IfStatement",
                        "src": "4763:744:2",
                        "trueBody": {
                          "id": 970,
                          "nodeType": "Block",
                          "src": "4837:670:2",
                          "statements": [
                            {
                              "assignments": [
                                924
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 924,
                                  "mutability": "mutable",
                                  "name": "accountAddress",
                                  "nameLocation": "5005:14:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 970,
                                  "src": "4997:22:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 923,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4997:7:2",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 928,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 925,
                                  "name": "AVAXDebtors",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 567,
                                  "src": "5022:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 927,
                                "indexExpression": {
                                  "id": 926,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 894,
                                  "src": "5034:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5022:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4997:39:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 934,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "5086:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Lending_$1504",
                                          "typeString": "contract Lending"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Lending_$1504",
                                          "typeString": "contract Lending"
                                        }
                                      ],
                                      "id": 933,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5078:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 932,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5078:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 935,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5078:13:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 936,
                                        "name": "liquidityPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 513,
                                        "src": "5093:13:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LiquidityPool_$1976",
                                          "typeString": "contract LiquidityPool"
                                        }
                                      },
                                      "id": 937,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5107:12:2",
                                      "memberName": "getLPAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1894,
                                      "src": "5093:26:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 938,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5093:28:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 939,
                                      "name": "AVAXCollateralLedger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 533,
                                      "src": "5123:20:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 941,
                                    "indexExpression": {
                                      "id": 940,
                                      "name": "accountAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 924,
                                      "src": "5144:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5123:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 929,
                                    "name": "avaxToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 510,
                                    "src": "5055:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Avax_$60",
                                      "typeString": "contract Avax"
                                    }
                                  },
                                  "id": 931,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5065:12:2",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 360,
                                  "src": "5055:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5055:105:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 943,
                              "nodeType": "ExpressionStatement",
                              "src": "5055:105:2"
                            },
                            {
                              "expression": {
                                "id": 949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "5179:43:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 944,
                                    "name": "AVAXCollateralLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 533,
                                    "src": "5186:20:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 948,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 945,
                                      "name": "AVAXDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 567,
                                      "src": "5207:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 947,
                                    "indexExpression": {
                                      "id": 946,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 894,
                                      "src": "5219:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5207:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5186:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 950,
                              "nodeType": "ExpressionStatement",
                              "src": "5179:43:2"
                            },
                            {
                              "expression": {
                                "id": 956,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "5292:37:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 951,
                                    "name": "AVAXLoanLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 537,
                                    "src": "5299:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 955,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 952,
                                      "name": "AVAXDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 567,
                                      "src": "5314:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 954,
                                    "indexExpression": {
                                      "id": 953,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 894,
                                      "src": "5326:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5314:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5299:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 957,
                              "nodeType": "ExpressionStatement",
                              "src": "5292:37:2"
                            },
                            {
                              "expression": {
                                "id": 963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "5399:53:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 958,
                                    "name": "AVAXCollateralValueLedgerinUSD",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 541,
                                    "src": "5406:30:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 962,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 959,
                                      "name": "AVAXDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 567,
                                      "src": "5437:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 961,
                                    "indexExpression": {
                                      "id": 960,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 894,
                                      "src": "5449:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5437:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5406:46:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 964,
                              "nodeType": "ExpressionStatement",
                              "src": "5399:53:2"
                            },
                            {
                              "expression": {
                                "id": 968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "5471:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 965,
                                    "name": "AVAXDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 567,
                                    "src": "5478:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 967,
                                  "indexExpression": {
                                    "id": 966,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 894,
                                    "src": "5490:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5478:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 969,
                              "nodeType": "ExpressionStatement",
                              "src": "5471:21:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 897,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "4616:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 898,
                        "name": "AVAXDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 567,
                        "src": "4620:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4632:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4620:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4616:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 973,
                  "initializationExpression": {
                    "assignments": [
                      894
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 894,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4609:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 973,
                        "src": "4604:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 893,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4604:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 896,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4613:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4604:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4640:3:2",
                      "subExpression": {
                        "id": 901,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "4640:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 903,
                    "nodeType": "ExpressionStatement",
                    "src": "4640:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "4599:918:2"
                }
              ]
            },
            "functionSelector": "db8bf7e6",
            "id": 975,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateAVAX",
            "nameLocation": "4492:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4505:2:2"
            },
            "returnParameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4515:0:2"
            },
            "scope": 1504,
            "src": "4483:1040:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1060,
              "nodeType": "Block",
              "src": "5620:826:2",
              "statements": [
                {
                  "assignments": [
                    981
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 981,
                      "mutability": "mutable",
                      "name": "depositCollateral",
                      "nameLocation": "5638:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1060,
                      "src": "5630:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 980,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5630:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 984,
                  "initialValue": {
                    "expression": {
                      "id": 982,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "5658:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5662:5:2",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "5658:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5630:37:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 986,
                          "name": "depositCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 981,
                          "src": "5685:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5706:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5685:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5709:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5677:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5677:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "5677:61:2"
                },
                {
                  "assignments": [
                    993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 993,
                      "mutability": "mutable",
                      "name": "depositCollateralInEth",
                      "nameLocation": "5756:22:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1060,
                      "src": "5748:30:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 992,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5748:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 997,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 994,
                      "name": "depositCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 981,
                      "src": "5781:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030303030303030303030303030303030",
                      "id": 995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5801:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1000000000000000000"
                    },
                    "src": "5781:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5748:72:2"
                },
                {
                  "assignments": [
                    999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 999,
                      "mutability": "mutable",
                      "name": "depositCollateralInUSD",
                      "nameLocation": "5838:22:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1060,
                      "src": "5830:30:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 998,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5830:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1000,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5830:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1004,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5887:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5891:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5887:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1001,
                        "name": "ETHDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "5871:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5882:4:2",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5871:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5871:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1007,
                  "nodeType": "ExpressionStatement",
                  "src": "5871:27:2"
                },
                {
                  "expression": {
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1008,
                      "name": "depositCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "5908:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1009,
                        "name": "depositCollateralInEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 993,
                        "src": "5933:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1010,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 519,
                            "src": "5958:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceFeed_$2011",
                              "typeString": "contract PriceFeed"
                            }
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5968:16:2",
                          "memberName": "getEthPriceFirst",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1986,
                          "src": "5958:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 1012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5958:28:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5933:53:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5908:78:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "5908:78:2"
                },
                {
                  "assignments": [
                    1017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1017,
                      "mutability": "mutable",
                      "name": "_loanAmount",
                      "nameLocation": "6014:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1060,
                      "src": "6006:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1016,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6006:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1022,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1019,
                        "name": "depositCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 981,
                        "src": "6048:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1020,
                        "name": "_maximumLendingPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "6067:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1018,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1409,
                      "src": "6028:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6028:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6006:87:2"
                },
                {
                  "expression": {
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1023,
                        "name": "ETHCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "6123:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1026,
                      "indexExpression": {
                        "expression": {
                          "id": 1024,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6143:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6147:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6143:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6123:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1027,
                      "name": "depositCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 981,
                      "src": "6157:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6123:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "6123:51:2"
                },
                {
                  "expression": {
                    "id": 1035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1030,
                        "name": "ETHLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "6184:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1033,
                      "indexExpression": {
                        "expression": {
                          "id": 1031,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6198:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6202:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6198:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6184:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1034,
                      "name": "_loanAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1017,
                      "src": "6212:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6184:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1036,
                  "nodeType": "ExpressionStatement",
                  "src": "6184:39:2"
                },
                {
                  "expression": {
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1037,
                        "name": "ETHCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "6233:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1040,
                      "indexExpression": {
                        "expression": {
                          "id": 1038,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6263:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6267:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6263:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6233:41:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1041,
                      "name": "depositCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "6277:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6233:66:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "6233:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1047,
                        "name": "_loanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "6348:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1050,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6369:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6373:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6369:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6361:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1048,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6361:8:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6361:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 1044,
                        "name": "liquidityPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 513,
                        "src": "6318:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$1976",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 1046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6332:15:2",
                      "memberName": "sendEthToLender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1943,
                      "src": "6318:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_payable_$returns$__$",
                        "typeString": "function (uint256,address payable) external"
                      }
                    },
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6318:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1054,
                  "nodeType": "ExpressionStatement",
                  "src": "6318:63:2"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1055,
                      "name": "ETHCollateralValueLedgerinUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "6398:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1058,
                    "indexExpression": {
                      "expression": {
                        "id": 1056,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "6428:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6432:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6428:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6398:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 979,
                  "id": 1059,
                  "nodeType": "Return",
                  "src": "6391:48:2"
                }
              ]
            },
            "functionSelector": "4fed0518",
            "id": 1061,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrowEth",
            "nameLocation": "5575:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5584:2:2"
            },
            "returnParameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 978,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1061,
                  "src": "5611:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5611:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5610:9:2"
            },
            "scope": 1504,
            "src": "5566:880:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1109,
              "nodeType": "Block",
              "src": "6515:467:2",
              "statements": [
                {
                  "assignments": [
                    1067
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1067,
                      "mutability": "mutable",
                      "name": "topUpCollateral",
                      "nameLocation": "6533:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1109,
                      "src": "6525:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1066,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6525:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1070,
                  "initialValue": {
                    "expression": {
                      "id": 1068,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "6551:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6555:5:2",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "6551:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6525:35:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1072,
                          "name": "topUpCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1067,
                          "src": "6578:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6597:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6578:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6600:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 1071,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6570:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6570:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1077,
                  "nodeType": "ExpressionStatement",
                  "src": "6570:59:2"
                },
                {
                  "assignments": [
                    1079
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1079,
                      "mutability": "mutable",
                      "name": "topUpCollateralInEth",
                      "nameLocation": "6647:20:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1109,
                      "src": "6639:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1078,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6639:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1083,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1080,
                      "name": "topUpCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1067,
                      "src": "6670:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030303030303030303030303030303030",
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6688:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1000000000000000000"
                    },
                    "src": "6670:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6639:68:2"
                },
                {
                  "assignments": [
                    1085
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1085,
                      "mutability": "mutable",
                      "name": "topUpCollateralInUSD",
                      "nameLocation": "6725:20:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1109,
                      "src": "6717:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1084,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6717:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1086,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6717:28:2"
                },
                {
                  "expression": {
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1087,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "6756:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1088,
                        "name": "topUpCollateralInEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "6779:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1089,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 519,
                            "src": "6802:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceFeed_$2011",
                              "typeString": "contract PriceFeed"
                            }
                          },
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6812:16:2",
                          "memberName": "getEthPriceFirst",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1986,
                          "src": "6802:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6802:28:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6779:51:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6756:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "6756:74:2"
                },
                {
                  "expression": {
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1095,
                        "name": "ETHCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "6850:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1098,
                      "indexExpression": {
                        "expression": {
                          "id": 1096,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6870:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6874:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6870:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6850:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1099,
                      "name": "topUpCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1067,
                      "src": "6885:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6850:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "6850:50:2"
                },
                {
                  "expression": {
                    "id": 1107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1102,
                        "name": "ETHCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "6910:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1105,
                      "indexExpression": {
                        "expression": {
                          "id": 1103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6940:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6944:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6940:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6910:41:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1106,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "6955:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6910:65:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1108,
                  "nodeType": "ExpressionStatement",
                  "src": "6910:65:2"
                }
              ]
            },
            "functionSelector": "2b0fa399",
            "id": 1110,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1064,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1063,
                  "name": "onlyEthDebtHolder",
                  "nameLocations": [
                    "6497:17:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1488,
                  "src": "6497:17:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "6497:17:2"
              }
            ],
            "name": "topUpETHCollateral",
            "nameLocation": "6461:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6479:2:2"
            },
            "returnParameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6515:0:2"
            },
            "scope": 1504,
            "src": "6452:530:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1252,
              "nodeType": "Block",
              "src": "7046:1513:2",
              "statements": [
                {
                  "assignments": [
                    1116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1116,
                      "mutability": "mutable",
                      "name": "amountToReturn",
                      "nameLocation": "7129:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1252,
                      "src": "7121:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1115,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7121:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1121,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1117,
                      "name": "ETHLoanLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "7146:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1120,
                    "indexExpression": {
                      "expression": {
                        "id": 1118,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7160:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7164:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7160:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7146:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7121:50:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1123,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7233:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7237:5:2",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7233:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1125,
                          "name": "amountToReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1116,
                          "src": "7246:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7233:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c756520696e736572746564206973206e6f7420656e6f756768",
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7262:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
                          "typeString": "literal_string \"Value inserted is not enough\""
                        },
                        "value": "Value inserted is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
                          "typeString": "literal_string \"Value inserted is not enough\""
                        }
                      ],
                      "id": 1122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7224:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7224:69:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1129,
                  "nodeType": "ExpressionStatement",
                  "src": "7224:69:2"
                },
                {
                  "assignments": [
                    1131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1131,
                      "mutability": "mutable",
                      "name": "collateralAmount",
                      "nameLocation": "7311:16:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1252,
                      "src": "7303:24:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1130,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7303:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1136,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1132,
                      "name": "ETHCollateralLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "7330:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1135,
                    "indexExpression": {
                      "expression": {
                        "id": 1133,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7350:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7354:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7350:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7330:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7303:58:2"
                },
                {
                  "assignments": [
                    1138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1138,
                      "mutability": "mutable",
                      "name": "lendingFeeToDeduct",
                      "nameLocation": "7442:18:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1252,
                      "src": "7434:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1137,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7434:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1143,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1140,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1131,
                        "src": "7483:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1141,
                        "name": "_lendingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 525,
                        "src": "7501:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1139,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1409,
                      "src": "7463:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7463:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7434:79:2"
                },
                {
                  "assignments": [
                    1145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1145,
                      "mutability": "mutable",
                      "name": "addressToSend",
                      "nameLocation": "7582:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1252,
                      "src": "7566:29:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1144,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7566:15:2",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1151,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1148,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7607:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7611:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7607:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7598:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1146,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7598:9:2",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7598:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7566:52:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1155,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1131,
                          "src": "7651:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1156,
                          "name": "lendingFeeToDeduct",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1138,
                          "src": "7670:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7651:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1152,
                        "name": "addressToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "7628:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7642:8:2",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7628:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7628:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "7628:61:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1163,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "7742:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Lending_$1504",
                                  "typeString": "contract Lending"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Lending_$1504",
                                  "typeString": "contract Lending"
                                }
                              ],
                              "id": 1162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7734:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1161,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7734:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7734:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7748:7:2",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "7734:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1166,
                          "name": "amountToReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1116,
                          "src": "7759:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7734:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f52",
                        "id": 1168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7775:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
                          "typeString": "literal_string \"ERROR\""
                        },
                        "value": "ERROR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
                          "typeString": "literal_string \"ERROR\""
                        }
                      ],
                      "id": 1160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7725:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7725:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1170,
                  "nodeType": "ExpressionStatement",
                  "src": "7725:58:2"
                },
                {
                  "assignments": [
                    1172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1172,
                      "mutability": "mutable",
                      "name": "lpAddress",
                      "nameLocation": "7809:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1252,
                      "src": "7793:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1171,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7793:15:2",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1179,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1175,
                            "name": "liquidityPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 513,
                            "src": "7830:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityPool_$1976",
                              "typeString": "contract LiquidityPool"
                            }
                          },
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7844:12:2",
                          "memberName": "getLPAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1894,
                          "src": "7830:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7830:28:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7821:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1173,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7821:9:2",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7821:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7793:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1183,
                        "name": "amountToReturn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1116,
                        "src": "7888:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1180,
                        "name": "lpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1172,
                        "src": "7869:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7879:8:2",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7869:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7869:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1185,
                  "nodeType": "ExpressionStatement",
                  "src": "7869:34:2"
                },
                {
                  "assignments": [
                    1187
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1187,
                      "mutability": "mutable",
                      "name": "reservesAddress",
                      "nameLocation": "7970:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1252,
                      "src": "7954:31:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1186,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7954:15:2",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1194,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1190,
                            "name": "reserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "7996:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Reserves_$2239",
                              "typeString": "contract Reserves"
                            }
                          },
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8005:18:2",
                          "memberName": "getReservesAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2222,
                          "src": "7996:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7996:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7988:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1188,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7988:8:2",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7988:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7954:72:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1198,
                        "name": "lendingFeeToDeduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1138,
                        "src": "8061:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1195,
                        "name": "reservesAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1187,
                        "src": "8036:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8052:8:2",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "8036:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8036:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1200,
                  "nodeType": "ExpressionStatement",
                  "src": "8036:44:2"
                },
                {
                  "expression": {
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "8091:38:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1201,
                        "name": "ETHCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "8098:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1204,
                      "indexExpression": {
                        "expression": {
                          "id": 1202,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8118:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8122:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8118:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8098:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "8091:38:2"
                },
                {
                  "expression": {
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "8184:32:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1207,
                        "name": "ETHLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "8191:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1210,
                      "indexExpression": {
                        "expression": {
                          "id": 1208,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8205:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8209:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8205:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8191:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1212,
                  "nodeType": "ExpressionStatement",
                  "src": "8184:32:2"
                },
                {
                  "expression": {
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "8271:48:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1213,
                        "name": "ETHCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "8278:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1216,
                      "indexExpression": {
                        "expression": {
                          "id": 1214,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8308:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8312:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8308:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8278:41:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "8271:48:2"
                },
                {
                  "expression": {
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1219,
                        "name": "ETHUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "8329:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1222,
                      "indexExpression": {
                        "expression": {
                          "id": 1220,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8360:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8364:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8360:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8329:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8375:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "8329:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "8329:47:2"
                },
                {
                  "body": {
                    "id": 1250,
                    "nodeType": "Block",
                    "src": "8443:110:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1237,
                              "name": "ETHDebtors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 564,
                              "src": "8461:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1239,
                            "indexExpression": {
                              "id": 1238,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1227,
                              "src": "8472:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8461:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1240,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "8478:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8482:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8478:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8461:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1249,
                        "nodeType": "IfStatement",
                        "src": "8457:86:2",
                        "trueBody": {
                          "id": 1248,
                          "nodeType": "Block",
                          "src": "8490:53:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "8508:20:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1243,
                                    "name": "ETHDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 564,
                                    "src": "8515:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1245,
                                  "indexExpression": {
                                    "id": 1244,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1227,
                                    "src": "8526:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8515:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1247,
                              "nodeType": "ExpressionStatement",
                              "src": "8508:20:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1230,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1227,
                      "src": "8415:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1231,
                        "name": "ETHDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "8419:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8430:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8419:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8415:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1251,
                  "initializationExpression": {
                    "assignments": [
                      1227
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1227,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8408:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1251,
                        "src": "8400:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1226,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8400:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1229,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8412:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8400:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8438:3:2",
                      "subExpression": {
                        "id": 1234,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1227,
                        "src": "8438:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1236,
                    "nodeType": "ExpressionStatement",
                    "src": "8438:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "8395:158:2"
                }
              ]
            },
            "functionSelector": "4a282670",
            "id": 1253,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1113,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1112,
                  "name": "onlyEthDebtHolder",
                  "nameLocations": [
                    "7028:17:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1488,
                  "src": "7028:17:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7028:17:2"
              }
            ],
            "name": "repayEth",
            "nameLocation": "7002:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7010:2:2"
            },
            "returnParameters": {
              "id": 1114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7046:0:2"
            },
            "scope": 1504,
            "src": "6993:1566:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1343,
              "nodeType": "Block",
              "src": "8615:918:2",
              "statements": [
                {
                  "assignments": [
                    1257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1257,
                      "mutability": "mutable",
                      "name": "currentPriceOfEth",
                      "nameLocation": "8633:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1343,
                      "src": "8625:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1256,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8625:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1261,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1258,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "8653:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceFeed_$2011",
                          "typeString": "contract PriceFeed"
                        }
                      },
                      "id": 1259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8663:22:2",
                      "memberName": "getEthPriceToLiquidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1994,
                      "src": "8653:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8653:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8625:62:2"
                },
                {
                  "body": {
                    "id": 1341,
                    "nodeType": "Block",
                    "src": "8742:785:2",
                    "statements": [
                      {
                        "assignments": [
                          1274
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1274,
                            "mutability": "mutable",
                            "name": "newCollateralPrice",
                            "nameLocation": "8764:18:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1341,
                            "src": "8756:26:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1273,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8756:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1286,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1275,
                                "name": "currentPriceOfEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1257,
                                "src": "8786:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1282,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 1276,
                                        "name": "ETHCollateralLedger",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 549,
                                        "src": "8807:19:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1280,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 1277,
                                          "name": "ETHDebtors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 564,
                                          "src": "8827:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 1279,
                                        "indexExpression": {
                                          "id": 1278,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1263,
                                          "src": "8838:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8827:13:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8807:34:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "31303030303030303030303030303030303030",
                                      "id": 1281,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8844:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "value": "1000000000000000000"
                                    },
                                    "src": "8807:56:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1283,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8806:58:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8786:78:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1285,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8785:80:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8756:109:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1287,
                            "name": "newCollateralPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1274,
                            "src": "8883:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 1288,
                              "name": "ETHCollateralValueLedgerinUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 557,
                              "src": "8905:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1292,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1289,
                                "name": "ETHDebtors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 564,
                                "src": "8935:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1291,
                              "indexExpression": {
                                "id": 1290,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1263,
                                "src": "8946:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8935:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8905:44:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8883:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1340,
                        "nodeType": "IfStatement",
                        "src": "8879:638:2",
                        "trueBody": {
                          "id": 1339,
                          "nodeType": "Block",
                          "src": "8951:566:2",
                          "statements": [
                            {
                              "assignments": [
                                1295
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1295,
                                  "mutability": "mutable",
                                  "name": "addressToSend",
                                  "nameLocation": "9047:13:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1339,
                                  "src": "9031:29:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1294,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9031:15:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1302,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 1298,
                                        "name": "liquidityPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 513,
                                        "src": "9072:13:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LiquidityPool_$1976",
                                          "typeString": "contract LiquidityPool"
                                        }
                                      },
                                      "id": 1299,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9086:12:2",
                                      "memberName": "getLPAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1894,
                                      "src": "9072:26:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 1300,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9072:28:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1297,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9063:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1296,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9063:9:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9063:38:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9031:70:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1306,
                                      "name": "ETHCollateralLedger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 549,
                                      "src": "9142:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1310,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 1307,
                                        "name": "ETHDebtors",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 564,
                                        "src": "9162:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1309,
                                      "indexExpression": {
                                        "id": 1308,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1263,
                                        "src": "9173:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9162:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9142:34:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1303,
                                    "name": "addressToSend",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1295,
                                    "src": "9119:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9133:8:2",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "9119:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9119:58:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1312,
                              "nodeType": "ExpressionStatement",
                              "src": "9119:58:2"
                            },
                            {
                              "expression": {
                                "id": 1318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "9196:41:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1313,
                                    "name": "ETHCollateralLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 549,
                                    "src": "9203:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1317,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1314,
                                      "name": "ETHDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 564,
                                      "src": "9223:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1316,
                                    "indexExpression": {
                                      "id": 1315,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1263,
                                      "src": "9234:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9223:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9203:34:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1319,
                              "nodeType": "ExpressionStatement",
                              "src": "9196:41:2"
                            },
                            {
                              "expression": {
                                "id": 1325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "9307:35:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1320,
                                    "name": "ETHLoanLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 553,
                                    "src": "9314:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1324,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1321,
                                      "name": "ETHDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 564,
                                      "src": "9328:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1323,
                                    "indexExpression": {
                                      "id": 1322,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1263,
                                      "src": "9339:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9328:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9314:28:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1326,
                              "nodeType": "ExpressionStatement",
                              "src": "9307:35:2"
                            },
                            {
                              "expression": {
                                "id": 1332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "9412:51:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1327,
                                    "name": "ETHCollateralValueLedgerinUSD",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 557,
                                    "src": "9419:29:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1331,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1328,
                                      "name": "ETHDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 564,
                                      "src": "9449:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1330,
                                    "indexExpression": {
                                      "id": 1329,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1263,
                                      "src": "9460:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9449:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9419:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1333,
                              "nodeType": "ExpressionStatement",
                              "src": "9412:51:2"
                            },
                            {
                              "expression": {
                                "id": 1337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "9482:20:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1334,
                                    "name": "ETHDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 564,
                                    "src": "9489:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1336,
                                  "indexExpression": {
                                    "id": 1335,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1263,
                                    "src": "9500:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9489:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1338,
                              "nodeType": "ExpressionStatement",
                              "src": "9482:20:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1266,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1263,
                      "src": "8714:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1267,
                        "name": "ETHDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "8718:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8729:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8718:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8714:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1342,
                  "initializationExpression": {
                    "assignments": [
                      1263
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1263,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8707:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1342,
                        "src": "8702:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1262,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8702:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1265,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8711:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8702:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8737:3:2",
                      "subExpression": {
                        "id": 1270,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1263,
                        "src": "8737:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1272,
                    "nodeType": "ExpressionStatement",
                    "src": "8737:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "8697:830:2"
                }
              ]
            },
            "functionSelector": "734997e5",
            "id": 1344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateETH",
            "nameLocation": "8585:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8597:2:2"
            },
            "returnParameters": {
              "id": 1255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8615:0:2"
            },
            "scope": 1504,
            "src": "8576:957:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1354,
              "nodeType": "Block",
              "src": "9610:66:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1349,
                      "name": "ETHUserTotalReturnTransactions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 561,
                      "src": "9627:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1352,
                    "indexExpression": {
                      "expression": {
                        "id": 1350,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9658:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9662:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9658:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9627:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1348,
                  "id": 1353,
                  "nodeType": "Return",
                  "src": "9620:49:2"
                }
              ]
            },
            "functionSelector": "6862f589",
            "id": 1355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotaETHRepaymentAmount",
            "nameLocation": "9548:29:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9577:2:2"
            },
            "returnParameters": {
              "id": 1348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1347,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1355,
                  "src": "9601:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9601:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9600:9:2"
            },
            "scope": 1504,
            "src": "9539:137:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1365,
              "nodeType": "Block",
              "src": "9754:68:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1360,
                      "name": "AVAXCUserTotalReturnTransactions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "9771:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1363,
                    "indexExpression": {
                      "expression": {
                        "id": 1361,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9804:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9808:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9804:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9771:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1359,
                  "id": 1364,
                  "nodeType": "Return",
                  "src": "9764:51:2"
                }
              ]
            },
            "functionSelector": "6e67fcdd",
            "id": 1366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotaAVAXRepaymentAmount",
            "nameLocation": "9691:30:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9721:2:2"
            },
            "returnParameters": {
              "id": 1359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1358,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1366,
                  "src": "9745:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9745:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9744:9:2"
            },
            "scope": 1504,
            "src": "9682:140:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1378,
              "nodeType": "Block",
              "src": "9923:65:2",
              "statements": [
                {
                  "expression": {
                    "id": 1376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1371,
                        "name": "ETHUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "9932:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1374,
                      "indexExpression": {
                        "expression": {
                          "id": 1372,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9963:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9967:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9963:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9932:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "313030",
                      "id": 1375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9978:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "9932:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1377,
                  "nodeType": "ExpressionStatement",
                  "src": "9932:49:2"
                }
              ]
            },
            "functionSelector": "b731bc6d",
            "id": 1379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initUserTotalEthRepaymentAmount",
            "nameLocation": "9864:31:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9895:2:2"
            },
            "returnParameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1369,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1379,
                  "src": "9914:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9914:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9913:9:2"
            },
            "scope": 1504,
            "src": "9855:133:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1391,
              "nodeType": "Block",
              "src": "10063:67:2",
              "statements": [
                {
                  "expression": {
                    "id": 1389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1384,
                        "name": "AVAXCUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 545,
                        "src": "10072:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1387,
                      "indexExpression": {
                        "expression": {
                          "id": 1385,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10105:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10109:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10105:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10072:44:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "313030",
                      "id": 1388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10120:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "10072:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1390,
                  "nodeType": "ExpressionStatement",
                  "src": "10072:51:2"
                }
              ]
            },
            "functionSelector": "dcbbdbb8",
            "id": 1392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initUserTotalAVAXRepaymentAmount",
            "nameLocation": "10003:32:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10035:2:2"
            },
            "returnParameters": {
              "id": 1383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1382,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1392,
                  "src": "10054:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10054:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10053:9:2"
            },
            "scope": 1504,
            "src": "9994:136:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1408,
              "nodeType": "Block",
              "src": "10464:64:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1401,
                            "name": "collateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1394,
                            "src": "10482:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1402,
                            "name": "percentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1396,
                            "src": "10501:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10482:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1404,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10481:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31305f303030",
                      "id": 1405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10515:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10_000"
                    },
                    "src": "10481:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1400,
                  "id": 1407,
                  "nodeType": "Return",
                  "src": "10474:47:2"
                }
              ]
            },
            "functionSelector": "2133e3b9",
            "id": 1409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePercentage",
            "nameLocation": "10368:19:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1394,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "10396:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "10388:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10388:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1396,
                  "mutability": "mutable",
                  "name": "percentage",
                  "nameLocation": "10422:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "10414:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10414:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10387:46:2"
            },
            "returnParameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "10455:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10455:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10454:9:2"
            },
            "scope": 1504,
            "src": "10359:169:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1422,
              "nodeType": "Block",
              "src": "10600:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1418,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "10645:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1504",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1504",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10637:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1416,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10637:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10637:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1414,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "10617:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$60",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 1415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10627:9:2",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 236,
                      "src": "10617:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10617:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1413,
                  "id": 1421,
                  "nodeType": "Return",
                  "src": "10610:41:2"
                }
              ]
            },
            "functionSelector": "4b84a647",
            "id": 1423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHoldingAVAXCollateral",
            "nameLocation": "10543:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10567:2:2"
            },
            "returnParameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1423,
                  "src": "10591:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10591:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10590:9:2"
            },
            "scope": 1504,
            "src": "10534:124:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1434,
              "nodeType": "Block",
              "src": "10729:45:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1430,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "10754:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Lending_$1504",
                            "typeString": "contract Lending"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Lending_$1504",
                            "typeString": "contract Lending"
                          }
                        ],
                        "id": 1429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10746:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10746:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10746:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "10760:7:2",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "10746:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1427,
                  "id": 1433,
                  "nodeType": "Return",
                  "src": "10739:28:2"
                }
              ]
            },
            "functionSelector": "fcd6e191",
            "id": 1435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHoldingEthCollateral",
            "nameLocation": "10673:23:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10696:2:2"
            },
            "returnParameters": {
              "id": 1427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1426,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1435,
                  "src": "10720:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10720:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10719:9:2"
            },
            "scope": 1504,
            "src": "10664:110:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1448,
              "nodeType": "Block",
              "src": "10924:52:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 1442,
                          "name": "AVAXLoanLedger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 537,
                          "src": "10942:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1445,
                        "indexExpression": {
                          "expression": {
                            "id": 1443,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10957:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10961:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10957:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10942:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1446,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10941:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1441,
                  "id": 1447,
                  "nodeType": "Return",
                  "src": "10934:35:2"
                }
              ]
            },
            "functionSelector": "23ded52a",
            "id": 1449,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1438,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1437,
                  "name": "onlyAVAXDebtHolder",
                  "nameLocations": [
                    "10887:18:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1474,
                  "src": "10887:18:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10887:18:2"
              }
            ],
            "name": "getAVAXDebt",
            "nameLocation": "10861:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10872:2:2"
            },
            "returnParameters": {
              "id": 1441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1440,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1449,
                  "src": "10915:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10915:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10914:9:2"
            },
            "scope": 1504,
            "src": "10852:124:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1459,
              "nodeType": "Block",
              "src": "11034:37:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1456,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "11059:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Lending_$1504",
                          "typeString": "contract Lending"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Lending_$1504",
                          "typeString": "contract Lending"
                        }
                      ],
                      "id": 1455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "11051:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1454,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11051:7:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11051:13:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1453,
                  "id": 1458,
                  "nodeType": "Return",
                  "src": "11044:20:2"
                }
              ]
            },
            "functionSelector": "38cc4831",
            "id": 1460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "10991:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11001:2:2"
            },
            "returnParameters": {
              "id": 1453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1452,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "11025:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11025:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11024:9:2"
            },
            "scope": 1504,
            "src": "10982:89:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1473,
              "nodeType": "Block",
              "src": "11107:107:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1463,
                            "name": "AVAXLoanLedger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 537,
                            "src": "11125:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1466,
                          "indexExpression": {
                            "expression": {
                              "id": 1464,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "11140:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11144:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11140:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11125:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11154:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11125:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520616e79206f75747374616e64696e672064656274",
                        "id": 1469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11157:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
                          "typeString": "literal_string \"You do not have any outstanding debt\""
                        },
                        "value": "You do not have any outstanding debt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
                          "typeString": "literal_string \"You do not have any outstanding debt\""
                        }
                      ],
                      "id": 1462,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11117:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11117:79:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1471,
                  "nodeType": "ExpressionStatement",
                  "src": "11117:79:2"
                },
                {
                  "id": 1472,
                  "nodeType": "PlaceholderStatement",
                  "src": "11206:1:2"
                }
              ]
            },
            "id": 1474,
            "name": "onlyAVAXDebtHolder",
            "nameLocation": "11086:18:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11104:2:2"
            },
            "src": "11077:137:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1487,
              "nodeType": "Block",
              "src": "11249:102:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1477,
                            "name": "ETHLoanLedger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "11267:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1480,
                          "indexExpression": {
                            "expression": {
                              "id": 1478,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "11281:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11285:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11281:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11267:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11295:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11267:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f742068617665206f75747374616e64696e672064656274",
                        "id": 1483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11298:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
                          "typeString": "literal_string \"You do not have outstanding debt\""
                        },
                        "value": "You do not have outstanding debt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
                          "typeString": "literal_string \"You do not have outstanding debt\""
                        }
                      ],
                      "id": 1476,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11259:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11259:74:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1485,
                  "nodeType": "ExpressionStatement",
                  "src": "11259:74:2"
                },
                {
                  "id": 1486,
                  "nodeType": "PlaceholderStatement",
                  "src": "11343:1:2"
                }
              ]
            },
            "id": 1488,
            "name": "onlyEthDebtHolder",
            "nameLocation": "11229:17:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11246:2:2"
            },
            "src": "11220:131:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1502,
              "nodeType": "Block",
              "src": "11392:122:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1493,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "11430:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11434:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11430:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1491,
                              "name": "avaxToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "11410:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Avax_$60",
                                "typeString": "contract Avax"
                              }
                            },
                            "id": 1492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11420:9:2",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 236,
                            "src": "11410:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11410:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11444:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11410:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768205553444320746f20726570617920746869732064656274",
                        "id": 1498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11447:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8",
                          "typeString": "literal_string \"You do not have enough USDC to repay this debt\""
                        },
                        "value": "You do not have enough USDC to repay this debt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8",
                          "typeString": "literal_string \"You do not have enough USDC to repay this debt\""
                        }
                      ],
                      "id": 1490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11402:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11402:94:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1500,
                  "nodeType": "ExpressionStatement",
                  "src": "11402:94:2"
                },
                {
                  "id": 1501,
                  "nodeType": "PlaceholderStatement",
                  "src": "11506:1:2"
                }
              ]
            },
            "id": 1503,
            "name": "enoughAVAXInWallet",
            "nameLocation": "11371:18:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11389:2:2"
            },
            "src": "11362:152:2",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1505,
        "src": "181:11335:2",
        "usedErrors": []
      }
    ],
    "src": "32:11484:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x99a7A44d845499198CE360a20Ff84b0E425ad672",
      "transactionHash": "0x8ff65c0116e1eb77ae3dc2300aa9161d7967eb9bcb7e59901f18aad22ebca517"
    }
  },
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-03-16T09:07:29.644Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}