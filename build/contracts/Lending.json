{
  "contractName": "Lending",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Avax",
          "name": "avaxTokenAddress",
          "type": "address"
        },
        {
          "internalType": "contract LiquidityPool",
          "name": "lp",
          "type": "address"
        },
        {
          "internalType": "contract Reserves",
          "name": "reservesAddress",
          "type": "address"
        },
        {
          "internalType": "contract PriceFeed",
          "name": "pf",
          "type": "address"
        },
        {
          "internalType": "contract IdentityToken",
          "name": "identityTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "depositCollateral",
          "type": "uint256"
        }
      ],
      "name": "borrowAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "repayAVAXDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "topUpCollateral",
          "type": "uint256"
        }
      ],
      "name": "topUpAVAXCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidateAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "topUpETHCollateral",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "repayEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidateETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserAVAXCollateralAmountInUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserAvaxLiquidationPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserTotaETHRepaymentAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserTotaAVAXRepaymentAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initUserTotalEthRepaymentAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initUserTotalAVAXRepaymentAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "percentage",
          "type": "uint256"
        }
      ],
      "name": "calculatePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHoldingAVAXCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHoldingEthCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAVAXDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getTotalTransactionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hello",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Avax\",\"name\":\"avaxTokenAddress\",\"type\":\"address\"},{\"internalType\":\"contract LiquidityPool\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"contract Reserves\",\"name\":\"reservesAddress\",\"type\":\"address\"},{\"internalType\":\"contract PriceFeed\",\"name\":\"pf\",\"type\":\"address\"},{\"internalType\":\"contract IdentityToken\",\"name\":\"identityTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"depositCollateral\",\"type\":\"uint256\"}],\"name\":\"borrowAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"calculatePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAVAXDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHoldingAVAXCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHoldingEthCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTotalTransactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserAVAXCollateralAmountInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserAvaxLiquidationPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserTotaAVAXRepaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserTotaETHRepaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hello\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initUserTotalAVAXRepaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initUserTotalEthRepaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"repayAVAXDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"repayEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"topUpCollateral\",\"type\":\"uint256\"}],\"name\":\"topUpAVAXCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topUpETHCollateral\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Lending.sol\":\"Lending\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Avax.sol\":{\"keccak256\":\"0x76c6d23036985af800ac83d13f2344ed4aa4b150f131105d065536bcc6524f50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e990488108af0835f96864b8215ed1618ec7520bebb303fc52891ef12a558ee\",\"dweb:/ipfs/QmVJC2CvE3zHqw2B6mYVijvyevJJxDwdW1674rbUwyPnKC\"]},\"project:/contracts/ERC20.sol\":{\"keccak256\":\"0xfeef30ad2b2473035147ce29aedc86f3af9da74a44013bd0b232a387039ac7e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f1ceef2c3f56e2da1fa62b8ae94e8ba6cb3c184a0bc193bfa63684152cfe94d\",\"dweb:/ipfs/QmYoUkcUyb4Ze4iiK3Zx1GweZdHnaPtMK76Fxtqx9hjJR4\"]},\"project:/contracts/IdentityToken.sol\":{\"keccak256\":\"0x63434b5e7c2a0f0d6e3db4c8b766338f9ec752243df4c68efb7e475fd23671e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2af075aa732935d111c7d18d5854aa29c3a61fd4944652592ddd164c933f94a1\",\"dweb:/ipfs/QmRj1Bp9VJcQxagAcEgAtvJoM7jRAEXz44HKKJqVYfM8GT\"]},\"project:/contracts/Lending.sol\":{\"keccak256\":\"0x510b5d78cef9e821d8203c28cd47b2aa89c400efadd1e5cc3fc5383e318e2736\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4289ceac2b8fa46052c6b17c9c01e8373b8cb8ee0aa3c79333a4cf0ff57b7360\",\"dweb:/ipfs/QmNp87Sf8jYM8iN1oC89NwS8i2L1UG7aGx3FDjj34Me335\"]},\"project:/contracts/LiquidityPool.sol\":{\"keccak256\":\"0x77755726e1e4bed5838745ac250a96f72f1018b182ecffc8a8dad745804b0556\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55b92b4c4b2b6bcd72f0461fb7dc17c519dffa548cd7601fda4e8b5a21546f4b\",\"dweb:/ipfs/QmPiwHadRKNnHqUTUCg84zqJGEPrL9rHThk6UDTwk7qQ5Y\"]},\"project:/contracts/Math.sol\":{\"keccak256\":\"0xb3ef9672e23ff416fe2f21c330c38461379fb9342d2c7ed7e42c70c3291cecb1\",\"license\":\"BSD-4-Clause\",\"urls\":[\"bzz-raw://c7fed3dfd80190b8953ceb533fb669e3c5606d085c7605d7997db7dba55e12ed\",\"dweb:/ipfs/QmUNejzdDT7CXofiY4aQuD79nx4c8wTr1YBiXrFjhrtZx3\"]},\"project:/contracts/PriceFeed.sol\":{\"keccak256\":\"0x10828f37a9cfa96937a7258480353237b925a4e99c36d1d453a998c45b3e7775\",\"urls\":[\"bzz-raw://2aa8d4a069913a589d4ac8126f3c198169f8f2c25d862f8ecdc0e41893eba7cf\",\"dweb:/ipfs/QmPKen9TF29983mhThvJxrCdJoent83itgg8hQmE93KaXq\"]},\"project:/contracts/Reserves.sol\":{\"keccak256\":\"0xcdcf784661018652289847931f5979876afb0f1a4e606bfd198d3830cd79f75c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91f25ba593f6e50798fef42bbfffa6240c4ffabaf9b0519abcb623efc5e8ee5c\",\"dweb:/ipfs/QmWziNrYM5bnDVDUQUzUJNEA55HxCMjbiCnudY4qovNfys\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061012a5760003560e01c80634fed0518116100ab578063b60d26171161006f578063b60d261714610354578063b731bc6d1461037d578063b968c930146103a8578063db8bf7e6146103d1578063dcbbdbb8146103e8578063fcd6e191146104135761012a565b80634fed0518146102ab5780636862f589146102c95780636e67fcdd146102f4578063734997e51461031f578063757c3cbd146103295761012a565b806338cc4831116100f257806338cc4831146101f75780634075af221461022257806342b9309a1461025f5780634a282670146102765780634b84a647146102805761012a565b80630b8e4ad41461012f57806319ff1d211461015a5780632133e3b91461018557806323ded52a146101c25780632b0fa399146101ed575b600080fd5b34801561013b57600080fd5b5061014461043e565b6040516101519190612fe1565b60405180910390f35b34801561016657600080fd5b5061016f61049f565b60405161017c9190612fe1565b60405180910390f35b34801561019157600080fd5b506101ac60048036038101906101a7919061302d565b6104ae565b6040516101b99190612fe1565b60405180910390f35b3480156101ce57600080fd5b506101d76104d1565b6040516101e49190612fe1565b60405180910390f35b6101f5610599565b005b34801561020357600080fd5b5061020c6107cc565b60405161021991906130ae565b60405180910390f35b34801561022e57600080fd5b50610249600480360381019061024491906130f5565b6107d4565b6040516102569190612fe1565b60405180910390f35b34801561026b57600080fd5b50610274610867565b005b61027e610ed7565b005b34801561028c57600080fd5b50610295611485565b6040516102a29190612fe1565b60405180910390f35b6102b3611527565b6040516102c09190612fe1565b60405180910390f35b3480156102d557600080fd5b506102de611875565b6040516102eb9190612fe1565b60405180910390f35b34801561030057600080fd5b506103096118bc565b6040516103169190612fe1565b60405180910390f35b610327611903565b005b34801561033557600080fd5b5061033e611e03565b60405161034b9190612fe1565b60405180910390f35b34801561036057600080fd5b5061037b60048036038101906103769190613122565b611e4a565b005b34801561038957600080fd5b506103926121dc565b60405161039f9190612fe1565b60405180910390f35b3480156103b457600080fd5b506103cf60048036038101906103ca9190613122565b612238565b005b3480156103dd57600080fd5b506103e6612a1d565b005b3480156103f457600080fd5b506103fd612f64565b60405161040a9190612fe1565b60405180910390f35b34801561041f57600080fd5b50610428612fc0565b6040516104359190612fe1565b60405180910390f35b6000612710612328600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610490919061317e565b61049a91906131ef565b905090565b60008060019050606491505090565b600061271082846104bf919061317e565b6104c991906131ef565b905092915050565b600080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054b906132a3565b60405180910390fd5b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161061b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106129061330f565b60405180910390fd5b600034905060008103610663576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065a9061337b565b60405180910390fd5b6000670de0b6b3a76400008261067991906131ef565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a1cf9e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e91906133b0565b82610719919061317e565b905082600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461076a91906133dd565b9250508190555080600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107c091906133dd565b92505081905550505050565b600030905090565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461086091906133dd565b9050919050565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116108e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e0906132a3565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161098791906130ae565b602060405180830381865afa1580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c891906133b0565b1015610a09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0090613483565b60405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610aaa939291906134a3565b6020604051808303816000875af1158015610ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aed9190613512565b506000610afc826006546104ae565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30338486610b48919061353f565b6040518463ffffffff1660e01b8152600401610b66939291906134a3565b6020604051808303816000875af1158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba99190613512565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ad415bd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c789190613588565b846040518463ffffffff1660e01b8152600401610c97939291906134a3565b6020604051808303816000875af1158015610cb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cda9190613512565b50600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090556001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610df491906133dd565b9250508190555060005b601180549050811015610ed1573373ffffffffffffffffffffffffffffffffffffffff1660118281548110610e3657610e356135b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610ebe5760118181548110610e9057610e8f6135b5565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b8080610ec9906135e4565b915050610dfe565b50505050565b6000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610f59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f509061330f565b60405180910390fd5b6000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080341015610fe0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd790613678565b60405180910390fd5b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000611032826006546104ae565b905060003390508073ffffffffffffffffffffffffffffffffffffffff166108fc838561105f919061353f565b9081150290604051600060405180830381858888f1935050505015801561108a573d6000803e3d6000fd5b50834710156110ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c5906136e4565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663996e96f06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561113d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111619190613588565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc869081150290604051600060405180830381858888f193505050501580156111a9573d6000803e3d6000fd5b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ad415bd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123d9190613588565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f19350505050158015611285573d6000803e3d6000fd5b50600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090556001600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461139f91906133dd565b9250508190555060005b60108054905081101561147c573373ffffffffffffffffffffffffffffffffffffffff16601082815481106113e1576113e06135b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611469576010818154811061143b5761143a6135b5565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b8080611474906135e4565b9150506113a9565b50505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114e191906130ae565b602060405180830381865afa1580156114fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152291906133b0565b905090565b60008034905060008103611570576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115679061337b565b60405180910390fd5b6000670de0b6b3a76400008261158691906131ef565b905060006010339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a1cf9e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561165a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167e91906133b0565b82611689919061317e565b90506000611699846005546104ae565b905083600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116ea91906133dd565b9250508190555080600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461174091906133dd565b9250508190555081600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461179691906133dd565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394a54a1282336040518363ffffffff1660e01b81526004016117fa929190613725565b600060405180830381600087803b15801561181457600080fd5b505af1158015611828573d6000803e3d6000fd5b50505050600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205494505050505090565b6000600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166319d747236040518163ffffffff1660e01b8152600401602060405180830381865afa158015611972573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199691906133b0565b905060005b601080549050811015611dff576000670de0b6b3a7640000600c6000601085815481106119cb576119ca6135b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a3b91906131ef565b83611a46919061317e565b9050600e600060108481548110611a6057611a5f6135b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111611deb576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663996e96f06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5f9190613588565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc600c600060108781548110611b9357611b926135b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f19350505050158015611c24573d6000803e3d6000fd5b50600c600060108581548110611c3d57611c3c6135b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600d600060108581548110611cbe57611cbd6135b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600e600060108581548110611d3f57611d3e6135b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560108381548110611dbc57611dbb6135b5565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505b508080611df7906135e4565b91505061199b565b5050565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611ecc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ec3906132a3565b60405180910390fd5b60008103611f0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f069061337b565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401611f6991906130ae565b602060405180830381865afa158015611f86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611faa91906133b0565b1015611feb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fe290613483565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663946e34726040518163ffffffff1660e01b8152600401602060405180830381865afa15801561205a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207e91906133b0565b82612089919061317e565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016120e8939291906134a3565b6020604051808303816000875af1158015612107573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061212b9190613512565b5081600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461217b91906133dd565b9250508190555080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546121d191906133dd565b925050819055505050565b60006064600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461222e91906133dd565b9250508190555090565b6000810361227b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122729061337b565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016122d591906130ae565b602060405180830381865afa1580156122f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231691906133b0565b1015612357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161234e90613483565b60405180910390fd5b6011339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006001600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161241991906130ae565b602060405180830381865afa158015612436573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061245a91906133b0565b10612478576000612328905061247083826104ae565b915050612487565b612484826005546104ae565b90505b6000612495836006546104ae565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016124f4939291906134a3565b6020604051808303816000875af1158015612513573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125379190613512565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ad415bd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126069190613588565b846040518463ffffffff1660e01b8152600401612625939291906134a3565b6020604051808303816000875af1158015612644573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126689190613512565b5060008184612677919061353f565b90506001600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016126d691906130ae565b602060405180830381865afa1580156126f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061271791906133b0565b10612735576000612328905061272d82826104ae565b935050612744565b612741816005546104ae565b92505b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461279391906133dd565b9250508190555082600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546127e991906133dd565b925050819055506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663946e34726040518163ffffffff1660e01b8152600401602060405180830381865afa15801561285f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061288391906133b0565b8261288e919061317e565b905080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546128df91906133dd565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663598c5b4285306040518363ffffffff1660e01b815260040161294392919061374e565b600060405180830381600087803b15801561295d57600080fd5b505af1158015612971573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033876040518463ffffffff1660e01b81526004016129d2939291906134a3565b6020604051808303816000875af11580156129f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a159190613512565b505050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffa8ce506040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab091906133b0565b905060005b601180549050811015612f605760006008600060118481548110612adc57612adb6135b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483612b4d919061317e565b9050600a600060118481548110612b6757612b666135b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111612f4c57600060118381548110612be957612be86135b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663996e96f06040518163ffffffff1660e01b8152600401602060405180830381865afa158015612cc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ce49190613588565b600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518463ffffffff1660e01b8152600401612d42939291906134a3565b6020604051808303816000875af1158015612d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d859190613512565b506008600060118581548110612d9e57612d9d6135b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090556009600060118581548110612e1f57612e1e6135b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600a600060118581548110612ea057612e9f6135b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560118381548110612f1d57612f1c6135b5565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505b508080612f58906135e4565b915050612ab5565b5050565b60006064600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612fb691906133dd565b9250508190555090565b600047905090565b6000819050919050565b612fdb81612fc8565b82525050565b6000602082019050612ff66000830184612fd2565b92915050565b600080fd5b61300a81612fc8565b811461301557600080fd5b50565b60008135905061302781613001565b92915050565b6000806040838503121561304457613043612ffc565b5b600061305285828601613018565b925050602061306385828601613018565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006130988261306d565b9050919050565b6130a88161308d565b82525050565b60006020820190506130c3600083018461309f565b92915050565b6130d28161308d565b81146130dd57600080fd5b50565b6000813590506130ef816130c9565b92915050565b60006020828403121561310b5761310a612ffc565b5b6000613119848285016130e0565b91505092915050565b60006020828403121561313857613137612ffc565b5b600061314684828501613018565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061318982612fc8565b915061319483612fc8565b92508282026131a281612fc8565b915082820484148315176131b9576131b861314f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006131fa82612fc8565b915061320583612fc8565b925082613215576132146131c0565b5b828204905092915050565b600082825260208201905092915050565b7f596f7520646f206e6f74206861766520616e79206f75747374616e64696e672060008201527f6465627400000000000000000000000000000000000000000000000000000000602082015250565b600061328d602483613220565b915061329882613231565b604082019050919050565b600060208201905081810360008301526132bc81613280565b9050919050565b7f596f7520646f206e6f742068617665206f75747374616e64696e672064656274600082015250565b60006132f9602083613220565b9150613304826132c3565b602082019050919050565b60006020820190508181036000830152613328816132ec565b9050919050565b7f506c6561736520707574206d6f726520636f6c6c61746572616c000000000000600082015250565b6000613365601a83613220565b91506133708261332f565b602082019050919050565b6000602082019050818103600083015261339481613358565b9050919050565b6000815190506133aa81613001565b92915050565b6000602082840312156133c6576133c5612ffc565b5b60006133d48482850161339b565b91505092915050565b60006133e882612fc8565b91506133f383612fc8565b925082820190508082111561340b5761340a61314f565b5b92915050565b7f596f7520646f206e6f74206861766520656e6f756768204156415820746f6b6560008201527f6e21000000000000000000000000000000000000000000000000000000000000602082015250565b600061346d602283613220565b915061347882613411565b604082019050919050565b6000602082019050818103600083015261349c81613460565b9050919050565b60006060820190506134b8600083018661309f565b6134c5602083018561309f565b6134d26040830184612fd2565b949350505050565b60008115159050919050565b6134ef816134da565b81146134fa57600080fd5b50565b60008151905061350c816134e6565b92915050565b60006020828403121561352857613527612ffc565b5b6000613536848285016134fd565b91505092915050565b600061354a82612fc8565b915061355583612fc8565b925082820390508181111561356d5761356c61314f565b5b92915050565b600081519050613582816130c9565b92915050565b60006020828403121561359e5761359d612ffc565b5b60006135ac84828501613573565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006135ef82612fc8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036136215761362061314f565b5b600182019050919050565b7f56616c756520696e736572746564206973206e6f7420656e6f75676800000000600082015250565b6000613662601c83613220565b915061366d8261362c565b602082019050919050565b6000602082019050818103600083015261369181613655565b9050919050565b7f4552524f52000000000000000000000000000000000000000000000000000000600082015250565b60006136ce600583613220565b91506136d982613698565b602082019050919050565b600060208201905081810360008301526136fd816136c1565b9050919050565b600061370f8261306d565b9050919050565b61371f81613704565b82525050565b600060408201905061373a6000830185612fd2565b6137476020830184613716565b9392505050565b60006040820190506137636000830185612fd2565b613770602083018461309f565b939250505056fea2646970667358221220537adf2aef70733dadca401887e371a163e77673022fc3bec39db4c442d686ef64736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4192:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:10",
                "type": ""
              }
            ],
            "src": "7:75:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:10"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:10"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:10",
                "type": ""
              }
            ],
            "src": "334:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:10",
                "type": ""
              }
            ],
            "src": "466:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "624:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "634:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "663:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "645:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "634:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Avax_$60",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "606:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "616:7:10",
                "type": ""
              }
            ],
            "src": "568:107:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:90:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "803:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "812:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "815:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "805:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "805:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "805:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "758:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "794:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Avax_$60",
                              "nodeType": "YulIdentifier",
                              "src": "765:28:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "765:35:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "755:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "755:46:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "748:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "748:54:10"
                  },
                  "nodeType": "YulIf",
                  "src": "745:74:10"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Avax_$60",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "728:5:10",
                "type": ""
              }
            ],
            "src": "681:144:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "905:91:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "915:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "930:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "924:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "924:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "915:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "984:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Avax_$60",
                      "nodeType": "YulIdentifier",
                      "src": "946:37:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "946:44:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "946:44:10"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Avax_$60_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "883:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "891:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "899:5:10",
                "type": ""
              }
            ],
            "src": "831:165:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1055:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1065:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1094:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1076:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1076:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1065:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1037:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1047:7:10",
                "type": ""
              }
            ],
            "src": "1002:104:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1179:59:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1189:43:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1226:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "1200:25:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1200:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1189:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_LiquidityPool_$2458",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1161:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1171:7:10",
                "type": ""
              }
            ],
            "src": "1112:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1309:101:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1388:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1397:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1400:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1390:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1390:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1390:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1332:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1379:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_LiquidityPool_$2458",
                              "nodeType": "YulIdentifier",
                              "src": "1339:39:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1339:46:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1329:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1329:57:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1322:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1322:65:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1319:85:10"
                }
              ]
            },
            "name": "validator_revert_t_contract$_LiquidityPool_$2458",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1302:5:10",
                "type": ""
              }
            ],
            "src": "1244:166:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1501:102:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1511:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1526:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1520:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1520:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1511:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1591:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_LiquidityPool_$2458",
                      "nodeType": "YulIdentifier",
                      "src": "1542:48:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1542:55:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1542:55:10"
                }
              ]
            },
            "name": "abi_decode_t_contract$_LiquidityPool_$2458_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1479:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1487:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1495:5:10",
                "type": ""
              }
            ],
            "src": "1416:187:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1671:59:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1681:43:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1718:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "1692:25:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1692:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1681:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Reserves_$5534",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1653:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1663:7:10",
                "type": ""
              }
            ],
            "src": "1609:121:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1796:96:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1870:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1879:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1882:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1872:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1872:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1872:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1819:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1861:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Reserves_$5534",
                              "nodeType": "YulIdentifier",
                              "src": "1826:34:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1826:41:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1816:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1816:52:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1809:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1809:60:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1806:80:10"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Reserves_$5534",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1789:5:10",
                "type": ""
              }
            ],
            "src": "1736:156:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1978:97:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1988:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2003:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1997:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1997:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1988:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2063:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Reserves_$5534",
                      "nodeType": "YulIdentifier",
                      "src": "2019:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2019:50:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2019:50:10"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Reserves_$5534_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1956:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1964:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1972:5:10",
                "type": ""
              }
            ],
            "src": "1898:177:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2144:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2154:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2183:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2165:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2165:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2154:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_PriceFeed_$5306",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2126:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2136:7:10",
                "type": ""
              }
            ],
            "src": "2081:114:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2262:97:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2337:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2346:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2349:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2339:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2339:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2339:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2285:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2328:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_PriceFeed_$5306",
                              "nodeType": "YulIdentifier",
                              "src": "2292:35:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2292:42:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2282:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2282:53:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2275:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2275:61:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2272:81:10"
                }
              ]
            },
            "name": "validator_revert_t_contract$_PriceFeed_$5306",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2255:5:10",
                "type": ""
              }
            ],
            "src": "2201:158:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2446:98:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2456:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2471:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2465:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2465:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2456:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2532:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_PriceFeed_$5306",
                      "nodeType": "YulIdentifier",
                      "src": "2487:44:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2487:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2487:51:10"
                }
              ]
            },
            "name": "abi_decode_t_contract$_PriceFeed_$5306_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2424:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2432:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2440:5:10",
                "type": ""
              }
            ],
            "src": "2365:179:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2616:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2626:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2655:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2637:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2637:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2626:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IdentityToken_$812",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2598:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2608:7:10",
                "type": ""
              }
            ],
            "src": "2550:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2737:100:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2815:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2824:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2827:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2817:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2817:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2817:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2760:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2806:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IdentityToken_$812",
                              "nodeType": "YulIdentifier",
                              "src": "2767:38:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2767:45:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2757:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2757:56:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2750:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2750:64:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2747:84:10"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IdentityToken_$812",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2730:5:10",
                "type": ""
              }
            ],
            "src": "2673:164:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2927:101:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2937:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2952:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2946:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2946:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2937:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3016:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IdentityToken_$812",
                      "nodeType": "YulIdentifier",
                      "src": "2968:47:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2968:54:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2968:54:10"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IdentityToken_$812_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2905:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2913:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2921:5:10",
                "type": ""
              }
            ],
            "src": "2843:185:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3268:921:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3315:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3317:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3317:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3317:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3289:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3298:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3285:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3285:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3310:3:10",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3281:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3281:33:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3278:120:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3408:139:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3423:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3437:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3427:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3452:85:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3509:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3520:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3505:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3505:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3529:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Avax_$60_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3462:42:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3462:75:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3452:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3557:151:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3572:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3586:2:10",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3576:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3602:96:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3670:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3681:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3666:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3666:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3690:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_LiquidityPool_$2458_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3612:53:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3612:86:10"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3602:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3718:146:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3733:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3747:2:10",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3737:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3763:91:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3826:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3837:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3822:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3822:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3846:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Reserves_$5534_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3773:48:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3773:81:10"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3763:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3874:147:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3889:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3903:2:10",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3893:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3919:92:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3983:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3994:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3979:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3979:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4003:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PriceFeed_$5306_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3929:49:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3929:82:10"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3919:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4031:151:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4046:17:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4060:3:10",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4050:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4077:95:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4144:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4155:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4140:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4140:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4164:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IdentityToken_$812_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4087:52:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4087:85:10"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "4077:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Avax_$60t_contract$_LiquidityPool_$2458t_contract$_Reserves_$5534t_contract$_PriceFeed_$5306t_contract$_IdentityToken_$812_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3206:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3217:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3229:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3237:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3245:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3253:6:10",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3261:6:10",
                "type": ""
              }
            ],
            "src": "3034:1155:10"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Avax_$60(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_Avax_$60(value) {\n        if iszero(eq(value, cleanup_t_contract$_Avax_$60(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Avax_$60_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Avax_$60(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_LiquidityPool_$2458(value) -> cleaned {\n        cleaned := cleanup_t_address_payable(value)\n    }\n\n    function validator_revert_t_contract$_LiquidityPool_$2458(value) {\n        if iszero(eq(value, cleanup_t_contract$_LiquidityPool_$2458(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_LiquidityPool_$2458_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_LiquidityPool_$2458(value)\n    }\n\n    function cleanup_t_contract$_Reserves_$5534(value) -> cleaned {\n        cleaned := cleanup_t_address_payable(value)\n    }\n\n    function validator_revert_t_contract$_Reserves_$5534(value) {\n        if iszero(eq(value, cleanup_t_contract$_Reserves_$5534(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Reserves_$5534_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Reserves_$5534(value)\n    }\n\n    function cleanup_t_contract$_PriceFeed_$5306(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_PriceFeed_$5306(value) {\n        if iszero(eq(value, cleanup_t_contract$_PriceFeed_$5306(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_PriceFeed_$5306_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_PriceFeed_$5306(value)\n    }\n\n    function cleanup_t_contract$_IdentityToken_$812(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IdentityToken_$812(value) {\n        if iszero(eq(value, cleanup_t_contract$_IdentityToken_$812(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IdentityToken_$812_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IdentityToken_$812(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Avax_$60t_contract$_LiquidityPool_$2458t_contract$_Reserves_$5534t_contract$_PriceFeed_$5306t_contract$_IdentityToken_$812_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Avax_$60_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_LiquidityPool_$2458_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_Reserves_$5534_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_contract$_PriceFeed_$5306_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_contract$_IdentityToken_$812_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14114:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:10",
                "type": ""
              }
            ],
            "src": "7:77:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:10"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:10",
                "type": ""
              }
            ],
            "src": "90:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:10",
                "type": ""
              }
            ],
            "src": "214:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:35:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:19:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "492:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "475:6:10",
                "type": ""
              }
            ],
            "src": "442:75:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "629:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "622:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "622:12:10"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "523:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "755:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "745:12:10"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "646:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "812:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "878:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "881:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "871:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "835:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "860:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "842:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "842:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "832:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "832:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "822:63:10"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "805:5:10",
                "type": ""
              }
            ],
            "src": "769:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "949:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "959:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "981:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "968:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "959:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1024:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "997:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "997:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "927:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "935:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "943:5:10",
                "type": ""
              }
            ],
            "src": "897:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1125:391:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1171:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1173:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1173:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1173:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1146:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1155:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1142:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1142:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1167:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1138:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1138:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1135:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1264:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1279:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1293:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1283:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1308:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1343:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1354:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1339:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1339:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1363:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1318:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1318:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1308:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1391:118:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1406:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1420:2:10",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1410:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1436:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1471:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1482:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1467:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1467:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1491:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1446:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1446:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1436:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1087:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1098:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1110:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1118:6:10",
                "type": ""
              }
            ],
            "src": "1042:474:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1567:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1577:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1592:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1599:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1588:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1588:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1577:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1549:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1559:7:10",
                "type": ""
              }
            ],
            "src": "1522:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1699:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1709:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1738:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1720:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1720:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1709:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1681:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1691:7:10",
                "type": ""
              }
            ],
            "src": "1654:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1821:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1838:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1861:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1843:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1843:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1831:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1831:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1831:37:10"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1809:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1816:3:10",
                "type": ""
              }
            ],
            "src": "1756:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1978:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1988:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2000:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2011:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1996:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1996:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1988:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2068:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2081:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2092:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2077:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2077:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2024:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2024:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2024:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1950:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1962:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1973:4:10",
                "type": ""
              }
            ],
            "src": "1880:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2151:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2208:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2217:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2220:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2210:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2210:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2210:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2174:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2199:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2181:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2181:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2171:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2171:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2164:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2164:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2161:63:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2144:5:10",
                "type": ""
              }
            ],
            "src": "2108:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2288:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2298:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2320:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2307:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2307:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2298:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2363:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2336:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2336:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2336:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2266:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2274:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2282:5:10",
                "type": ""
              }
            ],
            "src": "2236:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2447:263:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2493:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2495:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2495:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2495:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2468:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2477:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2464:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2464:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2489:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2460:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2460:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2457:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2586:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2601:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2615:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2605:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2630:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2665:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2676:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2661:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2661:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2685:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2640:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2640:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2630:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2417:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2428:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2440:6:10",
                "type": ""
              }
            ],
            "src": "2381:329:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2782:263:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2828:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2830:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2830:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2830:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2803:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2812:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2799:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2799:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2824:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2795:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2795:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2792:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2921:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2936:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2950:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2940:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2965:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3000:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3011:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2996:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2996:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3020:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2975:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2975:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2965:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2752:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2763:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2775:6:10",
                "type": ""
              }
            ],
            "src": "2716:329:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3079:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3096:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3099:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3089:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3089:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3089:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3193:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3196:4:10",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3186:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3186:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3186:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3217:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3220:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3210:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3210:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3210:15:10"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3051:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3285:362:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3295:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3318:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3300:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3300:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3295:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3329:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3352:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3334:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3334:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3329:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3363:28:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3386:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3389:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3382:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3382:9:10"
                  },
                  "variables": [
                    {
                      "name": "product_raw",
                      "nodeType": "YulTypedName",
                      "src": "3367:11:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3400:41:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "product_raw",
                        "nodeType": "YulIdentifier",
                        "src": "3429:11:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3411:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3411:30:10"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3400:7:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3618:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3620:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3620:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3620:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3551:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3544:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3544:9:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "3574:1:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "3581:7:10"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "3590:1:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "3577:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3577:15:10"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "3571:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3571:22:10"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "3524:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3524:83:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3504:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3504:113:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3501:139:10"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3268:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3271:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "3277:7:10",
                "type": ""
              }
            ],
            "src": "3237:410:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3681:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3698:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3701:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3691:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3691:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3691:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3795:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3798:4:10",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3788:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3788:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3788:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3819:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3822:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3812:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3812:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3812:15:10"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "3653:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3881:143:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3891:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3914:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3896:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3896:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3891:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3925:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3948:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3930:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3930:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3925:1:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3972:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "3974:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3974:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3974:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3969:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3962:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3962:9:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3959:35:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4004:14:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4013:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4016:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "4009:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4009:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "4004:1:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3870:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3873:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "3879:1:10",
                "type": ""
              }
            ],
            "src": "3839:185:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4126:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4143:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4148:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4136:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4136:19:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4136:19:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4164:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4183:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4188:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4179:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4179:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4164:11:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4098:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4103:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4114:11:10",
                "type": ""
              }
            ],
            "src": "4030:169:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4311:117:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4333:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4341:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4329:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4329:14:10"
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520616e79206f75747374616e64696e6720",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4345:34:10",
                        "type": "",
                        "value": "You do not have any outstanding "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4322:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4322:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4322:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4401:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4409:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4397:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4397:15:10"
                      },
                      {
                        "hexValue": "64656274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4414:6:10",
                        "type": "",
                        "value": "debt"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4390:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4390:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4390:31:10"
                }
              ]
            },
            "name": "store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4303:6:10",
                "type": ""
              }
            ],
            "src": "4205:223:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4580:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4590:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4656:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4661:2:10",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4597:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4597:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4590:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4762:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
                      "nodeType": "YulIdentifier",
                      "src": "4673:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4673:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4673:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4775:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4786:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4791:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4782:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4782:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4775:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4568:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4576:3:10",
                "type": ""
              }
            ],
            "src": "4434:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4977:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4987:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4999:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5010:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4995:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4995:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4987:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5034:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5045:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5030:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5030:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5053:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5059:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5049:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5049:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5023:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5023:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5023:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5079:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5213:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5087:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5087:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5079:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4957:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4972:4:10",
                "type": ""
              }
            ],
            "src": "4806:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5337:76:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5359:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5367:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5355:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5355:14:10"
                      },
                      {
                        "hexValue": "596f7520646f206e6f742068617665206f75747374616e64696e672064656274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5371:34:10",
                        "type": "",
                        "value": "You do not have outstanding debt"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5348:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5348:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5348:58:10"
                }
              ]
            },
            "name": "store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5329:6:10",
                "type": ""
              }
            ],
            "src": "5231:182:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5565:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5575:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5641:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5646:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5582:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5582:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5575:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5747:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
                      "nodeType": "YulIdentifier",
                      "src": "5658:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5658:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5658:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5760:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5771:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5776:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5767:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5767:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5760:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5553:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5561:3:10",
                "type": ""
              }
            ],
            "src": "5419:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5962:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5972:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5984:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5995:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5980:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5980:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5972:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6019:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6030:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6015:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6015:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6038:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6044:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6034:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6034:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6008:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6008:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6008:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6064:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6198:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6072:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6072:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6064:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5942:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5957:4:10",
                "type": ""
              }
            ],
            "src": "5791:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6322:70:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6344:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6352:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6340:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6340:14:10"
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6356:28:10",
                        "type": "",
                        "value": "Please put more collateral"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6333:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6333:52:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6333:52:10"
                }
              ]
            },
            "name": "store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6314:6:10",
                "type": ""
              }
            ],
            "src": "6216:176:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6544:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6554:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6620:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6625:2:10",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6561:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6561:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6554:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6726:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                      "nodeType": "YulIdentifier",
                      "src": "6637:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6637:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6637:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6739:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6750:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6755:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6746:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6746:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6739:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6532:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6540:3:10",
                "type": ""
              }
            ],
            "src": "6398:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6941:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6951:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6963:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6974:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6959:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6959:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6951:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6998:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7009:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6994:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6994:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7017:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7023:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7013:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7013:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6987:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6987:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6987:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7043:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7177:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7051:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7051:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7043:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6921:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6936:4:10",
                "type": ""
              }
            ],
            "src": "6770:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7258:80:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7268:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7283:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7277:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7277:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7268:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7326:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7299:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7299:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7299:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7236:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7244:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7252:5:10",
                "type": ""
              }
            ],
            "src": "7195:143:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7421:274:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7467:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7469:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7469:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7469:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7442:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7451:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7438:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7438:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7463:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7434:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7434:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "7431:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7560:128:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7575:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7589:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7579:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7604:74:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7650:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7661:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7646:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7646:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7670:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "7614:31:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7614:64:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7604:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7391:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7402:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7414:6:10",
                "type": ""
              }
            ],
            "src": "7344:351:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7745:147:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7755:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7778:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7760:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7760:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7755:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7789:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7812:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7794:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7794:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7789:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7823:16:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7834:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7837:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7830:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7830:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7823:3:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7863:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7865:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7865:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7865:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7855:1:10"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "7858:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7852:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7852:10:10"
                  },
                  "nodeType": "YulIf",
                  "src": "7849:36:10"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7732:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7735:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7741:3:10",
                "type": ""
              }
            ],
            "src": "7701:191:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8004:115:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8026:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8034:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8022:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8022:14:10"
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8038:34:10",
                        "type": "",
                        "value": "You do not have enough AVAX toke"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8015:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8015:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8015:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8094:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8102:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8090:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8090:15:10"
                      },
                      {
                        "hexValue": "6e21",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8107:4:10",
                        "type": "",
                        "value": "n!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8083:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8083:29:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8083:29:10"
                }
              ]
            },
            "name": "store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7996:6:10",
                "type": ""
              }
            ],
            "src": "7898:221:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8271:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8281:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8347:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8352:2:10",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8288:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8288:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8281:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8453:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                      "nodeType": "YulIdentifier",
                      "src": "8364:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8364:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8364:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8466:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8477:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8482:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8473:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8473:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8466:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8259:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8267:3:10",
                "type": ""
              }
            ],
            "src": "8125:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8668:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8678:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8690:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8701:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8686:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8686:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8678:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8725:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8736:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8721:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8721:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8744:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8750:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8740:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8740:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8714:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8714:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8714:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8770:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8904:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8778:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8778:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8770:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8648:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8663:4:10",
                "type": ""
              }
            ],
            "src": "8497:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9076:288:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9086:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9098:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9109:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9094:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9094:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9086:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9166:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9179:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9190:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9175:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9175:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9122:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9122:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9122:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9247:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9260:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9271:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9256:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9256:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9203:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9203:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9203:72:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9329:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9342:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9353:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9338:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9338:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9285:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9285:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9285:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9032:9:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9044:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9052:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9060:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9071:4:10",
                "type": ""
              }
            ],
            "src": "8922:442:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9412:48:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9422:32:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9447:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9440:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9440:13:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9433:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9433:21:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9422:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9394:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9404:7:10",
                "type": ""
              }
            ],
            "src": "9370:90:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9506:76:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9560:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9569:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9572:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9562:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9562:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9562:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9529:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9551:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "9536:14:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9536:21:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9526:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9526:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9519:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9519:40:10"
                  },
                  "nodeType": "YulIf",
                  "src": "9516:60:10"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9499:5:10",
                "type": ""
              }
            ],
            "src": "9466:116:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9648:77:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9658:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9673:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9667:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9667:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9658:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9713:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "9689:23:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9689:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9689:30:10"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "9626:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9634:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9642:5:10",
                "type": ""
              }
            ],
            "src": "9588:137:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9805:271:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9851:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9853:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9853:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9853:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9826:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9835:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9822:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9822:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9847:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9818:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9818:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "9815:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9944:125:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9959:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9973:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9963:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9988:71:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10031:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10042:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10027:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10027:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10051:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9998:28:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9998:61:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9988:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9775:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9786:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9798:6:10",
                "type": ""
              }
            ],
            "src": "9731:345:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10127:149:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10137:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10160:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10142:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10142:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10137:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10171:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10194:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10176:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10176:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10171:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10205:17:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10217:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10220:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10213:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10213:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "10205:4:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10247:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10249:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10249:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10249:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "10238:4:10"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10244:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10235:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10235:11:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10232:37:10"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10113:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10116:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "10122:4:10",
                "type": ""
              }
            ],
            "src": "10082:194:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10345:80:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10355:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10370:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10364:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10364:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "10355:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10413:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "10386:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10386:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10386:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "10323:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10331:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10339:5:10",
                "type": ""
              }
            ],
            "src": "10282:143:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10508:274:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10554:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "10556:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10556:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10556:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10529:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10538:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10525:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10525:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10550:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10521:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10521:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10518:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10647:128:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10662:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10676:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10666:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10691:74:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10737:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10748:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10733:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10733:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10757:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10701:31:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10701:64:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10691:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10478:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10489:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10501:6:10",
                "type": ""
              }
            ],
            "src": "10431:351:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10816:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10833:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10836:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10826:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10826:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10826:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10930:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10933:4:10",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10923:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10923:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10923:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10954:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10957:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10947:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10947:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10947:15:10"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "10788:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11017:190:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11027:33:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11054:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11036:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11036:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11027:5:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11150:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11152:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11152:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11152:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11075:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11082:66:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "11072:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11072:77:10"
                  },
                  "nodeType": "YulIf",
                  "src": "11069:103:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11181:20:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11192:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11199:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11188:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11188:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "11181:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11003:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "11013:3:10",
                "type": ""
              }
            ],
            "src": "10974:233:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11319:72:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11341:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11349:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11337:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11337:14:10"
                      },
                      {
                        "hexValue": "56616c756520696e736572746564206973206e6f7420656e6f756768",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11353:30:10",
                        "type": "",
                        "value": "Value inserted is not enough"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11330:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11330:54:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11330:54:10"
                }
              ]
            },
            "name": "store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11311:6:10",
                "type": ""
              }
            ],
            "src": "11213:178:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11543:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11553:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11619:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11624:2:10",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11560:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11560:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11553:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11725:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
                      "nodeType": "YulIdentifier",
                      "src": "11636:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11636:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11636:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11738:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11749:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11754:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11745:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11745:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11738:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11531:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11539:3:10",
                "type": ""
              }
            ],
            "src": "11397:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11940:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11950:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11962:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11973:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11958:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11958:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11950:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11997:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12008:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11993:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11993:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12016:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12022:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12012:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12012:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11986:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11986:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11986:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12042:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12176:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12050:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12050:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12042:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11920:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11935:4:10",
                "type": ""
              }
            ],
            "src": "11769:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12300:49:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12322:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12330:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12318:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12318:14:10"
                      },
                      {
                        "hexValue": "4552524f52",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12334:7:10",
                        "type": "",
                        "value": "ERROR"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12311:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12311:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12311:31:10"
                }
              ]
            },
            "name": "store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12292:6:10",
                "type": ""
              }
            ],
            "src": "12194:155:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12501:219:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12511:73:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12577:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12582:1:10",
                        "type": "",
                        "value": "5"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12518:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12518:66:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12511:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12682:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
                      "nodeType": "YulIdentifier",
                      "src": "12593:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12593:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12593:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12695:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12706:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12711:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12702:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12702:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12695:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12489:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12497:3:10",
                "type": ""
              }
            ],
            "src": "12355:365:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12897:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12907:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12919:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12930:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12915:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12915:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12907:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12954:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12965:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12950:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12950:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12973:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12979:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12969:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12969:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12943:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12943:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12943:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12999:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13133:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13007:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13007:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12999:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12877:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12892:4:10",
                "type": ""
              }
            ],
            "src": "12726:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13204:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13214:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13243:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "13225:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13225:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13214:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13186:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13196:7:10",
                "type": ""
              }
            ],
            "src": "13151:104:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13342:61:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13359:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13390:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "13364:25:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13364:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13352:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13352:45:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13352:45:10"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13330:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13337:3:10",
                "type": ""
              }
            ],
            "src": "13261:142:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13551:222:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13561:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13573:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13584:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13569:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13569:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13561:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13641:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13654:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13665:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13650:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13650:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13597:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13597:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13597:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13738:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13751:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13762:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13747:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13747:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13678:59:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13678:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13678:88:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13515:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13527:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13535:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13546:4:10",
                "type": ""
              }
            ],
            "src": "13409:364:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13905:206:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13915:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13927:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13938:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13923:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13923:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13915:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13995:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14008:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14019:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14004:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14004:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13951:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13951:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13951:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14076:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14089:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14100:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14085:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14085:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14032:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14032:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14032:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13869:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13881:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13889:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13900:4:10",
                "type": ""
              }
            ],
            "src": "13779:332:10"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have any outstanding \")\n\n        mstore(add(memPtr, 32), \"debt\")\n\n    }\n\n    function abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have outstanding debt\")\n\n    }\n\n    function abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please put more collateral\")\n\n    }\n\n    function abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have enough AVAX toke\")\n\n        mstore(add(memPtr, 32), \"n!\")\n\n    }\n\n    function abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Value inserted is not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR\")\n\n    }\n\n    function abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n        store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address_payable__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "232:13892:4:-:0;;;425:4;389:40;;477:3;455:25;;532:10;511:31;;;;;;;;;;;;;;;;;;;;1167:308;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1318:16;1306:9;;:28;;;;;;;;;;;;;;;;;;1360:2;1344:13;;:18;;;;;;;;;;;;;;;;;;1383:15;1372:8;;:26;;;;;;;;;;;;;;;;;;1420:2;1408:9;;:14;;;;;;;;;;;;;;;;;;1448:20;1432:13;;:36;;;;;;;;;;;;;;;;;;1167:308;;;;;232:13892;;88:117:10;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:107::-;616:7;645:24;663:5;645:24;:::i;:::-;634:35;;568:107;;;:::o;681:144::-;765:35;794:5;765:35;:::i;:::-;758:5;755:46;745:74;;815:1;812;805:12;745:74;681:144;:::o;831:165::-;899:5;930:6;924:13;915:22;;946:44;984:5;946:44;:::i;:::-;831:165;;;;:::o;1002:104::-;1047:7;1076:24;1094:5;1076:24;:::i;:::-;1065:35;;1002:104;;;:::o;1112:126::-;1171:7;1200:32;1226:5;1200:32;:::i;:::-;1189:43;;1112:126;;;:::o;1244:166::-;1339:46;1379:5;1339:46;:::i;:::-;1332:5;1329:57;1319:85;;1400:1;1397;1390:12;1319:85;1244:166;:::o;1416:187::-;1495:5;1526:6;1520:13;1511:22;;1542:55;1591:5;1542:55;:::i;:::-;1416:187;;;;:::o;1609:121::-;1663:7;1692:32;1718:5;1692:32;:::i;:::-;1681:43;;1609:121;;;:::o;1736:156::-;1826:41;1861:5;1826:41;:::i;:::-;1819:5;1816:52;1806:80;;1882:1;1879;1872:12;1806:80;1736:156;:::o;1898:177::-;1972:5;2003:6;1997:13;1988:22;;2019:50;2063:5;2019:50;:::i;:::-;1898:177;;;;:::o;2081:114::-;2136:7;2165:24;2183:5;2165:24;:::i;:::-;2154:35;;2081:114;;;:::o;2201:158::-;2292:42;2328:5;2292:42;:::i;:::-;2285:5;2282:53;2272:81;;2349:1;2346;2339:12;2272:81;2201:158;:::o;2365:179::-;2440:5;2471:6;2465:13;2456:22;;2487:51;2532:5;2487:51;:::i;:::-;2365:179;;;;:::o;2550:117::-;2608:7;2637:24;2655:5;2637:24;:::i;:::-;2626:35;;2550:117;;;:::o;2673:164::-;2767:45;2806:5;2767:45;:::i;:::-;2760:5;2757:56;2747:84;;2827:1;2824;2817:12;2747:84;2673:164;:::o;2843:185::-;2921:5;2952:6;2946:13;2937:22;;2968:54;3016:5;2968:54;:::i;:::-;2843:185;;;;:::o;3034:1155::-;3229:6;3237;3245;3253;3261;3310:3;3298:9;3289:7;3285:23;3281:33;3278:120;;;3317:79;;:::i;:::-;3278:120;3437:1;3462:75;3529:7;3520:6;3509:9;3505:22;3462:75;:::i;:::-;3452:85;;3408:139;3586:2;3612:86;3690:7;3681:6;3670:9;3666:22;3612:86;:::i;:::-;3602:96;;3557:151;3747:2;3773:81;3846:7;3837:6;3826:9;3822:22;3773:81;:::i;:::-;3763:91;;3718:146;3903:2;3929:82;4003:7;3994:6;3983:9;3979:22;3929:82;:::i;:::-;3919:92;;3874:147;4060:3;4087:85;4164:7;4155:6;4144:9;4140:22;4087:85;:::i;:::-;4077:95;;4031:151;3034:1155;;;;;;;;:::o;232:13892:4:-;;;;;;;",
  "deployedSourceMap": "232:13892:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11650:145;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13847:101;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12621:169;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13114:124;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8344:530;;;:::i;:::-;;13244:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13382:179;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4288:1456;;;;;;;;;;;;;:::i;:::-;;8885:1640;;;:::i;:::-;;12796:124;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7455:883;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11801:137;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11944:140;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10542:957;;;:::i;:::-;;11505:139;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5750:615;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12117:133;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1517:2765;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6372:1040;;;;;;;;;;;;;:::i;:::-;;12256:136;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12926:110;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11650:145;11710:7;11780:6;11772:4;11737:20;:32;11758:10;11737:32;;;;;;;;;;;;;;;;:39;;;;:::i;:::-;11736:50;;;;:::i;:::-;11728:59;;11650:145;:::o;13847:101::-;13885:7;13904:9;13916:1;13904:13;;13934:7;13927:14;;;13847:101;:::o;12621:169::-;12717:7;12777:6;12763:10;12744:16;:29;;;;:::i;:::-;12743:40;;;;:::i;:::-;12736:47;;12621:169;;;;:::o;13114:124::-;13177:7;13644:1;13615:14;:26;13630:10;13615:26;;;;;;;;;;;;;;;;:30;13607:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;13204:14:::1;:26;13219:10;13204:26;;;;;;;;;;;;;;;;13196:35;;13114:124:::0;:::o;8344:530::-;13785:1;13757:13;:25;13771:10;13757:25;;;;;;;;;;;;;;;;:29;13749:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;8417:23:::1;8443:9;8417:35;;8489:1;8470:15;:20:::0;8462:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;8531:28;8580:19;8562:15;:37;;;;:::i;:::-;8531:68;;8609:28;8694:9;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8671:20;:51;;;;:::i;:::-;8648:74;;8777:15;8742:19;:31;8762:10;8742:31;;;;;;;;;;;;;;;;:50;;;;;;;:::i;:::-;;;;;;;;8847:20;8802:29;:41;8832:10;8802:41;;;;;;;;;;;;;;;;:65;;;;;;;:::i;:::-;;;;;;;;8407:467;;;8344:530::o:0;13244:89::-;13287:7;13321:4;13306:20;;13244:89;:::o;13382:179::-;13451:7;13518:30;:36;13549:4;13518:36;;;;;;;;;;;;;;;;13477:32;:38;13510:4;13477:38;;;;;;;;;;;;;;;;:77;;;;:::i;:::-;13470:84;;13382:179;;;:::o;4288:1456::-;13644:1;13615:14;:26;13630:10;13615:26;;;;;;;;;;;;;;;;:30;13607:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;4408:22:::1;4433:14;:26;4448:10;4433:26;;;;;;;;;;;;;;;;4408:51;;4556:14;4521:9;::::0;::::1;;;;;;;;:19;;;4541:10;4521:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;4512:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;4620:24;4647:20;:32;4668:10;4647:32;;;;;;;;;;;;;;;;4620:59;;4744:9;::::0;::::1;;;;;;;;:22;;;4767:10;4787:4;4794:14;4744:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4882:26;4911:50;4931:16;4949:11;;4911:19;:50::i;:::-;4882:79;;5014:9;::::0;::::1;;;;;;;;:22;;;5045:4;5052:10;5084:18;5065:16;:37;;;;:::i;:::-;5014:90;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5139:9;::::0;::::1;;;;;;;;:22;;;5170:4;5177:8;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5208:18;5139:88;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5283:20;:32;5304:10;5283:32;;;;;;;;;;;;;;;5276:39;;;5377:14;:26;5392:10;5377:26;;;;;;;;;;;;;;;5370:33;;;5465:30;:42;5496:10;5465:42;;;;;;;;;;;;;;;5458:49;;;5565:1;5517:32;:44;5550:10;5517:44;;;;;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;;;;;5582:9;5577:161;5601:11;:18;;;;5597:1;:22;5577:161;;;5662:10;5644:28;;:11;5656:1;5644:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:28;;::::0;5640:88:::1;;5699:11;5711:1;5699:14;;;;;;;;:::i;:::-;;;;;;;;;;5692:21;;;;;;;;;;;5640:88;5621:3;;;;;:::i;:::-;;;;5577:161;;;;4339:1405;;;4288:1456::o:0;8885:1640::-;13785:1;13757:13;:25;13771:10;13757:25;;;;;;;;;;;;;;;;:29;13749:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;9013:22:::1;9038:13;:25;9052:10;9038:25;;;;;;;;;;;;;;;;9013:50;;9138:14;9125:9;:27;;9116:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;9195:24;9222:19;:31;9242:10;9222:31;;;;;;;;;;;;;;;;9195:58;;9326:26;9355:50;9375:16;9393:11;;9355:19;:50::i;:::-;9326:79;;9458:29;9499:10;9458:52;;9520:13;:22;;:61;9562:18;9543:16;:37;;;;:::i;:::-;9520:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;9725:14;9700:21;:39;;9691:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9759:25;9796:13;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9759:66;;9835:9;:18;;:34;9854:14;9835:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;9920:31;9962:8;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9920:72;;10002:15;:24;;:44;10027:18;10002:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;10064:19;:31;10084:10;10064:31;;;;;;;;;;;;;;;10057:38;;;10157:13;:25;10171:10;10157:25;;;;;;;;;;;;;;;10150:32;;;10244:29;:41;10274:10;10244:41;;;;;;;;;;;;;;;10237:48;;;10341:1;10295:30;:42;10326:10;10295:42;;;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;;;;;;;10366:9;10361:158;10385:10;:17;;;;10381:1;:21;10361:158;;;10444:10;10427:27;;:10;10438:1;10427:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:27;;::::0;10423:86:::1;;10481:10;10492:1;10481:13;;;;;;;;:::i;:::-;;;;;;;;;;10474:20;;;;;;;;;;;10423:86;10404:3;;;;;:::i;:::-;;;;10361:158;;;;8938:1587;;;;;;8885:1640::o:0;12796:124::-;12853:7;12879:9;;;;;;;;;;;:19;;;12907:4;12879:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12872:41;;12796:124;:::o;7455:883::-;7500:7;7519:25;7547:9;7519:37;;7595:1;7574:17;:22;7566:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;7637:30;7690:19;7670:17;:39;;;;:::i;:::-;7637:72;;7719:30;7760:10;7776;7760:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7847:9;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7822:22;:53;;;;:::i;:::-;7797:78;;7895:19;7917:65;7937:17;7956:25;;7917:19;:65::i;:::-;7895:87;;8047:17;8012:19;:31;8032:10;8012:31;;;;;;;;;;;;;;;;:52;;;;;;;:::i;:::-;;;;;;;;8103:11;8074:13;:25;8088:10;8074:25;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;8169:22;8124:29;:41;8154:10;8124:41;;;;;;;;;;;;;;;;:67;;;;;;;:::i;:::-;;;;;;;;8210:13;;;;;;;;;;;:29;;;8240:11;8261:10;8210:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8290:29;:41;8320:10;8290:41;;;;;;;;;;;;;;;;8283:48;;;;;;7455:883;:::o;11801:137::-;11863:7;11889:30;:42;11920:10;11889:42;;;;;;;;;;;;;;;;11882:49;;11801:137;:::o;11944:140::-;12007:7;12033:32;:44;12066:10;12033:44;;;;;;;;;;;;;;;;12026:51;;11944:140;:::o;10542:957::-;10591:25;10619:9;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10591:62;;10668:6;10663:830;10684:10;:17;;;;10680:1;:21;10663:830;;;10722:26;10810:19;10773;:34;10793:10;10804:1;10793:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10773:34;;;;;;;;;;;;;;;;:56;;;;:::i;:::-;10752:17;:78;;;;:::i;:::-;10722:109;;10871:29;:44;10901:10;10912:1;10901:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10871:44;;;;;;;;;;;;;;;;10849:18;:66;10845:638;;10997:29;11038:13;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10997:70;;11085:13;:22;;:58;11108:19;:34;11128:10;11139:1;11128:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11108:34;;;;;;;;;;;;;;;;11085:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11169:19;:34;11189:10;11200:1;11189:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11169:34;;;;;;;;;;;;;;;11162:41;;;11280:13;:28;11294:10;11305:1;11294:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11280:28;;;;;;;;;;;;;;;11273:35;;;11385:29;:44;11415:10;11426:1;11415:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11385:44;;;;;;;;;;;;;;;11378:51;;;11455:10;11466:1;11455:13;;;;;;;;:::i;:::-;;;;;;;;;;11448:20;;;;;;;;;;;10917:566;10845:638;10708:785;10703:3;;;;;:::i;:::-;;;;10663:830;;;;10581:918;10542:957::o;11505:139::-;11570:7;11595:30;:42;11626:10;11595:42;;;;;;;;;;;;;;;;11588:49;;11505:139;:::o;5750:615::-;13644:1;13615:14;:26;13630:10;13615:26;;;;;;;;;;;;;;;;:30;13607:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5876:1:::1;5857:15;:20:::0;5849:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;5962:15;5927:9;::::0;::::1;;;;;;;;:19;;;5947:10;5927:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;5918:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;6026:28;6106:9;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6088:15;:47;;;;:::i;:::-;6065:70;;6154:9;::::0;::::1;;;;;;;;:22;;;6177:10;6197:4;6204:15;6154:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6267:15;6231:20;:32;6252:10;6231:32;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;6338:20;6292:30;:42;6323:10;6292:42;;;;;;;;;;;;;;;;:66;;;;;;;:::i;:::-;;;;;;;;5830:535;5750:615:::0;:::o;12117:133::-;12176:7;12240:3;12194:30;:42;12225:10;12194:42;;;;;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;;;;;12117:133;:::o;1517:2765::-;1610:1;1589:17;:22;1581:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1696:17;1661:9;;;;;;;;;;:19;;;1681:10;1661:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;1652:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;1762:11;1779:10;1762:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1800:19;2017:1;1978:13;;;;;;;;;;;:23;;;2002:10;1978:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;1974:353;;2034:20;2057:4;2034:27;;2114:52;2134:17;2153:12;2114:19;:52::i;:::-;2100:66;;2020:177;1974:353;;;2231:65;2251:17;2270:25;;2231:19;:65::i;:::-;2217:79;;1974:353;2472:26;2501:51;2521:17;2540:11;;2501:19;:51::i;:::-;2472:80;;2605:9;;;;;;;;;;:22;;;2628:10;2648:4;2655:17;2605:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2712:9;;;;;;;;;;:22;;;2743:4;2750:8;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2781:18;2712:88;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2846:42;2911:18;2891:17;:38;;;;:::i;:::-;2846:83;;3137:1;3098:13;;;;;;;;;;;:23;;;3122:10;3098:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;3094:391;;3154:20;3177:4;3154:27;;3234:69;3254:34;3290:12;3234:19;:69::i;:::-;3220:83;;3140:194;3094:391;;;3368:82;3388:34;3424:25;;3368:19;:82::i;:::-;3354:96;;3094:391;3531:34;3495:20;:32;3516:10;3495:32;;;;;;;;;;;;;;;;:70;;;;;;;:::i;:::-;;;;;;;;3605:11;3575:14;:26;3590:10;3575:26;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;3627:30;3697:9;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3660:34;:66;;;;:::i;:::-;3627:99;;3791:22;3745:30;:42;3776:10;3745:42;;;;;;;;;;;;;;;;:68;;;;;;;:::i;:::-;;;;;;;;4039:13;;;;;;;;;;;:39;;;4079:11;4100:4;4039:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4158:9;;;;;;;;;;:22;;;4189:4;4196:10;4208:11;4158:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1571:2711;;;;1517:2765;:::o;6372:1040::-;6414:26;6443:9;;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6414:64;;6493:6;6488:918;6509:11;:18;;;;6505:1;:22;6488:918;;;6548:26;6600:20;:36;6621:11;6633:1;6621:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6600:36;;;;;;;;;;;;;;;;6578:18;:59;;;;:::i;:::-;6548:90;;6678:30;:46;6709:11;6721:1;6709:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6678:46;;;;;;;;;;;;;;;;6656:18;:68;6652:744;;6886:22;6911:11;6923:1;6911:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6886:39;;6944:9;;;;;;;;;;:22;;;6975:4;6982:13;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7012:20;:36;7033:14;7012:36;;;;;;;;;;;;;;;;6944:105;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7075:20;:36;7096:11;7108:1;7096:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7075:36;;;;;;;;;;;;;;;7068:43;;;7188:14;:30;7203:11;7215:1;7203:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7188:30;;;;;;;;;;;;;;;7181:37;;;7295:30;:46;7326:11;7338:1;7326:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7295:46;;;;;;;;;;;;;;;7288:53;;;7367:11;7379:1;7367:14;;;;;;;;:::i;:::-;;;;;;;;;;7360:21;;;;;;;;;;;6726:670;6652:744;6534:872;6529:3;;;;;:::i;:::-;;;;6488:918;;;;6404:1008;6372:1040::o;12256:136::-;12316:7;12382:3;12334:32;:44;12367:10;12334:44;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;12256:136;:::o;12926:110::-;12982:7;13008:21;13001:28;;12926:110;:::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:474::-;1110:6;1118;1167:2;1155:9;1146:7;1142:23;1138:32;1135:119;;;1173:79;;:::i;:::-;1135:119;1293:1;1318:53;1363:7;1354:6;1343:9;1339:22;1318:53;:::i;:::-;1308:63;;1264:117;1420:2;1446:53;1491:7;1482:6;1471:9;1467:22;1446:53;:::i;:::-;1436:63;;1391:118;1042:474;;;;;:::o;1522:126::-;1559:7;1599:42;1592:5;1588:54;1577:65;;1522:126;;;:::o;1654:96::-;1691:7;1720:24;1738:5;1720:24;:::i;:::-;1709:35;;1654:96;;;:::o;1756:118::-;1843:24;1861:5;1843:24;:::i;:::-;1838:3;1831:37;1756:118;;:::o;1880:222::-;1973:4;2011:2;2000:9;1996:18;1988:26;;2024:71;2092:1;2081:9;2077:17;2068:6;2024:71;:::i;:::-;1880:222;;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:329::-;2440:6;2489:2;2477:9;2468:7;2464:23;2460:32;2457:119;;;2495:79;;:::i;:::-;2457:119;2615:1;2640:53;2685:7;2676:6;2665:9;2661:22;2640:53;:::i;:::-;2630:63;;2586:117;2381:329;;;;:::o;2716:::-;2775:6;2824:2;2812:9;2803:7;2799:23;2795:32;2792:119;;;2830:79;;:::i;:::-;2792:119;2950:1;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2921:117;2716:329;;;;:::o;3051:180::-;3099:77;3096:1;3089:88;3196:4;3193:1;3186:15;3220:4;3217:1;3210:15;3237:410;3277:7;3300:20;3318:1;3300:20;:::i;:::-;3295:25;;3334:20;3352:1;3334:20;:::i;:::-;3329:25;;3389:1;3386;3382:9;3411:30;3429:11;3411:30;:::i;:::-;3400:41;;3590:1;3581:7;3577:15;3574:1;3571:22;3551:1;3544:9;3524:83;3501:139;;3620:18;;:::i;:::-;3501:139;3285:362;3237:410;;;;:::o;3653:180::-;3701:77;3698:1;3691:88;3798:4;3795:1;3788:15;3822:4;3819:1;3812:15;3839:185;3879:1;3896:20;3914:1;3896:20;:::i;:::-;3891:25;;3930:20;3948:1;3930:20;:::i;:::-;3925:25;;3969:1;3959:35;;3974:18;;:::i;:::-;3959:35;4016:1;4013;4009:9;4004:14;;3839:185;;;;:::o;4030:169::-;4114:11;4148:6;4143:3;4136:19;4188:4;4183:3;4179:14;4164:29;;4030:169;;;;:::o;4205:223::-;4345:34;4341:1;4333:6;4329:14;4322:58;4414:6;4409:2;4401:6;4397:15;4390:31;4205:223;:::o;4434:366::-;4576:3;4597:67;4661:2;4656:3;4597:67;:::i;:::-;4590:74;;4673:93;4762:3;4673:93;:::i;:::-;4791:2;4786:3;4782:12;4775:19;;4434:366;;;:::o;4806:419::-;4972:4;5010:2;4999:9;4995:18;4987:26;;5059:9;5053:4;5049:20;5045:1;5034:9;5030:17;5023:47;5087:131;5213:4;5087:131;:::i;:::-;5079:139;;4806:419;;;:::o;5231:182::-;5371:34;5367:1;5359:6;5355:14;5348:58;5231:182;:::o;5419:366::-;5561:3;5582:67;5646:2;5641:3;5582:67;:::i;:::-;5575:74;;5658:93;5747:3;5658:93;:::i;:::-;5776:2;5771:3;5767:12;5760:19;;5419:366;;;:::o;5791:419::-;5957:4;5995:2;5984:9;5980:18;5972:26;;6044:9;6038:4;6034:20;6030:1;6019:9;6015:17;6008:47;6072:131;6198:4;6072:131;:::i;:::-;6064:139;;5791:419;;;:::o;6216:176::-;6356:28;6352:1;6344:6;6340:14;6333:52;6216:176;:::o;6398:366::-;6540:3;6561:67;6625:2;6620:3;6561:67;:::i;:::-;6554:74;;6637:93;6726:3;6637:93;:::i;:::-;6755:2;6750:3;6746:12;6739:19;;6398:366;;;:::o;6770:419::-;6936:4;6974:2;6963:9;6959:18;6951:26;;7023:9;7017:4;7013:20;7009:1;6998:9;6994:17;6987:47;7051:131;7177:4;7051:131;:::i;:::-;7043:139;;6770:419;;;:::o;7195:143::-;7252:5;7283:6;7277:13;7268:22;;7299:33;7326:5;7299:33;:::i;:::-;7195:143;;;;:::o;7344:351::-;7414:6;7463:2;7451:9;7442:7;7438:23;7434:32;7431:119;;;7469:79;;:::i;:::-;7431:119;7589:1;7614:64;7670:7;7661:6;7650:9;7646:22;7614:64;:::i;:::-;7604:74;;7560:128;7344:351;;;;:::o;7701:191::-;7741:3;7760:20;7778:1;7760:20;:::i;:::-;7755:25;;7794:20;7812:1;7794:20;:::i;:::-;7789:25;;7837:1;7834;7830:9;7823:16;;7858:3;7855:1;7852:10;7849:36;;;7865:18;;:::i;:::-;7849:36;7701:191;;;;:::o;7898:221::-;8038:34;8034:1;8026:6;8022:14;8015:58;8107:4;8102:2;8094:6;8090:15;8083:29;7898:221;:::o;8125:366::-;8267:3;8288:67;8352:2;8347:3;8288:67;:::i;:::-;8281:74;;8364:93;8453:3;8364:93;:::i;:::-;8482:2;8477:3;8473:12;8466:19;;8125:366;;;:::o;8497:419::-;8663:4;8701:2;8690:9;8686:18;8678:26;;8750:9;8744:4;8740:20;8736:1;8725:9;8721:17;8714:47;8778:131;8904:4;8778:131;:::i;:::-;8770:139;;8497:419;;;:::o;8922:442::-;9071:4;9109:2;9098:9;9094:18;9086:26;;9122:71;9190:1;9179:9;9175:17;9166:6;9122:71;:::i;:::-;9203:72;9271:2;9260:9;9256:18;9247:6;9203:72;:::i;:::-;9285;9353:2;9342:9;9338:18;9329:6;9285:72;:::i;:::-;8922:442;;;;;;:::o;9370:90::-;9404:7;9447:5;9440:13;9433:21;9422:32;;9370:90;;;:::o;9466:116::-;9536:21;9551:5;9536:21;:::i;:::-;9529:5;9526:32;9516:60;;9572:1;9569;9562:12;9516:60;9466:116;:::o;9588:137::-;9642:5;9673:6;9667:13;9658:22;;9689:30;9713:5;9689:30;:::i;:::-;9588:137;;;;:::o;9731:345::-;9798:6;9847:2;9835:9;9826:7;9822:23;9818:32;9815:119;;;9853:79;;:::i;:::-;9815:119;9973:1;9998:61;10051:7;10042:6;10031:9;10027:22;9998:61;:::i;:::-;9988:71;;9944:125;9731:345;;;;:::o;10082:194::-;10122:4;10142:20;10160:1;10142:20;:::i;:::-;10137:25;;10176:20;10194:1;10176:20;:::i;:::-;10171:25;;10220:1;10217;10213:9;10205:17;;10244:1;10238:4;10235:11;10232:37;;;10249:18;;:::i;:::-;10232:37;10082:194;;;;:::o;10282:143::-;10339:5;10370:6;10364:13;10355:22;;10386:33;10413:5;10386:33;:::i;:::-;10282:143;;;;:::o;10431:351::-;10501:6;10550:2;10538:9;10529:7;10525:23;10521:32;10518:119;;;10556:79;;:::i;:::-;10518:119;10676:1;10701:64;10757:7;10748:6;10737:9;10733:22;10701:64;:::i;:::-;10691:74;;10647:128;10431:351;;;;:::o;10788:180::-;10836:77;10833:1;10826:88;10933:4;10930:1;10923:15;10957:4;10954:1;10947:15;10974:233;11013:3;11036:24;11054:5;11036:24;:::i;:::-;11027:33;;11082:66;11075:5;11072:77;11069:103;;11152:18;;:::i;:::-;11069:103;11199:1;11192:5;11188:13;11181:20;;10974:233;;;:::o;11213:178::-;11353:30;11349:1;11341:6;11337:14;11330:54;11213:178;:::o;11397:366::-;11539:3;11560:67;11624:2;11619:3;11560:67;:::i;:::-;11553:74;;11636:93;11725:3;11636:93;:::i;:::-;11754:2;11749:3;11745:12;11738:19;;11397:366;;;:::o;11769:419::-;11935:4;11973:2;11962:9;11958:18;11950:26;;12022:9;12016:4;12012:20;12008:1;11997:9;11993:17;11986:47;12050:131;12176:4;12050:131;:::i;:::-;12042:139;;11769:419;;;:::o;12194:155::-;12334:7;12330:1;12322:6;12318:14;12311:31;12194:155;:::o;12355:365::-;12497:3;12518:66;12582:1;12577:3;12518:66;:::i;:::-;12511:73;;12593:93;12682:3;12593:93;:::i;:::-;12711:2;12706:3;12702:12;12695:19;;12355:365;;;:::o;12726:419::-;12892:4;12930:2;12919:9;12915:18;12907:26;;12979:9;12973:4;12969:20;12965:1;12954:9;12950:17;12943:47;13007:131;13133:4;13007:131;:::i;:::-;12999:139;;12726:419;;;:::o;13151:104::-;13196:7;13225:24;13243:5;13225:24;:::i;:::-;13214:35;;13151:104;;;:::o;13261:142::-;13364:32;13390:5;13364:32;:::i;:::-;13359:3;13352:45;13261:142;;:::o;13409:364::-;13546:4;13584:2;13573:9;13569:18;13561:26;;13597:71;13665:1;13654:9;13650:17;13641:6;13597:71;:::i;:::-;13678:88;13762:2;13751:9;13747:18;13738:6;13678:88;:::i;:::-;13409:364;;;;;:::o;13779:332::-;13900:4;13938:2;13927:9;13923:18;13915:26;;13951:71;14019:1;14008:9;14004:17;13995:6;13951:71;:::i;:::-;14032:72;14100:2;14089:9;14085:18;14076:6;14032:72;:::i;:::-;13779:332;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\nimport \"./LiquidityPool.sol\";\nimport \"./ERC20.sol\";\nimport \"./Reserves.sol\";\nimport \"./PriceFeed.sol\";\nimport \"./Avax.sol\";\nimport \"./IdentityToken.sol\";\nimport \"./Math.sol\";\n\ncontract Lending {\n    Avax avaxToken;\n    LiquidityPool liquidityPool;\n    Reserves reserves;\n    PriceFeed priceFeed;\n    IdentityToken identityToken;\n    uint256 _maximumLendingPercentage = 8500; //85% of collateral\n    uint256 _lendingFee = 500; //5% of total collateral\n    address _debtOwner = msg.sender;\n\n    mapping(address => uint256) AVAXCollateralLedger;\n    mapping(address => uint256) AVAXLoanLedger;\n    mapping(address => uint256) AVAXCollateralValueLedgerinUSD;\n    mapping(address => uint256) AVAXCUserTotalReturnTransactions;\n\n    mapping(address => uint256) ETHCollateralLedger;\n    mapping(address => uint256) ETHLoanLedger;\n    mapping(address => uint256) ETHCollateralValueLedgerinUSD;\n    mapping(address => uint256) ETHUserTotalReturnTransactions;\n\n    address[] ETHDebtors; // keep track who is still has outstanding loans\n    address[] AVAXDebtors; // keep track who is still has outstanding loans\n    \n     constructor(Avax avaxTokenAddress, LiquidityPool lp, Reserves reservesAddress, PriceFeed pf, IdentityToken identityTokenAddress) {\n        avaxToken = avaxTokenAddress;\n        liquidityPool = lp;\n        reserves = reservesAddress;\n        priceFeed = pf;\n        identityToken = identityTokenAddress;\n    }\n\n    //Take collateral and give 85% \n    function borrowAVAX(uint256 depositCollateral) public {\n        require(depositCollateral != 0, \"Please put more collateral\");\n        require (avaxToken.balanceOf(msg.sender) >= depositCollateral, \"You do not have enough AVAX token!\");\n        AVAXDebtors.push(msg.sender);\n        uint256 _loanAmount = 0; // set to 0 intially\n\n        //Give the user a better rate of only needing 90% collateral if he has a token, else give the usual 85% needed\n        if (identityToken.balanceOf(msg.sender) >= 1) {\n            uint256 verifiedRate = 9000; // 90% collateral needed\n            _loanAmount = calculatePercentage(depositCollateral, verifiedRate); //90% of collateral\n        } else {\n            _loanAmount = calculatePercentage(depositCollateral, _maximumLendingPercentage); //85% of collateral\n        }\n        //Directly deduct the 5% commission first and loan out the rest\n        //User collateral will then be 95% of what is deposited\n        uint256 lendingFeeToDeduct = calculatePercentage(depositCollateral, _lendingFee); //Calculate the avax taken as comission 5%\n        avaxToken.transferFrom(msg.sender, address(this), depositCollateral); //Take user collateral first\n        avaxToken.transferFrom(address(this), reserves.getReservesAddress(), lendingFeeToDeduct); //Transfer 5% to the reserves first\n        uint256 depositCollateralAfterComissionFee = depositCollateral - lendingFeeToDeduct;\n\n       //Calculate the Loan amount\n        //Give the user a better rate of only needing 90% collateral if he has a token, else give the usual 85% needed\n        if (identityToken.balanceOf(msg.sender) >= 1) {\n            uint256 verifiedRate = 9000; // 90% collateral needed\n            _loanAmount = calculatePercentage(depositCollateralAfterComissionFee, verifiedRate); //90% of collateral\n        } else {\n            _loanAmount = calculatePercentage(depositCollateralAfterComissionFee, _maximumLendingPercentage); //85% of new collateral\n        }\n\n        AVAXCollateralLedger[msg.sender] += depositCollateralAfterComissionFee;\n        AVAXLoanLedger[msg.sender] += _loanAmount;\n\n        uint256 depositCollateralInUSD = depositCollateralAfterComissionFee * priceFeed.getAvaxPriceFirst(); //in USD\n        AVAXCollateralValueLedgerinUSD[msg.sender] += depositCollateralInUSD;\n\n        //address liqudityPoolAddress = liquidityPool.getLPAddress();\n        //avaxToken.transferFrom(msg.sender, address(this), depositCollateralAfterComissionFee); //Transfer borrower collateral to this contract\n        liquidityPool.sendAvaxToLendingContract(_loanAmount, address(this)); // Transfer AVAX from LP to this contract\n        avaxToken.transferFrom(address(this), msg.sender, _loanAmount); //Take assets from Liquidity Pool and send to borrower\n    }\n\n    function repayAVAXDebt() public onlyAVAXDebtHolder {\n        //require only the person who loan it can pay back\n        uint256 amountToReturn = AVAXLoanLedger[msg.sender]; //Get amount to return from AvaxLoanLedger\n        require (avaxToken.balanceOf(msg.sender) >= amountToReturn, \"You do not have enough AVAX token!\");\n\n        uint256 collateralAmount = AVAXCollateralLedger[msg.sender]; //Get the collteral that is held by the Smart contract\n        avaxToken.transferFrom(msg.sender, address(this), amountToReturn); //Transfer USDC to pay back from wallet to this smart contract\n        uint256 lendingFeeToDeduct = calculatePercentage(collateralAmount, _lendingFee); //Calculate the avax taken as comission 5%\n        avaxToken.transferFrom(address(this), msg.sender, (collateralAmount - lendingFeeToDeduct)); //Transfer only 95% back\n        avaxToken.transferFrom(address(this), reserves.getReservesAddress(), lendingFeeToDeduct); //Transfer 5% to the reserves\n        \n        delete AVAXCollateralLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete AVAXLoanLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete AVAXCollateralValueLedgerinUSD[msg.sender];\n        AVAXCUserTotalReturnTransactions[msg.sender] += 1;\n\n        for (uint256 i = 0; i < AVAXDebtors.length; i++) {\n            if (AVAXDebtors[i] == msg.sender) {\n                delete AVAXDebtors[i];\n            }\n        }\n    }\n\n    function topUpAVAXCollateral(uint256 topUpCollateral) public onlyAVAXDebtHolder {\n        \n        require(topUpCollateral != 0, \"Please put more collateral\");\n        require (avaxToken.balanceOf(msg.sender) >= topUpCollateral, \"You do not have enough AVAX token!\");\n        uint256 topUpCollateralInUSD; \n        topUpCollateralInUSD = topUpCollateral * priceFeed.getAvaxPriceFirst(); //in USD\n        avaxToken.transferFrom(msg.sender, address(this), topUpCollateral);\n\n        AVAXCollateralLedger[msg.sender] += topUpCollateral;\n        AVAXCollateralValueLedgerinUSD[msg.sender] += topUpCollateralInUSD;\n    }\n\n     function liquidateAVAX() public {\n        uint256 currentPriceOfAVAX = priceFeed.getAvaxPriceToLiquidate();\n        for (uint i = 0; i < AVAXDebtors.length; i++) {\n            uint256 newCollateralPrice = (currentPriceOfAVAX * (AVAXCollateralLedger[AVAXDebtors[i]]));\n            if (newCollateralPrice <= AVAXCollateralValueLedgerinUSD[AVAXDebtors[i]]) {\n                //liquidate by sending collateral to the pool\n                 //addressToSend.transfer(ETHCollateralLedger[ETHDebtors[i]]);\n                 address accountAddress = AVAXDebtors[i];\n                 avaxToken.transferFrom(address(this), liquidityPool.getLPAddress(), AVAXCollateralLedger[accountAddress]);\n                 delete AVAXCollateralLedger[AVAXDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete AVAXLoanLedger[AVAXDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete AVAXCollateralValueLedgerinUSD[AVAXDebtors[i]];\n                 delete AVAXDebtors[i];\n            }\n        }\n    }\n\n     //Take collateral and give 85% \n    function borrowEth() public payable returns (uint256) {\n        uint256 depositCollateral = msg.value;\n        require(depositCollateral != 0, \"Please put more collateral\");\n        uint256 depositCollateralInEth = depositCollateral / 1000000000000000000;\n        uint256 depositCollateralInUSD; \n        ETHDebtors.push(msg.sender);\n        depositCollateralInUSD = depositCollateralInEth * priceFeed.getEthPriceFirst(); //in USD\n\n        uint256 _loanAmount = calculatePercentage(depositCollateral, _maximumLendingPercentage); //85% of collateral\n        ETHCollateralLedger[msg.sender] += depositCollateral;\n        ETHLoanLedger[msg.sender] += _loanAmount;\n        ETHCollateralValueLedgerinUSD[msg.sender] += depositCollateralInUSD;\n        \n        liquidityPool.sendEthToLender(_loanAmount, payable(msg.sender));\n        return ETHCollateralValueLedgerinUSD[msg.sender];\n    }\n\n    function topUpETHCollateral() public payable onlyEthDebtHolder {\n        uint256 topUpCollateral = msg.value;\n        require(topUpCollateral != 0, \"Please put more collateral\");\n        uint256 topUpCollateralInEth = topUpCollateral / 1000000000000000000;\n        uint256 topUpCollateralInUSD; \n        topUpCollateralInUSD = topUpCollateralInEth * priceFeed.getEthPriceFirst(); //in USD\n\n        ETHCollateralLedger[msg.sender] += topUpCollateral;\n        ETHCollateralValueLedgerinUSD[msg.sender] += topUpCollateralInUSD;\n    }\n\n   \n\n    function repayEth() public payable onlyEthDebtHolder {\n        //require only the person who loan it can pay back\n     \n        uint256 amountToReturn = ETHLoanLedger[msg.sender]; //Get amount to return from USDCLoanLedger\n        require (msg.value >= amountToReturn, \"Value inserted is not enough\");\n        uint256 collateralAmount = ETHCollateralLedger[msg.sender]; //Get the collteral that is held by the Smart contract\n       \n        uint256 lendingFeeToDeduct = calculatePercentage(collateralAmount, _lendingFee); //Calculate the avax taken as comission 5%\n        address payable addressToSend = payable (msg.sender);\n        addressToSend.transfer(collateralAmount - lendingFeeToDeduct); //Transfer Collateral - lending fee From This contract back to msg.sender\n        //Send back to LP\n        require (address(this).balance >= amountToReturn, \"ERROR\");\n        address payable lpAddress = payable (liquidityPool.getLPAddress());\n        lpAddress.transfer(amountToReturn);\n\n        //Send comissionFee to reserves\n        address payable reservesAddress = payable(reserves.getReservesAddress());\n        reservesAddress.transfer(lendingFeeToDeduct);\n\n        delete ETHCollateralLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete ETHLoanLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete ETHCollateralValueLedgerinUSD[msg.sender];\n        ETHUserTotalReturnTransactions[msg.sender] += 1;\n        \n        for (uint256 i = 0; i < ETHDebtors.length; i++) {\n            if (ETHDebtors[i] == msg.sender) {\n                delete ETHDebtors[i];\n            }\n        }\n    }\n           \n    function liquidateETH() public payable {\n        uint256 currentPriceOfEth = priceFeed.getEthPriceToLiquidate();\n        for (uint i = 0; i < ETHDebtors.length; i++) {\n            uint256 newCollateralPrice = (currentPriceOfEth * (ETHCollateralLedger[ETHDebtors[i]] / 1000000000000000000));\n            if (newCollateralPrice <= ETHCollateralValueLedgerinUSD[ETHDebtors[i]]) {\n                //liquidate by sending collateral to the pool\n                address payable addressToSend = payable (liquidityPool.getLPAddress());\n                addressToSend.transfer(ETHCollateralLedger[ETHDebtors[i]]);\n                 delete ETHCollateralLedger[ETHDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete ETHLoanLedger[ETHDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete ETHCollateralValueLedgerinUSD[ETHDebtors[i]];\n                 delete ETHDebtors[i];\n            }\n        }\n    }\n\n    function getUserAVAXCollateralAmountInUSD() public view returns (uint256) {\n       return AVAXCollateralValueLedgerinUSD[msg.sender];\n    }\n\n    function getUserAvaxLiquidationPrice() public view returns (uint256) {\n       return ((AVAXCollateralLedger[msg.sender] * 9000) / 10_000); \n    }\n\n    function getUserTotaETHRepaymentAmount() public view returns (uint256) {\n        return ETHUserTotalReturnTransactions[msg.sender];\n    }\n\n    function getUserTotaAVAXRepaymentAmount() public view returns (uint256) {\n        return AVAXCUserTotalReturnTransactions[msg.sender];\n    }\n\n    //For testing purposes\n    function initUserTotalEthRepaymentAmount() public returns (uint256) {\n       ETHUserTotalReturnTransactions[msg.sender] += 100;\n    }\n\n    function initUserTotalAVAXRepaymentAmount() public returns (uint256) {\n       AVAXCUserTotalReturnTransactions[msg.sender] += 100;\n    }\n\n    //This function calculates Percentages\n    //Used to calculate the amount of Loan that can be given and platform lendingFees\n    //e.g \n    //Assume collateral = 100, desired percentage = 85%\n    //function returns 85\n\n    function calculatePercentage(uint256 collateralAmount, uint256 percentage) public pure returns (uint256) {\n        return (collateralAmount * percentage) / 10_000;\n    }\n\n    function getHoldingAVAXCollateral() public view returns (uint256) {\n        return avaxToken.balanceOf(address(this));\n    }\n\n    function getHoldingEthCollateral() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    //Functions to return the amount of Debt the msg.sender has in USDC\n    function getAVAXDebt() public view onlyAVAXDebtHolder returns (uint256) {\n        return (AVAXLoanLedger[msg.sender]);\n    }\n\n    function getAddress() public view returns (address) {\n        return address(this);\n    }\n\n    //Function to return transaction count\n    function getTotalTransactionCount(address user) public view returns (uint256) {\n        return AVAXCUserTotalReturnTransactions[user] + ETHUserTotalReturnTransactions[user];\n    }\n\n    modifier onlyAVAXDebtHolder() {\n        require(AVAXLoanLedger[msg.sender] > 0, \"You do not have any outstanding debt\");\n        _;\n    }\n\n    modifier onlyEthDebtHolder() {\n        require(ETHLoanLedger[msg.sender] > 0, \"You do not have outstanding debt\");\n        _;\n    }\n\n    function hello() public view returns (uint256) {\n        uint256 x = 1;\n        return 1 * 100;\n    }\n\n     /*\n     modifier enoughAVAXInWallet() {\n        require(avaxToken.balanceOf(msg.sender) > 0, \"You do not have enough USDC to repay this debt\");\n        _;\n    }\n    */\n}",
  "sourcePath": "/Users/alwin/Developer/Liquiditas/contracts/Lending.sol",
  "ast": {
    "absolutePath": "project:/contracts/Lending.sol",
    "exportedSymbols": {
      "ABDKMath64x64": [
        5271
      ],
      "Avax": [
        60
      ],
      "ERC20": [
        500
      ],
      "IdentityToken": [
        812
      ],
      "Lending": [
        1958
      ],
      "LiquidityPool": [
        2458
      ],
      "PriceFeed": [
        5306
      ],
      "Reserves": [
        5534
      ],
      "SafeMath": [
        159
      ]
    },
    "id": 1959,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 814,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "project:/contracts/LiquidityPool.sol",
        "file": "./LiquidityPool.sol",
        "id": 815,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1959,
        "sourceUnit": 2459,
        "src": "56:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 816,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1959,
        "sourceUnit": 501,
        "src": "86:21:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Reserves.sol",
        "file": "./Reserves.sol",
        "id": 817,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1959,
        "sourceUnit": 5535,
        "src": "108:24:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/PriceFeed.sol",
        "file": "./PriceFeed.sol",
        "id": 818,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1959,
        "sourceUnit": 5307,
        "src": "133:25:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Avax.sol",
        "file": "./Avax.sol",
        "id": 819,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1959,
        "sourceUnit": 61,
        "src": "159:20:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IdentityToken.sol",
        "file": "./IdentityToken.sol",
        "id": 820,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1959,
        "sourceUnit": 813,
        "src": "180:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Math.sol",
        "file": "./Math.sol",
        "id": 821,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1959,
        "sourceUnit": 5272,
        "src": "210:20:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Lending",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1958,
        "linearizedBaseContracts": [
          1958
        ],
        "name": "Lending",
        "nameLocation": "241:7:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 824,
            "mutability": "mutable",
            "name": "avaxToken",
            "nameLocation": "260:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "255:14:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Avax_$60",
              "typeString": "contract Avax"
            },
            "typeName": {
              "id": 823,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 822,
                "name": "Avax",
                "nameLocations": [
                  "255:4:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60,
                "src": "255:4:4"
              },
              "referencedDeclaration": 60,
              "src": "255:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Avax_$60",
                "typeString": "contract Avax"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 827,
            "mutability": "mutable",
            "name": "liquidityPool",
            "nameLocation": "289:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "275:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LiquidityPool_$2458",
              "typeString": "contract LiquidityPool"
            },
            "typeName": {
              "id": 826,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 825,
                "name": "LiquidityPool",
                "nameLocations": [
                  "275:13:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2458,
                "src": "275:13:4"
              },
              "referencedDeclaration": 2458,
              "src": "275:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LiquidityPool_$2458",
                "typeString": "contract LiquidityPool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 830,
            "mutability": "mutable",
            "name": "reserves",
            "nameLocation": "317:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "308:17:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Reserves_$5534",
              "typeString": "contract Reserves"
            },
            "typeName": {
              "id": 829,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 828,
                "name": "Reserves",
                "nameLocations": [
                  "308:8:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5534,
                "src": "308:8:4"
              },
              "referencedDeclaration": 5534,
              "src": "308:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Reserves_$5534",
                "typeString": "contract Reserves"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 833,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "341:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "331:19:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PriceFeed_$5306",
              "typeString": "contract PriceFeed"
            },
            "typeName": {
              "id": 832,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 831,
                "name": "PriceFeed",
                "nameLocations": [
                  "331:9:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5306,
                "src": "331:9:4"
              },
              "referencedDeclaration": 5306,
              "src": "331:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceFeed_$5306",
                "typeString": "contract PriceFeed"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 836,
            "mutability": "mutable",
            "name": "identityToken",
            "nameLocation": "370:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "356:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IdentityToken_$812",
              "typeString": "contract IdentityToken"
            },
            "typeName": {
              "id": 835,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 834,
                "name": "IdentityToken",
                "nameLocations": [
                  "356:13:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 812,
                "src": "356:13:4"
              },
              "referencedDeclaration": 812,
              "src": "356:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IdentityToken_$812",
                "typeString": "contract IdentityToken"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 839,
            "mutability": "mutable",
            "name": "_maximumLendingPercentage",
            "nameLocation": "397:25:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "389:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 837,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "389:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38353030",
              "id": 838,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "425:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8500_by_1",
                "typeString": "int_const 8500"
              },
              "value": "8500"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 842,
            "mutability": "mutable",
            "name": "_lendingFee",
            "nameLocation": "463:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "455:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 840,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "455:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "353030",
              "id": 841,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "477:3:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "500"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 846,
            "mutability": "mutable",
            "name": "_debtOwner",
            "nameLocation": "519:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "511:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 843,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "511:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 844,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967281,
                "src": "532:3:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 845,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberLocation": "536:6:4",
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "532:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 850,
            "mutability": "mutable",
            "name": "AVAXCollateralLedger",
            "nameLocation": "577:20:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "549:48:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 849,
              "keyType": {
                "id": 847,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "557:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "549:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 848,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "568:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 854,
            "mutability": "mutable",
            "name": "AVAXLoanLedger",
            "nameLocation": "631:14:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "603:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 853,
              "keyType": {
                "id": 851,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "611:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "603:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 852,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "622:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 858,
            "mutability": "mutable",
            "name": "AVAXCollateralValueLedgerinUSD",
            "nameLocation": "679:30:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "651:58:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 857,
              "keyType": {
                "id": 855,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "659:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "651:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 856,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "670:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 862,
            "mutability": "mutable",
            "name": "AVAXCUserTotalReturnTransactions",
            "nameLocation": "743:32:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "715:60:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 861,
              "keyType": {
                "id": 859,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "723:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "715:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 860,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "734:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 866,
            "mutability": "mutable",
            "name": "ETHCollateralLedger",
            "nameLocation": "810:19:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "782:47:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 865,
              "keyType": {
                "id": 863,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "790:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "782:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 864,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "801:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 870,
            "mutability": "mutable",
            "name": "ETHLoanLedger",
            "nameLocation": "863:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "835:41:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 869,
              "keyType": {
                "id": 867,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "843:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "835:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 868,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "854:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 874,
            "mutability": "mutable",
            "name": "ETHCollateralValueLedgerinUSD",
            "nameLocation": "910:29:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "882:57:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 873,
              "keyType": {
                "id": 871,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "890:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "882:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 872,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "901:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 878,
            "mutability": "mutable",
            "name": "ETHUserTotalReturnTransactions",
            "nameLocation": "973:30:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "945:58:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 877,
              "keyType": {
                "id": 875,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "953:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "945:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 876,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "964:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 881,
            "mutability": "mutable",
            "name": "ETHDebtors",
            "nameLocation": "1020:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "1010:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 879,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1010:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 880,
              "nodeType": "ArrayTypeName",
              "src": "1010:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 884,
            "mutability": "mutable",
            "name": "AVAXDebtors",
            "nameLocation": "1095:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 1958,
            "src": "1085:21:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 882,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1085:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 883,
              "nodeType": "ArrayTypeName",
              "src": "1085:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 922,
              "nodeType": "Block",
              "src": "1296:179:4",
              "statements": [
                {
                  "expression": {
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 902,
                      "name": "avaxToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 824,
                      "src": "1306:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Avax_$60",
                        "typeString": "contract Avax"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 903,
                      "name": "avaxTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "1318:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Avax_$60",
                        "typeString": "contract Avax"
                      }
                    },
                    "src": "1306:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avax_$60",
                      "typeString": "contract Avax"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:28:4"
                },
                {
                  "expression": {
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 906,
                      "name": "liquidityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 827,
                      "src": "1344:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$2458",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 907,
                      "name": "lp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 890,
                      "src": "1360:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$2458",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "src": "1344:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPool_$2458",
                      "typeString": "contract LiquidityPool"
                    }
                  },
                  "id": 909,
                  "nodeType": "ExpressionStatement",
                  "src": "1344:18:4"
                },
                {
                  "expression": {
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 910,
                      "name": "reserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 830,
                      "src": "1372:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Reserves_$5534",
                        "typeString": "contract Reserves"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 911,
                      "name": "reservesAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 893,
                      "src": "1383:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Reserves_$5534",
                        "typeString": "contract Reserves"
                      }
                    },
                    "src": "1372:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Reserves_$5534",
                      "typeString": "contract Reserves"
                    }
                  },
                  "id": 913,
                  "nodeType": "ExpressionStatement",
                  "src": "1372:26:4"
                },
                {
                  "expression": {
                    "id": 916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 914,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "1408:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceFeed_$5306",
                        "typeString": "contract PriceFeed"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 915,
                      "name": "pf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 896,
                      "src": "1420:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceFeed_$5306",
                        "typeString": "contract PriceFeed"
                      }
                    },
                    "src": "1408:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceFeed_$5306",
                      "typeString": "contract PriceFeed"
                    }
                  },
                  "id": 917,
                  "nodeType": "ExpressionStatement",
                  "src": "1408:14:4"
                },
                {
                  "expression": {
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 918,
                      "name": "identityToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 836,
                      "src": "1432:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdentityToken_$812",
                        "typeString": "contract IdentityToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 919,
                      "name": "identityTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "1448:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IdentityToken_$812",
                        "typeString": "contract IdentityToken"
                      }
                    },
                    "src": "1432:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentityToken_$812",
                      "typeString": "contract IdentityToken"
                    }
                  },
                  "id": 921,
                  "nodeType": "ExpressionStatement",
                  "src": "1432:36:4"
                }
              ]
            },
            "id": 923,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 887,
                  "mutability": "mutable",
                  "name": "avaxTokenAddress",
                  "nameLocation": "1184:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 923,
                  "src": "1179:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Avax_$60",
                    "typeString": "contract Avax"
                  },
                  "typeName": {
                    "id": 886,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 885,
                      "name": "Avax",
                      "nameLocations": [
                        "1179:4:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60,
                      "src": "1179:4:4"
                    },
                    "referencedDeclaration": 60,
                    "src": "1179:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avax_$60",
                      "typeString": "contract Avax"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "lp",
                  "nameLocation": "1216:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 923,
                  "src": "1202:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LiquidityPool_$2458",
                    "typeString": "contract LiquidityPool"
                  },
                  "typeName": {
                    "id": 889,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 888,
                      "name": "LiquidityPool",
                      "nameLocations": [
                        "1202:13:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2458,
                      "src": "1202:13:4"
                    },
                    "referencedDeclaration": 2458,
                    "src": "1202:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPool_$2458",
                      "typeString": "contract LiquidityPool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 893,
                  "mutability": "mutable",
                  "name": "reservesAddress",
                  "nameLocation": "1229:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 923,
                  "src": "1220:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Reserves_$5534",
                    "typeString": "contract Reserves"
                  },
                  "typeName": {
                    "id": 892,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 891,
                      "name": "Reserves",
                      "nameLocations": [
                        "1220:8:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5534,
                      "src": "1220:8:4"
                    },
                    "referencedDeclaration": 5534,
                    "src": "1220:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Reserves_$5534",
                      "typeString": "contract Reserves"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 896,
                  "mutability": "mutable",
                  "name": "pf",
                  "nameLocation": "1256:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 923,
                  "src": "1246:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PriceFeed_$5306",
                    "typeString": "contract PriceFeed"
                  },
                  "typeName": {
                    "id": 895,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 894,
                      "name": "PriceFeed",
                      "nameLocations": [
                        "1246:9:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5306,
                      "src": "1246:9:4"
                    },
                    "referencedDeclaration": 5306,
                    "src": "1246:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceFeed_$5306",
                      "typeString": "contract PriceFeed"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "identityTokenAddress",
                  "nameLocation": "1274:20:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 923,
                  "src": "1260:34:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IdentityToken_$812",
                    "typeString": "contract IdentityToken"
                  },
                  "typeName": {
                    "id": 898,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 897,
                      "name": "IdentityToken",
                      "nameLocations": [
                        "1260:13:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 812,
                      "src": "1260:13:4"
                    },
                    "referencedDeclaration": 812,
                    "src": "1260:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentityToken_$812",
                      "typeString": "contract IdentityToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1178:117:4"
            },
            "returnParameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1296:0:4"
            },
            "scope": 1958,
            "src": "1167:308:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1102,
              "nodeType": "Block",
              "src": "1571:2711:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 929,
                          "name": "depositCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "1589:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1610:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1589:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1613:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 928,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1581:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1581:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 934,
                  "nodeType": "ExpressionStatement",
                  "src": "1581:61:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 938,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1681:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 939,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1685:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1681:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 936,
                              "name": "avaxToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 824,
                              "src": "1661:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Avax_$60",
                                "typeString": "contract Avax"
                              }
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1671:9:4",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 236,
                            "src": "1661:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1661:31:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 941,
                          "name": "depositCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "1696:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1661:52:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b656e21",
                        "id": 943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1715:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        },
                        "value": "You do not have enough AVAX token!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        }
                      ],
                      "id": 935,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1652:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1652:100:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "1652:100:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 949,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1779:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1783:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1779:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 946,
                        "name": "AVAXDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "1762:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1774:4:4",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1762:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1762:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 952,
                  "nodeType": "ExpressionStatement",
                  "src": "1762:28:4"
                },
                {
                  "assignments": [
                    954
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 954,
                      "mutability": "mutable",
                      "name": "_loanAmount",
                      "nameLocation": "1808:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1102,
                      "src": "1800:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 953,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1800:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 956,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1822:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1800:23:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 959,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2002:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2006:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2002:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 957,
                          "name": "identityToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 836,
                          "src": "1978:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IdentityToken_$812",
                            "typeString": "contract IdentityToken"
                          }
                        },
                        "id": 958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1992:9:4",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 236,
                        "src": "1978:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1978:35:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2017:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1978:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 983,
                    "nodeType": "Block",
                    "src": "2203:124:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 976,
                            "name": "_loanAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "2217:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 978,
                                "name": "depositCollateral",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "2251:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 979,
                                "name": "_maximumLendingPercentage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 839,
                                "src": "2270:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 977,
                              "name": "calculatePercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1848,
                              "src": "2231:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2231:65:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2217:79:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 982,
                        "nodeType": "ExpressionStatement",
                        "src": "2217:79:4"
                      }
                    ]
                  },
                  "id": 984,
                  "nodeType": "IfStatement",
                  "src": "1974:353:4",
                  "trueBody": {
                    "id": 975,
                    "nodeType": "Block",
                    "src": "2020:177:4",
                    "statements": [
                      {
                        "assignments": [
                          965
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 965,
                            "mutability": "mutable",
                            "name": "verifiedRate",
                            "nameLocation": "2042:12:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 975,
                            "src": "2034:20:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 964,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2034:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 967,
                        "initialValue": {
                          "hexValue": "39303030",
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2057:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9000_by_1",
                            "typeString": "int_const 9000"
                          },
                          "value": "9000"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2034:27:4"
                      },
                      {
                        "expression": {
                          "id": 973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 968,
                            "name": "_loanAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "2100:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 970,
                                "name": "depositCollateral",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "2134:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 971,
                                "name": "verifiedRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 965,
                                "src": "2153:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 969,
                              "name": "calculatePercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1848,
                              "src": "2114:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2114:52:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2100:66:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 974,
                        "nodeType": "ExpressionStatement",
                        "src": "2100:66:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    986
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 986,
                      "mutability": "mutable",
                      "name": "lendingFeeToDeduct",
                      "nameLocation": "2480:18:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1102,
                      "src": "2472:26:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 985,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2472:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 991,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 988,
                        "name": "depositCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "2521:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 989,
                        "name": "_lendingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "2540:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 987,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1848,
                      "src": "2501:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2501:51:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2472:80:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 995,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2628:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2632:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2628:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 999,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2648:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2640:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 997,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2640:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2640:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1001,
                        "name": "depositCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "2655:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 992,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "2605:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$60",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2615:12:4",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 360,
                      "src": "2605:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2605:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1003,
                  "nodeType": "ExpressionStatement",
                  "src": "2605:68:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1009,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2743:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2735:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1007,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2735:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2735:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1011,
                            "name": "reserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 830,
                            "src": "2750:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Reserves_$5534",
                              "typeString": "contract Reserves"
                            }
                          },
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2759:18:4",
                          "memberName": "getReservesAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5517,
                          "src": "2750:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2750:29:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1014,
                        "name": "lendingFeeToDeduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 986,
                        "src": "2781:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1004,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "2712:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$60",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 1006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2722:12:4",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 360,
                      "src": "2712:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2712:88:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "2712:88:4"
                },
                {
                  "assignments": [
                    1018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1018,
                      "mutability": "mutable",
                      "name": "depositCollateralAfterComissionFee",
                      "nameLocation": "2854:34:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1102,
                      "src": "2846:42:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1017,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2846:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1022,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1019,
                      "name": "depositCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 925,
                      "src": "2891:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1020,
                      "name": "lendingFeeToDeduct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 986,
                      "src": "2911:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2891:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2846:83:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1025,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3122:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3126:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3122:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 1023,
                          "name": "identityToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 836,
                          "src": "3098:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IdentityToken_$812",
                            "typeString": "contract IdentityToken"
                          }
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3112:9:4",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 236,
                        "src": "3098:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 1027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3098:35:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3137:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3098:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1049,
                    "nodeType": "Block",
                    "src": "3340:145:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1042,
                            "name": "_loanAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "3354:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1044,
                                "name": "depositCollateralAfterComissionFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1018,
                                "src": "3388:34:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1045,
                                "name": "_maximumLendingPercentage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 839,
                                "src": "3424:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1043,
                              "name": "calculatePercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1848,
                              "src": "3368:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3368:82:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3354:96:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1048,
                        "nodeType": "ExpressionStatement",
                        "src": "3354:96:4"
                      }
                    ]
                  },
                  "id": 1050,
                  "nodeType": "IfStatement",
                  "src": "3094:391:4",
                  "trueBody": {
                    "id": 1041,
                    "nodeType": "Block",
                    "src": "3140:194:4",
                    "statements": [
                      {
                        "assignments": [
                          1031
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1031,
                            "mutability": "mutable",
                            "name": "verifiedRate",
                            "nameLocation": "3162:12:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1041,
                            "src": "3154:20:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1030,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3154:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1033,
                        "initialValue": {
                          "hexValue": "39303030",
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3177:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9000_by_1",
                            "typeString": "int_const 9000"
                          },
                          "value": "9000"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3154:27:4"
                      },
                      {
                        "expression": {
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1034,
                            "name": "_loanAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "3220:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1036,
                                "name": "depositCollateralAfterComissionFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1018,
                                "src": "3254:34:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1037,
                                "name": "verifiedRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1031,
                                "src": "3290:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1035,
                              "name": "calculatePercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1848,
                              "src": "3234:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3234:69:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3220:83:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1040,
                        "nodeType": "ExpressionStatement",
                        "src": "3220:83:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1051,
                        "name": "AVAXCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "3495:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1054,
                      "indexExpression": {
                        "expression": {
                          "id": 1052,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3516:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3520:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3516:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3495:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1055,
                      "name": "depositCollateralAfterComissionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1018,
                      "src": "3531:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3495:70:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "3495:70:4"
                },
                {
                  "expression": {
                    "id": 1063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1058,
                        "name": "AVAXLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "3575:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1061,
                      "indexExpression": {
                        "expression": {
                          "id": 1059,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3590:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3594:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3590:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3575:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1062,
                      "name": "_loanAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "3605:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3575:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1064,
                  "nodeType": "ExpressionStatement",
                  "src": "3575:41:4"
                },
                {
                  "assignments": [
                    1066
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1066,
                      "mutability": "mutable",
                      "name": "depositCollateralInUSD",
                      "nameLocation": "3635:22:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1102,
                      "src": "3627:30:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1065,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3627:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1072,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1067,
                      "name": "depositCollateralAfterComissionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1018,
                      "src": "3660:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1068,
                          "name": "priceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 833,
                          "src": "3697:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PriceFeed_$5306",
                            "typeString": "contract PriceFeed"
                          }
                        },
                        "id": 1069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3707:17:4",
                        "memberName": "getAvaxPriceFirst",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5297,
                        "src": "3697:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
                          "typeString": "function () pure external returns (uint256)"
                        }
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3697:29:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3660:66:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3627:99:4"
                },
                {
                  "expression": {
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1073,
                        "name": "AVAXCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 858,
                        "src": "3745:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1076,
                      "indexExpression": {
                        "expression": {
                          "id": 1074,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3776:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3780:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3776:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3745:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1077,
                      "name": "depositCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1066,
                      "src": "3791:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3745:68:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1079,
                  "nodeType": "ExpressionStatement",
                  "src": "3745:68:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1083,
                        "name": "_loanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "4079:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1086,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4100:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4092:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1084,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4092:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4092:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1080,
                        "name": "liquidityPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 827,
                        "src": "4039:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$2458",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4053:25:4",
                      "memberName": "sendAvaxToLendingContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2391,
                      "src": "4039:39:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4039:67:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1089,
                  "nodeType": "ExpressionStatement",
                  "src": "4039:67:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1095,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4189:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4181:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1093,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4181:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4181:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1097,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4196:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4200:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4196:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1099,
                        "name": "_loanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "4208:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1090,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "4158:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$60",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 1092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4168:12:4",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 360,
                      "src": "4158:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4158:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "4158:62:4"
                }
              ]
            },
            "functionSelector": "b968c930",
            "id": 1103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrowAVAX",
            "nameLocation": "1526:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 925,
                  "mutability": "mutable",
                  "name": "depositCollateral",
                  "nameLocation": "1545:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1103,
                  "src": "1537:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1536:27:4"
            },
            "returnParameters": {
              "id": 927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1571:0:4"
            },
            "scope": 1958,
            "src": "1517:2765:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1231,
              "nodeType": "Block",
              "src": "4339:1405:4",
              "statements": [
                {
                  "assignments": [
                    1109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1109,
                      "mutability": "mutable",
                      "name": "amountToReturn",
                      "nameLocation": "4416:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1231,
                      "src": "4408:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1108,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4408:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1114,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1110,
                      "name": "AVAXLoanLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "4433:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1113,
                    "indexExpression": {
                      "expression": {
                        "id": 1111,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4448:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4452:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4448:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4433:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4408:51:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1118,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4541:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4545:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4541:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1116,
                              "name": "avaxToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 824,
                              "src": "4521:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Avax_$60",
                                "typeString": "contract Avax"
                              }
                            },
                            "id": 1117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4531:9:4",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 236,
                            "src": "4521:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4521:31:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1121,
                          "name": "amountToReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "4556:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4521:49:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b656e21",
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4572:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        },
                        "value": "You do not have enough AVAX token!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        }
                      ],
                      "id": 1115,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4512:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4512:97:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1125,
                  "nodeType": "ExpressionStatement",
                  "src": "4512:97:4"
                },
                {
                  "assignments": [
                    1127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1127,
                      "mutability": "mutable",
                      "name": "collateralAmount",
                      "nameLocation": "4628:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1231,
                      "src": "4620:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1126,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4620:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1132,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1128,
                      "name": "AVAXCollateralLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 850,
                      "src": "4647:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1131,
                    "indexExpression": {
                      "expression": {
                        "id": 1129,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4668:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4672:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4668:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4647:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4620:59:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1136,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4767:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4771:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4767:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1140,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4787:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4779:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4779:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4779:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1142,
                        "name": "amountToReturn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "4794:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1133,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "4744:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$60",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4754:12:4",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 360,
                      "src": "4744:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4744:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1144,
                  "nodeType": "ExpressionStatement",
                  "src": "4744:65:4"
                },
                {
                  "assignments": [
                    1146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1146,
                      "mutability": "mutable",
                      "name": "lendingFeeToDeduct",
                      "nameLocation": "4890:18:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1231,
                      "src": "4882:26:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1145,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4882:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1151,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1148,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1127,
                        "src": "4931:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1149,
                        "name": "_lendingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "4949:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1147,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1848,
                      "src": "4911:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4911:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4882:79:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1157,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5045:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5037:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1155,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5037:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5037:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1159,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5052:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5056:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5052:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1161,
                              "name": "collateralAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1127,
                              "src": "5065:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1162,
                              "name": "lendingFeeToDeduct",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1146,
                              "src": "5084:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5065:37:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1164,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5064:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1152,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "5014:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$60",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 1154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5024:12:4",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 360,
                      "src": "5014:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5014:90:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1166,
                  "nodeType": "ExpressionStatement",
                  "src": "5014:90:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1172,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5170:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5162:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1170,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5162:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5162:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1174,
                            "name": "reserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 830,
                            "src": "5177:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Reserves_$5534",
                              "typeString": "contract Reserves"
                            }
                          },
                          "id": 1175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5186:18:4",
                          "memberName": "getReservesAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5517,
                          "src": "5177:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5177:29:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1177,
                        "name": "lendingFeeToDeduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1146,
                        "src": "5208:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1167,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "5139:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$60",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 1169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5149:12:4",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 360,
                      "src": "5139:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5139:88:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1179,
                  "nodeType": "ExpressionStatement",
                  "src": "5139:88:4"
                },
                {
                  "expression": {
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5276:39:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1180,
                        "name": "AVAXCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "5283:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1183,
                      "indexExpression": {
                        "expression": {
                          "id": 1181,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5304:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5308:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5304:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5283:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1185,
                  "nodeType": "ExpressionStatement",
                  "src": "5276:39:4"
                },
                {
                  "expression": {
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5370:33:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1186,
                        "name": "AVAXLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "5377:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1189,
                      "indexExpression": {
                        "expression": {
                          "id": 1187,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5392:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5396:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5392:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5377:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1191,
                  "nodeType": "ExpressionStatement",
                  "src": "5370:33:4"
                },
                {
                  "expression": {
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5458:49:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1192,
                        "name": "AVAXCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 858,
                        "src": "5465:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1195,
                      "indexExpression": {
                        "expression": {
                          "id": 1193,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5496:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5500:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5496:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5465:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1197,
                  "nodeType": "ExpressionStatement",
                  "src": "5458:49:4"
                },
                {
                  "expression": {
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1198,
                        "name": "AVAXCUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 862,
                        "src": "5517:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1201,
                      "indexExpression": {
                        "expression": {
                          "id": 1199,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5550:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5554:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5550:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5517:44:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5565:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5517:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "5517:49:4"
                },
                {
                  "body": {
                    "id": 1229,
                    "nodeType": "Block",
                    "src": "5626:112:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1216,
                              "name": "AVAXDebtors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 884,
                              "src": "5644:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1218,
                            "indexExpression": {
                              "id": 1217,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1206,
                              "src": "5656:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5644:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1219,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5662:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5666:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5662:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5644:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1228,
                        "nodeType": "IfStatement",
                        "src": "5640:88:4",
                        "trueBody": {
                          "id": 1227,
                          "nodeType": "Block",
                          "src": "5674:54:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 1225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "5692:21:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1222,
                                    "name": "AVAXDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 884,
                                    "src": "5699:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1224,
                                  "indexExpression": {
                                    "id": 1223,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1206,
                                    "src": "5711:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5699:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1226,
                              "nodeType": "ExpressionStatement",
                              "src": "5692:21:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1209,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1206,
                      "src": "5597:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1210,
                        "name": "AVAXDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "5601:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5613:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5601:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5597:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1230,
                  "initializationExpression": {
                    "assignments": [
                      1206
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1206,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5590:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1230,
                        "src": "5582:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1205,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5582:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1208,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5594:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5582:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5621:3:4",
                      "subExpression": {
                        "id": 1213,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1206,
                        "src": "5621:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1215,
                    "nodeType": "ExpressionStatement",
                    "src": "5621:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "5577:161:4"
                }
              ]
            },
            "functionSelector": "42b9309a",
            "id": 1232,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1106,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1105,
                  "name": "onlyAVAXDebtHolder",
                  "nameLocations": [
                    "4320:18:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1929,
                  "src": "4320:18:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "4320:18:4"
              }
            ],
            "name": "repayAVAXDebt",
            "nameLocation": "4297:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4310:2:4"
            },
            "returnParameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4339:0:4"
            },
            "scope": 1958,
            "src": "4288:1456:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1294,
              "nodeType": "Block",
              "src": "5830:535:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1240,
                          "name": "topUpCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1234,
                          "src": "5857:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5876:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5857:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5879:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 1239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5849:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5849:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1245,
                  "nodeType": "ExpressionStatement",
                  "src": "5849:59:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1249,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5947:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5951:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5947:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1247,
                              "name": "avaxToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 824,
                              "src": "5927:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Avax_$60",
                                "typeString": "contract Avax"
                              }
                            },
                            "id": 1248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5937:9:4",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 236,
                            "src": "5927:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5927:31:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1252,
                          "name": "topUpCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1234,
                          "src": "5962:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5927:50:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b656e21",
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5979:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        },
                        "value": "You do not have enough AVAX token!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        }
                      ],
                      "id": 1246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5918:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5918:98:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1256,
                  "nodeType": "ExpressionStatement",
                  "src": "5918:98:4"
                },
                {
                  "assignments": [
                    1258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1258,
                      "mutability": "mutable",
                      "name": "topUpCollateralInUSD",
                      "nameLocation": "6034:20:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1294,
                      "src": "6026:28:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1257,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6026:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1259,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6026:28:4"
                },
                {
                  "expression": {
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1260,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1258,
                      "src": "6065:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1261,
                        "name": "topUpCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1234,
                        "src": "6088:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1262,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 833,
                            "src": "6106:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceFeed_$5306",
                              "typeString": "contract PriceFeed"
                            }
                          },
                          "id": 1263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6116:17:4",
                          "memberName": "getAvaxPriceFirst",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5297,
                          "src": "6106:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
                            "typeString": "function () pure external returns (uint256)"
                          }
                        },
                        "id": 1264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6106:29:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6088:47:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6065:70:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1267,
                  "nodeType": "ExpressionStatement",
                  "src": "6065:70:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1271,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6177:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6181:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6177:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1275,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6197:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6189:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1273,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6189:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6189:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1277,
                        "name": "topUpCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1234,
                        "src": "6204:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1268,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "6154:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$60",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 1270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6164:12:4",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 360,
                      "src": "6154:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6154:66:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1279,
                  "nodeType": "ExpressionStatement",
                  "src": "6154:66:4"
                },
                {
                  "expression": {
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1280,
                        "name": "AVAXCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "6231:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1283,
                      "indexExpression": {
                        "expression": {
                          "id": 1281,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6252:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6256:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6252:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6231:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1284,
                      "name": "topUpCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1234,
                      "src": "6267:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6231:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1286,
                  "nodeType": "ExpressionStatement",
                  "src": "6231:51:4"
                },
                {
                  "expression": {
                    "id": 1292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1287,
                        "name": "AVAXCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 858,
                        "src": "6292:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1290,
                      "indexExpression": {
                        "expression": {
                          "id": 1288,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6323:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6327:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6323:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6292:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1291,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1258,
                      "src": "6338:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6292:66:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1293,
                  "nodeType": "ExpressionStatement",
                  "src": "6292:66:4"
                }
              ]
            },
            "functionSelector": "b60d2617",
            "id": 1295,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1237,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1236,
                  "name": "onlyAVAXDebtHolder",
                  "nameLocations": [
                    "5811:18:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1929,
                  "src": "5811:18:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5811:18:4"
              }
            ],
            "name": "topUpAVAXCollateral",
            "nameLocation": "5759:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1234,
                  "mutability": "mutable",
                  "name": "topUpCollateral",
                  "nameLocation": "5787:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "5779:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5779:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5778:25:4"
            },
            "returnParameters": {
              "id": 1238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5830:0:4"
            },
            "scope": 1958,
            "src": "5750:615:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1385,
              "nodeType": "Block",
              "src": "6404:1008:4",
              "statements": [
                {
                  "assignments": [
                    1299
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1299,
                      "mutability": "mutable",
                      "name": "currentPriceOfAVAX",
                      "nameLocation": "6422:18:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1385,
                      "src": "6414:26:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1298,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6414:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1303,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1300,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "6443:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceFeed_$5306",
                          "typeString": "contract PriceFeed"
                        }
                      },
                      "id": 1301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6453:23:4",
                      "memberName": "getAvaxPriceToLiquidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5305,
                      "src": "6443:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure external returns (uint256)"
                      }
                    },
                    "id": 1302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6443:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6414:64:4"
                },
                {
                  "body": {
                    "id": 1383,
                    "nodeType": "Block",
                    "src": "6534:872:4",
                    "statements": [
                      {
                        "assignments": [
                          1316
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1316,
                            "mutability": "mutable",
                            "name": "newCollateralPrice",
                            "nameLocation": "6556:18:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1383,
                            "src": "6548:26:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1315,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6548:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1326,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1317,
                                "name": "currentPriceOfAVAX",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1299,
                                "src": "6578:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "baseExpression": {
                                      "id": 1318,
                                      "name": "AVAXCollateralLedger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 850,
                                      "src": "6600:20:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1322,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 1319,
                                        "name": "AVAXDebtors",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 884,
                                        "src": "6621:11:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1321,
                                      "indexExpression": {
                                        "id": 1320,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1305,
                                        "src": "6633:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6621:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6600:36:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1323,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6599:38:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6578:59:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1325,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6577:61:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6548:90:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1327,
                            "name": "newCollateralPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1316,
                            "src": "6656:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 1328,
                              "name": "AVAXCollateralValueLedgerinUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 858,
                              "src": "6678:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1332,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1329,
                                "name": "AVAXDebtors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 884,
                                "src": "6709:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1331,
                              "indexExpression": {
                                "id": 1330,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1305,
                                "src": "6721:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6709:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6678:46:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6656:68:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1382,
                        "nodeType": "IfStatement",
                        "src": "6652:744:4",
                        "trueBody": {
                          "id": 1381,
                          "nodeType": "Block",
                          "src": "6726:670:4",
                          "statements": [
                            {
                              "assignments": [
                                1335
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1335,
                                  "mutability": "mutable",
                                  "name": "accountAddress",
                                  "nameLocation": "6894:14:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1381,
                                  "src": "6886:22:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 1334,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6886:7:4",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1339,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1336,
                                  "name": "AVAXDebtors",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 884,
                                  "src": "6911:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1338,
                                "indexExpression": {
                                  "id": 1337,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1305,
                                  "src": "6923:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6911:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6886:39:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1345,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "6975:4:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Lending_$1958",
                                          "typeString": "contract Lending"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Lending_$1958",
                                          "typeString": "contract Lending"
                                        }
                                      ],
                                      "id": 1344,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6967:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1343,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6967:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1346,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6967:13:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 1347,
                                        "name": "liquidityPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 827,
                                        "src": "6982:13:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LiquidityPool_$2458",
                                          "typeString": "contract LiquidityPool"
                                        }
                                      },
                                      "id": 1348,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6996:12:4",
                                      "memberName": "getLPAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2364,
                                      "src": "6982:26:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 1349,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6982:28:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1350,
                                      "name": "AVAXCollateralLedger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 850,
                                      "src": "7012:20:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1352,
                                    "indexExpression": {
                                      "id": 1351,
                                      "name": "accountAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1335,
                                      "src": "7033:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7012:36:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1340,
                                    "name": "avaxToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 824,
                                    "src": "6944:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Avax_$60",
                                      "typeString": "contract Avax"
                                    }
                                  },
                                  "id": 1342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6954:12:4",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 360,
                                  "src": "6944:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6944:105:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1354,
                              "nodeType": "ExpressionStatement",
                              "src": "6944:105:4"
                            },
                            {
                              "expression": {
                                "id": 1360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "7068:43:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1355,
                                    "name": "AVAXCollateralLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 850,
                                    "src": "7075:20:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1359,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1356,
                                      "name": "AVAXDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 884,
                                      "src": "7096:11:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1358,
                                    "indexExpression": {
                                      "id": 1357,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1305,
                                      "src": "7108:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7096:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7075:36:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1361,
                              "nodeType": "ExpressionStatement",
                              "src": "7068:43:4"
                            },
                            {
                              "expression": {
                                "id": 1367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "7181:37:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1362,
                                    "name": "AVAXLoanLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 854,
                                    "src": "7188:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1366,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1363,
                                      "name": "AVAXDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 884,
                                      "src": "7203:11:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1365,
                                    "indexExpression": {
                                      "id": 1364,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1305,
                                      "src": "7215:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7203:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7188:30:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1368,
                              "nodeType": "ExpressionStatement",
                              "src": "7181:37:4"
                            },
                            {
                              "expression": {
                                "id": 1374,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "7288:53:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1369,
                                    "name": "AVAXCollateralValueLedgerinUSD",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 858,
                                    "src": "7295:30:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1373,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1370,
                                      "name": "AVAXDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 884,
                                      "src": "7326:11:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1372,
                                    "indexExpression": {
                                      "id": 1371,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1305,
                                      "src": "7338:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7326:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7295:46:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1375,
                              "nodeType": "ExpressionStatement",
                              "src": "7288:53:4"
                            },
                            {
                              "expression": {
                                "id": 1379,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "7360:21:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1376,
                                    "name": "AVAXDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 884,
                                    "src": "7367:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1378,
                                  "indexExpression": {
                                    "id": 1377,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1305,
                                    "src": "7379:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7367:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1380,
                              "nodeType": "ExpressionStatement",
                              "src": "7360:21:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1308,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1305,
                      "src": "6505:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1309,
                        "name": "AVAXDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "6509:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6521:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6509:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6505:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1384,
                  "initializationExpression": {
                    "assignments": [
                      1305
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1305,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6498:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1384,
                        "src": "6493:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1304,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6493:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1307,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6502:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6493:10:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6529:3:4",
                      "subExpression": {
                        "id": 1312,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1305,
                        "src": "6529:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1314,
                    "nodeType": "ExpressionStatement",
                    "src": "6529:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "6488:918:4"
                }
              ]
            },
            "functionSelector": "db8bf7e6",
            "id": 1386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateAVAX",
            "nameLocation": "6381:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6394:2:4"
            },
            "returnParameters": {
              "id": 1297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6404:0:4"
            },
            "scope": 1958,
            "src": "6372:1040:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1471,
              "nodeType": "Block",
              "src": "7509:829:4",
              "statements": [
                {
                  "assignments": [
                    1392
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1392,
                      "mutability": "mutable",
                      "name": "depositCollateral",
                      "nameLocation": "7527:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1471,
                      "src": "7519:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1391,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7519:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1395,
                  "initialValue": {
                    "expression": {
                      "id": 1393,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "7547:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7551:5:4",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "7547:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7519:37:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1397,
                          "name": "depositCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1392,
                          "src": "7574:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7595:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7574:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 1400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7598:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 1396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7566:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7566:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1402,
                  "nodeType": "ExpressionStatement",
                  "src": "7566:61:4"
                },
                {
                  "assignments": [
                    1404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1404,
                      "mutability": "mutable",
                      "name": "depositCollateralInEth",
                      "nameLocation": "7645:22:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1471,
                      "src": "7637:30:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1403,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7637:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1408,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1405,
                      "name": "depositCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1392,
                      "src": "7670:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030303030303030303030303030303030",
                      "id": 1406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7690:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1000000000000000000"
                    },
                    "src": "7670:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7637:72:4"
                },
                {
                  "assignments": [
                    1410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1410,
                      "mutability": "mutable",
                      "name": "depositCollateralInUSD",
                      "nameLocation": "7727:22:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1471,
                      "src": "7719:30:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1409,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7719:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1411,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7719:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1415,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7776:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7780:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7776:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1412,
                        "name": "ETHDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "7760:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7771:4:4",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7760:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7760:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1418,
                  "nodeType": "ExpressionStatement",
                  "src": "7760:27:4"
                },
                {
                  "expression": {
                    "id": 1425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1419,
                      "name": "depositCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1410,
                      "src": "7797:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1420,
                        "name": "depositCollateralInEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1404,
                        "src": "7822:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1421,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 833,
                            "src": "7847:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceFeed_$5306",
                              "typeString": "contract PriceFeed"
                            }
                          },
                          "id": 1422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7857:16:4",
                          "memberName": "getEthPriceFirst",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5281,
                          "src": "7847:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
                            "typeString": "function () pure external returns (uint256)"
                          }
                        },
                        "id": 1423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7847:28:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7822:53:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7797:78:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1426,
                  "nodeType": "ExpressionStatement",
                  "src": "7797:78:4"
                },
                {
                  "assignments": [
                    1428
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1428,
                      "mutability": "mutable",
                      "name": "_loanAmount",
                      "nameLocation": "7903:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1471,
                      "src": "7895:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1427,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7895:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1433,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1430,
                        "name": "depositCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1392,
                        "src": "7937:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1431,
                        "name": "_maximumLendingPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 839,
                        "src": "7956:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1429,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1848,
                      "src": "7917:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7917:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7895:87:4"
                },
                {
                  "expression": {
                    "id": 1439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1434,
                        "name": "ETHCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 866,
                        "src": "8012:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1437,
                      "indexExpression": {
                        "expression": {
                          "id": 1435,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8032:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8036:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8032:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8012:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1438,
                      "name": "depositCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1392,
                      "src": "8047:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8012:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1440,
                  "nodeType": "ExpressionStatement",
                  "src": "8012:52:4"
                },
                {
                  "expression": {
                    "id": 1446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1441,
                        "name": "ETHLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "8074:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1444,
                      "indexExpression": {
                        "expression": {
                          "id": 1442,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8088:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8092:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8088:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8074:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1445,
                      "name": "_loanAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1428,
                      "src": "8103:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8074:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1447,
                  "nodeType": "ExpressionStatement",
                  "src": "8074:40:4"
                },
                {
                  "expression": {
                    "id": 1453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1448,
                        "name": "ETHCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "8124:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1451,
                      "indexExpression": {
                        "expression": {
                          "id": 1449,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8154:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8158:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8154:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8124:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1452,
                      "name": "depositCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1410,
                      "src": "8169:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8124:67:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1454,
                  "nodeType": "ExpressionStatement",
                  "src": "8124:67:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1458,
                        "name": "_loanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1428,
                        "src": "8240:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1461,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "8261:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8265:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8261:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8253:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1459,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8253:8:4",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8253:19:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 1455,
                        "name": "liquidityPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 827,
                        "src": "8210:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$2458",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 1457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8224:15:4",
                      "memberName": "sendEthToLender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2413,
                      "src": "8210:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_payable_$returns$__$",
                        "typeString": "function (uint256,address payable) external"
                      }
                    },
                    "id": 1464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8210:63:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1465,
                  "nodeType": "ExpressionStatement",
                  "src": "8210:63:4"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1466,
                      "name": "ETHCollateralValueLedgerinUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "8290:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1469,
                    "indexExpression": {
                      "expression": {
                        "id": 1467,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "8320:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8324:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8320:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8290:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1390,
                  "id": 1470,
                  "nodeType": "Return",
                  "src": "8283:48:4"
                }
              ]
            },
            "functionSelector": "4fed0518",
            "id": 1472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrowEth",
            "nameLocation": "7464:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7473:2:4"
            },
            "returnParameters": {
              "id": 1390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1389,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1472,
                  "src": "7500:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7500:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7499:9:4"
            },
            "scope": 1958,
            "src": "7455:883:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1520,
              "nodeType": "Block",
              "src": "8407:467:4",
              "statements": [
                {
                  "assignments": [
                    1478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1478,
                      "mutability": "mutable",
                      "name": "topUpCollateral",
                      "nameLocation": "8425:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1520,
                      "src": "8417:23:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1477,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8417:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1481,
                  "initialValue": {
                    "expression": {
                      "id": 1479,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "8443:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8447:5:4",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "8443:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8417:35:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1483,
                          "name": "topUpCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1478,
                          "src": "8470:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8489:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8470:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 1486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8492:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 1482,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8462:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8462:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1488,
                  "nodeType": "ExpressionStatement",
                  "src": "8462:59:4"
                },
                {
                  "assignments": [
                    1490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1490,
                      "mutability": "mutable",
                      "name": "topUpCollateralInEth",
                      "nameLocation": "8539:20:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1520,
                      "src": "8531:28:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1489,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8531:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1494,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1491,
                      "name": "topUpCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1478,
                      "src": "8562:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030303030303030303030303030303030",
                      "id": 1492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8580:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1000000000000000000"
                    },
                    "src": "8562:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8531:68:4"
                },
                {
                  "assignments": [
                    1496
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1496,
                      "mutability": "mutable",
                      "name": "topUpCollateralInUSD",
                      "nameLocation": "8617:20:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1520,
                      "src": "8609:28:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1495,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8609:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1497,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8609:28:4"
                },
                {
                  "expression": {
                    "id": 1504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1498,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1496,
                      "src": "8648:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1499,
                        "name": "topUpCollateralInEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1490,
                        "src": "8671:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1500,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 833,
                            "src": "8694:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceFeed_$5306",
                              "typeString": "contract PriceFeed"
                            }
                          },
                          "id": 1501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8704:16:4",
                          "memberName": "getEthPriceFirst",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5281,
                          "src": "8694:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
                            "typeString": "function () pure external returns (uint256)"
                          }
                        },
                        "id": 1502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8694:28:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8671:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8648:74:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1505,
                  "nodeType": "ExpressionStatement",
                  "src": "8648:74:4"
                },
                {
                  "expression": {
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1506,
                        "name": "ETHCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 866,
                        "src": "8742:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1509,
                      "indexExpression": {
                        "expression": {
                          "id": 1507,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8762:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8766:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8762:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8742:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1510,
                      "name": "topUpCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1478,
                      "src": "8777:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8742:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1512,
                  "nodeType": "ExpressionStatement",
                  "src": "8742:50:4"
                },
                {
                  "expression": {
                    "id": 1518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1513,
                        "name": "ETHCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "8802:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1516,
                      "indexExpression": {
                        "expression": {
                          "id": 1514,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8832:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8836:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8832:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8802:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1517,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1496,
                      "src": "8847:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8802:65:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1519,
                  "nodeType": "ExpressionStatement",
                  "src": "8802:65:4"
                }
              ]
            },
            "functionSelector": "2b0fa399",
            "id": 1521,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1475,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1474,
                  "name": "onlyEthDebtHolder",
                  "nameLocations": [
                    "8389:17:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1943,
                  "src": "8389:17:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "8389:17:4"
              }
            ],
            "name": "topUpETHCollateral",
            "nameLocation": "8353:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8371:2:4"
            },
            "returnParameters": {
              "id": 1476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8407:0:4"
            },
            "scope": 1958,
            "src": "8344:530:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1663,
              "nodeType": "Block",
              "src": "8938:1587:4",
              "statements": [
                {
                  "assignments": [
                    1527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1527,
                      "mutability": "mutable",
                      "name": "amountToReturn",
                      "nameLocation": "9021:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1663,
                      "src": "9013:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1526,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9013:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1532,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1528,
                      "name": "ETHLoanLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "9038:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1531,
                    "indexExpression": {
                      "expression": {
                        "id": 1529,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9052:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9056:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9052:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9038:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9013:50:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1534,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9125:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9129:5:4",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9125:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1536,
                          "name": "amountToReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1527,
                          "src": "9138:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9125:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c756520696e736572746564206973206e6f7420656e6f756768",
                        "id": 1538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9154:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
                          "typeString": "literal_string \"Value inserted is not enough\""
                        },
                        "value": "Value inserted is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
                          "typeString": "literal_string \"Value inserted is not enough\""
                        }
                      ],
                      "id": 1533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9116:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9116:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1540,
                  "nodeType": "ExpressionStatement",
                  "src": "9116:69:4"
                },
                {
                  "assignments": [
                    1542
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1542,
                      "mutability": "mutable",
                      "name": "collateralAmount",
                      "nameLocation": "9203:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1663,
                      "src": "9195:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1541,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9195:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1547,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1543,
                      "name": "ETHCollateralLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "9222:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1546,
                    "indexExpression": {
                      "expression": {
                        "id": 1544,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9242:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9246:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9242:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9222:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9195:58:4"
                },
                {
                  "assignments": [
                    1549
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1549,
                      "mutability": "mutable",
                      "name": "lendingFeeToDeduct",
                      "nameLocation": "9334:18:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1663,
                      "src": "9326:26:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1548,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9326:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1554,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1551,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1542,
                        "src": "9375:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1552,
                        "name": "_lendingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "9393:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1550,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1848,
                      "src": "9355:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9355:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9326:79:4"
                },
                {
                  "assignments": [
                    1556
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1556,
                      "mutability": "mutable",
                      "name": "addressToSend",
                      "nameLocation": "9474:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1663,
                      "src": "9458:29:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1555,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9458:15:4",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1562,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1559,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9499:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9503:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9499:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9490:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1557,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9490:9:4",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9490:20:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9458:52:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1566,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1542,
                          "src": "9543:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1567,
                          "name": "lendingFeeToDeduct",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1549,
                          "src": "9562:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9543:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1563,
                        "name": "addressToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1556,
                        "src": "9520:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9534:8:4",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9520:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9520:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1570,
                  "nodeType": "ExpressionStatement",
                  "src": "9520:61:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1574,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "9708:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Lending_$1958",
                                  "typeString": "contract Lending"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Lending_$1958",
                                  "typeString": "contract Lending"
                                }
                              ],
                              "id": 1573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9700:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1572,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9700:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9700:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9714:7:4",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "9700:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1577,
                          "name": "amountToReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1527,
                          "src": "9725:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9700:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f52",
                        "id": 1579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9741:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
                          "typeString": "literal_string \"ERROR\""
                        },
                        "value": "ERROR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
                          "typeString": "literal_string \"ERROR\""
                        }
                      ],
                      "id": 1571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9691:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9691:58:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1581,
                  "nodeType": "ExpressionStatement",
                  "src": "9691:58:4"
                },
                {
                  "assignments": [
                    1583
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1583,
                      "mutability": "mutable",
                      "name": "lpAddress",
                      "nameLocation": "9775:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1663,
                      "src": "9759:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1582,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9759:15:4",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1590,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1586,
                            "name": "liquidityPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 827,
                            "src": "9796:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityPool_$2458",
                              "typeString": "contract LiquidityPool"
                            }
                          },
                          "id": 1587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9810:12:4",
                          "memberName": "getLPAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2364,
                          "src": "9796:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9796:28:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9787:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1584,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9787:9:4",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9787:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9759:66:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1594,
                        "name": "amountToReturn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1527,
                        "src": "9854:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1591,
                        "name": "lpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1583,
                        "src": "9835:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9845:8:4",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9835:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9835:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1596,
                  "nodeType": "ExpressionStatement",
                  "src": "9835:34:4"
                },
                {
                  "assignments": [
                    1598
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1598,
                      "mutability": "mutable",
                      "name": "reservesAddress",
                      "nameLocation": "9936:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1663,
                      "src": "9920:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1597,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9920:15:4",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1605,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1601,
                            "name": "reserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 830,
                            "src": "9962:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Reserves_$5534",
                              "typeString": "contract Reserves"
                            }
                          },
                          "id": 1602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9971:18:4",
                          "memberName": "getReservesAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5517,
                          "src": "9962:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9962:29:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9954:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1599,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9954:8:4",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9954:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9920:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1609,
                        "name": "lendingFeeToDeduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1549,
                        "src": "10027:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1606,
                        "name": "reservesAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1598,
                        "src": "10002:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10018:8:4",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "10002:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10002:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1611,
                  "nodeType": "ExpressionStatement",
                  "src": "10002:44:4"
                },
                {
                  "expression": {
                    "id": 1616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10057:38:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1612,
                        "name": "ETHCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 866,
                        "src": "10064:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1615,
                      "indexExpression": {
                        "expression": {
                          "id": 1613,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10084:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10088:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10084:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10064:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1617,
                  "nodeType": "ExpressionStatement",
                  "src": "10057:38:4"
                },
                {
                  "expression": {
                    "id": 1622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10150:32:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1618,
                        "name": "ETHLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "10157:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1621,
                      "indexExpression": {
                        "expression": {
                          "id": 1619,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10171:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10175:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10171:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10157:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1623,
                  "nodeType": "ExpressionStatement",
                  "src": "10150:32:4"
                },
                {
                  "expression": {
                    "id": 1628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10237:48:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1624,
                        "name": "ETHCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "10244:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1627,
                      "indexExpression": {
                        "expression": {
                          "id": 1625,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10274:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10278:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10274:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10244:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1629,
                  "nodeType": "ExpressionStatement",
                  "src": "10237:48:4"
                },
                {
                  "expression": {
                    "id": 1635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1630,
                        "name": "ETHUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "10295:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1633,
                      "indexExpression": {
                        "expression": {
                          "id": 1631,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10326:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10330:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10326:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10295:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10341:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10295:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1636,
                  "nodeType": "ExpressionStatement",
                  "src": "10295:47:4"
                },
                {
                  "body": {
                    "id": 1661,
                    "nodeType": "Block",
                    "src": "10409:110:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1648,
                              "name": "ETHDebtors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 881,
                              "src": "10427:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1650,
                            "indexExpression": {
                              "id": 1649,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1638,
                              "src": "10438:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10427:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1651,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "10444:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10448:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10444:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10427:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1660,
                        "nodeType": "IfStatement",
                        "src": "10423:86:4",
                        "trueBody": {
                          "id": 1659,
                          "nodeType": "Block",
                          "src": "10456:53:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 1657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "10474:20:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1654,
                                    "name": "ETHDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 881,
                                    "src": "10481:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1656,
                                  "indexExpression": {
                                    "id": 1655,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1638,
                                    "src": "10492:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10481:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1658,
                              "nodeType": "ExpressionStatement",
                              "src": "10474:20:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1641,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1638,
                      "src": "10381:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1642,
                        "name": "ETHDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "10385:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10396:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10385:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10381:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1662,
                  "initializationExpression": {
                    "assignments": [
                      1638
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1638,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10374:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "10366:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1637,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10366:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1640,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10378:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10366:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10404:3:4",
                      "subExpression": {
                        "id": 1645,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1638,
                        "src": "10404:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1647,
                    "nodeType": "ExpressionStatement",
                    "src": "10404:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "10361:158:4"
                }
              ]
            },
            "functionSelector": "4a282670",
            "id": 1664,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1524,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1523,
                  "name": "onlyEthDebtHolder",
                  "nameLocations": [
                    "8920:17:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1943,
                  "src": "8920:17:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "8920:17:4"
              }
            ],
            "name": "repayEth",
            "nameLocation": "8894:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8902:2:4"
            },
            "returnParameters": {
              "id": 1525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8938:0:4"
            },
            "scope": 1958,
            "src": "8885:1640:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1754,
              "nodeType": "Block",
              "src": "10581:918:4",
              "statements": [
                {
                  "assignments": [
                    1668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1668,
                      "mutability": "mutable",
                      "name": "currentPriceOfEth",
                      "nameLocation": "10599:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1754,
                      "src": "10591:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1667,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10591:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1672,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1669,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "10619:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceFeed_$5306",
                          "typeString": "contract PriceFeed"
                        }
                      },
                      "id": 1670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10629:22:4",
                      "memberName": "getEthPriceToLiquidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5289,
                      "src": "10619:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure external returns (uint256)"
                      }
                    },
                    "id": 1671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10619:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10591:62:4"
                },
                {
                  "body": {
                    "id": 1752,
                    "nodeType": "Block",
                    "src": "10708:785:4",
                    "statements": [
                      {
                        "assignments": [
                          1685
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1685,
                            "mutability": "mutable",
                            "name": "newCollateralPrice",
                            "nameLocation": "10730:18:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1752,
                            "src": "10722:26:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1684,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10722:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1697,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1686,
                                "name": "currentPriceOfEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1668,
                                "src": "10752:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1693,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 1687,
                                        "name": "ETHCollateralLedger",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 866,
                                        "src": "10773:19:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1691,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 1688,
                                          "name": "ETHDebtors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 881,
                                          "src": "10793:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 1690,
                                        "indexExpression": {
                                          "id": 1689,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1674,
                                          "src": "10804:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "10793:13:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10773:34:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "31303030303030303030303030303030303030",
                                      "id": 1692,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10810:19:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "value": "1000000000000000000"
                                    },
                                    "src": "10773:56:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1694,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "10772:58:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10752:78:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1696,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10751:80:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10722:109:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1698,
                            "name": "newCollateralPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1685,
                            "src": "10849:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 1699,
                              "name": "ETHCollateralValueLedgerinUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 874,
                              "src": "10871:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1703,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1700,
                                "name": "ETHDebtors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 881,
                                "src": "10901:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1702,
                              "indexExpression": {
                                "id": 1701,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1674,
                                "src": "10912:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10901:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10871:44:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10849:66:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1751,
                        "nodeType": "IfStatement",
                        "src": "10845:638:4",
                        "trueBody": {
                          "id": 1750,
                          "nodeType": "Block",
                          "src": "10917:566:4",
                          "statements": [
                            {
                              "assignments": [
                                1706
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1706,
                                  "mutability": "mutable",
                                  "name": "addressToSend",
                                  "nameLocation": "11013:13:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1750,
                                  "src": "10997:29:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1705,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10997:15:4",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1713,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 1709,
                                        "name": "liquidityPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 827,
                                        "src": "11038:13:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LiquidityPool_$2458",
                                          "typeString": "contract LiquidityPool"
                                        }
                                      },
                                      "id": 1710,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "11052:12:4",
                                      "memberName": "getLPAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2364,
                                      "src": "11038:26:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 1711,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11038:28:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11029:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1707,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11029:9:4",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11029:38:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10997:70:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1717,
                                      "name": "ETHCollateralLedger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 866,
                                      "src": "11108:19:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1721,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 1718,
                                        "name": "ETHDebtors",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 881,
                                        "src": "11128:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1720,
                                      "indexExpression": {
                                        "id": 1719,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1674,
                                        "src": "11139:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11128:13:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11108:34:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1714,
                                    "name": "addressToSend",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1706,
                                    "src": "11085:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1716,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11099:8:4",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "11085:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11085:58:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1723,
                              "nodeType": "ExpressionStatement",
                              "src": "11085:58:4"
                            },
                            {
                              "expression": {
                                "id": 1729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11162:41:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1724,
                                    "name": "ETHCollateralLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 866,
                                    "src": "11169:19:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1728,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1725,
                                      "name": "ETHDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 881,
                                      "src": "11189:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1727,
                                    "indexExpression": {
                                      "id": 1726,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1674,
                                      "src": "11200:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11189:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11169:34:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1730,
                              "nodeType": "ExpressionStatement",
                              "src": "11162:41:4"
                            },
                            {
                              "expression": {
                                "id": 1736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11273:35:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1731,
                                    "name": "ETHLoanLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 870,
                                    "src": "11280:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1735,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1732,
                                      "name": "ETHDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 881,
                                      "src": "11294:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1734,
                                    "indexExpression": {
                                      "id": 1733,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1674,
                                      "src": "11305:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11294:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11280:28:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1737,
                              "nodeType": "ExpressionStatement",
                              "src": "11273:35:4"
                            },
                            {
                              "expression": {
                                "id": 1743,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11378:51:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1738,
                                    "name": "ETHCollateralValueLedgerinUSD",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 874,
                                    "src": "11385:29:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1742,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1739,
                                      "name": "ETHDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 881,
                                      "src": "11415:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1741,
                                    "indexExpression": {
                                      "id": 1740,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1674,
                                      "src": "11426:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11415:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11385:44:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1744,
                              "nodeType": "ExpressionStatement",
                              "src": "11378:51:4"
                            },
                            {
                              "expression": {
                                "id": 1748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11448:20:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1745,
                                    "name": "ETHDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 881,
                                    "src": "11455:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1747,
                                  "indexExpression": {
                                    "id": 1746,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1674,
                                    "src": "11466:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11455:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1749,
                              "nodeType": "ExpressionStatement",
                              "src": "11448:20:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1677,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1674,
                      "src": "10680:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1678,
                        "name": "ETHDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "10684:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10695:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10684:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10680:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1753,
                  "initializationExpression": {
                    "assignments": [
                      1674
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1674,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10673:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1753,
                        "src": "10668:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1673,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10668:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1676,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10677:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10668:10:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10703:3:4",
                      "subExpression": {
                        "id": 1681,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1674,
                        "src": "10703:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1683,
                    "nodeType": "ExpressionStatement",
                    "src": "10703:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "10663:830:4"
                }
              ]
            },
            "functionSelector": "734997e5",
            "id": 1755,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateETH",
            "nameLocation": "10551:12:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10563:2:4"
            },
            "returnParameters": {
              "id": 1666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10581:0:4"
            },
            "scope": 1958,
            "src": "10542:957:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1765,
              "nodeType": "Block",
              "src": "11579:65:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1760,
                      "name": "AVAXCollateralValueLedgerinUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 858,
                      "src": "11595:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1763,
                    "indexExpression": {
                      "expression": {
                        "id": 1761,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "11626:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11630:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11626:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11595:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1759,
                  "id": 1764,
                  "nodeType": "Return",
                  "src": "11588:49:4"
                }
              ]
            },
            "functionSelector": "757c3cbd",
            "id": 1766,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserAVAXCollateralAmountInUSD",
            "nameLocation": "11514:32:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11546:2:4"
            },
            "returnParameters": {
              "id": 1759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1758,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1766,
                  "src": "11570:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11570:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11569:9:4"
            },
            "scope": 1958,
            "src": "11505:139:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1782,
              "nodeType": "Block",
              "src": "11719:76:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1771,
                                  "name": "AVAXCollateralLedger",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 850,
                                  "src": "11737:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1774,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1772,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "11758:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1773,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11762:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "11758:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11737:32:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "39303030",
                                "id": 1775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11772:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_9000_by_1",
                                  "typeString": "int_const 9000"
                                },
                                "value": "9000"
                              },
                              "src": "11737:39:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1777,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11736:41:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "31305f303030",
                          "id": 1778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11780:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10_000"
                        },
                        "src": "11736:50:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1780,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "11735:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1770,
                  "id": 1781,
                  "nodeType": "Return",
                  "src": "11728:59:4"
                }
              ]
            },
            "functionSelector": "0b8e4ad4",
            "id": 1783,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserAvaxLiquidationPrice",
            "nameLocation": "11659:27:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11686:2:4"
            },
            "returnParameters": {
              "id": 1770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1769,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1783,
                  "src": "11710:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11710:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11709:9:4"
            },
            "scope": 1958,
            "src": "11650:145:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1793,
              "nodeType": "Block",
              "src": "11872:66:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1788,
                      "name": "ETHUserTotalReturnTransactions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "11889:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1791,
                    "indexExpression": {
                      "expression": {
                        "id": 1789,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "11920:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11924:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11920:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11889:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1787,
                  "id": 1792,
                  "nodeType": "Return",
                  "src": "11882:49:4"
                }
              ]
            },
            "functionSelector": "6862f589",
            "id": 1794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotaETHRepaymentAmount",
            "nameLocation": "11810:29:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11839:2:4"
            },
            "returnParameters": {
              "id": 1787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1786,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1794,
                  "src": "11863:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11863:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11862:9:4"
            },
            "scope": 1958,
            "src": "11801:137:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1804,
              "nodeType": "Block",
              "src": "12016:68:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1799,
                      "name": "AVAXCUserTotalReturnTransactions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "12033:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1802,
                    "indexExpression": {
                      "expression": {
                        "id": 1800,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "12066:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12070:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "12066:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12033:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1798,
                  "id": 1803,
                  "nodeType": "Return",
                  "src": "12026:51:4"
                }
              ]
            },
            "functionSelector": "6e67fcdd",
            "id": 1805,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotaAVAXRepaymentAmount",
            "nameLocation": "11953:30:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11983:2:4"
            },
            "returnParameters": {
              "id": 1798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1797,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1805,
                  "src": "12007:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12007:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12006:9:4"
            },
            "scope": 1958,
            "src": "11944:140:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1817,
              "nodeType": "Block",
              "src": "12185:65:4",
              "statements": [
                {
                  "expression": {
                    "id": 1815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1810,
                        "name": "ETHUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "12194:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1813,
                      "indexExpression": {
                        "expression": {
                          "id": 1811,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12225:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12229:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12225:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12194:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "313030",
                      "id": 1814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12240:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "12194:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1816,
                  "nodeType": "ExpressionStatement",
                  "src": "12194:49:4"
                }
              ]
            },
            "functionSelector": "b731bc6d",
            "id": 1818,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initUserTotalEthRepaymentAmount",
            "nameLocation": "12126:31:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12157:2:4"
            },
            "returnParameters": {
              "id": 1809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1808,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1818,
                  "src": "12176:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12176:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12175:9:4"
            },
            "scope": 1958,
            "src": "12117:133:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1830,
              "nodeType": "Block",
              "src": "12325:67:4",
              "statements": [
                {
                  "expression": {
                    "id": 1828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1823,
                        "name": "AVAXCUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 862,
                        "src": "12334:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1826,
                      "indexExpression": {
                        "expression": {
                          "id": 1824,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12367:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12371:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12367:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12334:44:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "313030",
                      "id": 1827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12382:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "12334:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1829,
                  "nodeType": "ExpressionStatement",
                  "src": "12334:51:4"
                }
              ]
            },
            "functionSelector": "dcbbdbb8",
            "id": 1831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initUserTotalAVAXRepaymentAmount",
            "nameLocation": "12265:32:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12297:2:4"
            },
            "returnParameters": {
              "id": 1822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1821,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "12316:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12316:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12315:9:4"
            },
            "scope": 1958,
            "src": "12256:136:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1847,
              "nodeType": "Block",
              "src": "12726:64:4",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1840,
                            "name": "collateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1833,
                            "src": "12744:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1841,
                            "name": "percentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1835,
                            "src": "12763:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12744:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1843,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12743:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31305f303030",
                      "id": 1844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12777:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10_000"
                    },
                    "src": "12743:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1839,
                  "id": 1846,
                  "nodeType": "Return",
                  "src": "12736:47:4"
                }
              ]
            },
            "functionSelector": "2133e3b9",
            "id": 1848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePercentage",
            "nameLocation": "12630:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1833,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "12658:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1848,
                  "src": "12650:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12650:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1835,
                  "mutability": "mutable",
                  "name": "percentage",
                  "nameLocation": "12684:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1848,
                  "src": "12676:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12676:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12649:46:4"
            },
            "returnParameters": {
              "id": 1839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1838,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1848,
                  "src": "12717:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12717:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12716:9:4"
            },
            "scope": 1958,
            "src": "12621:169:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1861,
              "nodeType": "Block",
              "src": "12862:58:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1857,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "12907:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1958",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12899:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1855,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12899:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12899:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1853,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "12879:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$60",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 1854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12889:9:4",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 236,
                      "src": "12879:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12879:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1852,
                  "id": 1860,
                  "nodeType": "Return",
                  "src": "12872:41:4"
                }
              ]
            },
            "functionSelector": "4b84a647",
            "id": 1862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHoldingAVAXCollateral",
            "nameLocation": "12805:24:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12829:2:4"
            },
            "returnParameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1862,
                  "src": "12853:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12853:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12852:9:4"
            },
            "scope": 1958,
            "src": "12796:124:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1873,
              "nodeType": "Block",
              "src": "12991:45:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1869,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "13016:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Lending_$1958",
                            "typeString": "contract Lending"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Lending_$1958",
                            "typeString": "contract Lending"
                          }
                        ],
                        "id": 1868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13008:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1867,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13008:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13008:13:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13022:7:4",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "13008:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1866,
                  "id": 1872,
                  "nodeType": "Return",
                  "src": "13001:28:4"
                }
              ]
            },
            "functionSelector": "fcd6e191",
            "id": 1874,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHoldingEthCollateral",
            "nameLocation": "12935:23:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12958:2:4"
            },
            "returnParameters": {
              "id": 1866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1865,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1874,
                  "src": "12982:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12982:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12981:9:4"
            },
            "scope": 1958,
            "src": "12926:110:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1887,
              "nodeType": "Block",
              "src": "13186:52:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 1881,
                          "name": "AVAXLoanLedger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 854,
                          "src": "13204:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1884,
                        "indexExpression": {
                          "expression": {
                            "id": 1882,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "13219:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13223:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13219:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13204:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1885,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "13203:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1880,
                  "id": 1886,
                  "nodeType": "Return",
                  "src": "13196:35:4"
                }
              ]
            },
            "functionSelector": "23ded52a",
            "id": 1888,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1877,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1876,
                  "name": "onlyAVAXDebtHolder",
                  "nameLocations": [
                    "13149:18:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1929,
                  "src": "13149:18:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "13149:18:4"
              }
            ],
            "name": "getAVAXDebt",
            "nameLocation": "13123:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13134:2:4"
            },
            "returnParameters": {
              "id": 1880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1879,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "13177:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13177:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13176:9:4"
            },
            "scope": 1958,
            "src": "13114:124:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1898,
              "nodeType": "Block",
              "src": "13296:37:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1895,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "13321:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Lending_$1958",
                          "typeString": "contract Lending"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Lending_$1958",
                          "typeString": "contract Lending"
                        }
                      ],
                      "id": 1894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "13313:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1893,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13313:7:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13313:13:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1892,
                  "id": 1897,
                  "nodeType": "Return",
                  "src": "13306:20:4"
                }
              ]
            },
            "functionSelector": "38cc4831",
            "id": 1899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "13253:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13263:2:4"
            },
            "returnParameters": {
              "id": 1892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1891,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "13287:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13287:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13286:9:4"
            },
            "scope": 1958,
            "src": "13244:89:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1914,
              "nodeType": "Block",
              "src": "13460:101:4",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1906,
                        "name": "AVAXCUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 862,
                        "src": "13477:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1908,
                      "indexExpression": {
                        "id": 1907,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "13510:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13477:38:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 1909,
                        "name": "ETHUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "13518:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1911,
                      "indexExpression": {
                        "id": 1910,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "13549:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13518:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13477:77:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1905,
                  "id": 1913,
                  "nodeType": "Return",
                  "src": "13470:84:4"
                }
              ]
            },
            "functionSelector": "4075af22",
            "id": 1915,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalTransactionCount",
            "nameLocation": "13391:24:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1901,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "13424:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1915,
                  "src": "13416:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13416:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13415:14:4"
            },
            "returnParameters": {
              "id": 1905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1904,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1915,
                  "src": "13451:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13451:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13450:9:4"
            },
            "scope": 1958,
            "src": "13382:179:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1928,
              "nodeType": "Block",
              "src": "13597:107:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1918,
                            "name": "AVAXLoanLedger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 854,
                            "src": "13615:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1921,
                          "indexExpression": {
                            "expression": {
                              "id": 1919,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "13630:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13634:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "13630:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13615:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13644:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13615:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520616e79206f75747374616e64696e672064656274",
                        "id": 1924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13647:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
                          "typeString": "literal_string \"You do not have any outstanding debt\""
                        },
                        "value": "You do not have any outstanding debt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
                          "typeString": "literal_string \"You do not have any outstanding debt\""
                        }
                      ],
                      "id": 1917,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13607:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13607:79:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1926,
                  "nodeType": "ExpressionStatement",
                  "src": "13607:79:4"
                },
                {
                  "id": 1927,
                  "nodeType": "PlaceholderStatement",
                  "src": "13696:1:4"
                }
              ]
            },
            "id": 1929,
            "name": "onlyAVAXDebtHolder",
            "nameLocation": "13576:18:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13594:2:4"
            },
            "src": "13567:137:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1942,
              "nodeType": "Block",
              "src": "13739:102:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1932,
                            "name": "ETHLoanLedger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "13757:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1935,
                          "indexExpression": {
                            "expression": {
                              "id": 1933,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "13771:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13775:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "13771:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13757:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13785:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13757:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f742068617665206f75747374616e64696e672064656274",
                        "id": 1938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13788:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
                          "typeString": "literal_string \"You do not have outstanding debt\""
                        },
                        "value": "You do not have outstanding debt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
                          "typeString": "literal_string \"You do not have outstanding debt\""
                        }
                      ],
                      "id": 1931,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13749:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13749:74:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1940,
                  "nodeType": "ExpressionStatement",
                  "src": "13749:74:4"
                },
                {
                  "id": 1941,
                  "nodeType": "PlaceholderStatement",
                  "src": "13833:1:4"
                }
              ]
            },
            "id": 1943,
            "name": "onlyEthDebtHolder",
            "nameLocation": "13719:17:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13736:2:4"
            },
            "src": "13710:131:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1956,
              "nodeType": "Block",
              "src": "13894:54:4",
              "statements": [
                {
                  "assignments": [
                    1949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1949,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "13912:1:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1956,
                      "src": "13904:9:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1948,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13904:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1951,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 1950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13916:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13904:13:4"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "id": 1954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13934:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13938:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "13934:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    }
                  },
                  "functionReturnParameters": 1947,
                  "id": 1955,
                  "nodeType": "Return",
                  "src": "13927:14:4"
                }
              ]
            },
            "functionSelector": "19ff1d21",
            "id": 1957,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hello",
            "nameLocation": "13856:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13861:2:4"
            },
            "returnParameters": {
              "id": 1947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1946,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1957,
                  "src": "13885:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13885:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13884:9:4"
            },
            "scope": 1958,
            "src": "13847:101:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1959,
        "src": "232:13892:4",
        "usedErrors": []
      }
    ],
    "src": "32:14092:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xad7F9da259e5DDf9F75CC46CAC0870Eec1C324d6",
      "transactionHash": "0x4ac24de822ae64dd58caefcaa9a746da62463ea92f83fa7d609d2761b308c63c"
    }
  },
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-03-22T07:53:26.634Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}