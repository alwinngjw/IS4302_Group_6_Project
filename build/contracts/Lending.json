{
  "contractName": "Lending",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Avax",
          "name": "avaxTokenAddress",
          "type": "address"
        },
        {
          "internalType": "contract LiquidityPool",
          "name": "lp",
          "type": "address"
        },
        {
          "internalType": "contract Reserves",
          "name": "reservesAddress",
          "type": "address"
        },
        {
          "internalType": "contract PriceFeed",
          "name": "pf",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "depositCollateral",
          "type": "uint256"
        }
      ],
      "name": "borrowAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "repayAVAXDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "topUpCollateral",
          "type": "uint256"
        }
      ],
      "name": "topUpAVAXCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidateAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "topUpETHCollateral",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "repayEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidateETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "percentage",
          "type": "uint256"
        }
      ],
      "name": "calculatePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHoldingAVAXCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHoldingEthCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAVAXDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Avax\",\"name\":\"avaxTokenAddress\",\"type\":\"address\"},{\"internalType\":\"contract LiquidityPool\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"contract Reserves\",\"name\":\"reservesAddress\",\"type\":\"address\"},{\"internalType\":\"contract PriceFeed\",\"name\":\"pf\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"depositCollateral\",\"type\":\"uint256\"}],\"name\":\"borrowAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"calculatePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAVAXDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHoldingAVAXCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHoldingEthCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"repayAVAXDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"repayEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"topUpCollateral\",\"type\":\"uint256\"}],\"name\":\"topUpAVAXCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topUpETHCollateral\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Lending.sol\":\"Lending\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Avax.sol\":{\"keccak256\":\"0x472033df12f255a22cc0ae48f3fbf7950629eb1709bad91366c0b52f562c9242\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://007225908f66856e92f530be0638ab2b87fbcbe49df70155ff75d342c61888f8\",\"dweb:/ipfs/QmbiaN7EofBjKTvz1mAQm37pY59caMT7z4Nz8fVjojaqZE\"]},\"project:/contracts/ERC20.sol\":{\"keccak256\":\"0xfeef30ad2b2473035147ce29aedc86f3af9da74a44013bd0b232a387039ac7e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f1ceef2c3f56e2da1fa62b8ae94e8ba6cb3c184a0bc193bfa63684152cfe94d\",\"dweb:/ipfs/QmYoUkcUyb4Ze4iiK3Zx1GweZdHnaPtMK76Fxtqx9hjJR4\"]},\"project:/contracts/Lending.sol\":{\"keccak256\":\"0x267c43b6a0d832452a53be722892f921fdfe51fe9954fad1caeafe7837c509ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1356cd186c1ceee2ea9280882148457167d65d866758bf4904808970e287a84\",\"dweb:/ipfs/QmVjbDygi2pzapsYDTAV56SU5mtwcbfSHRAkXfTYonu8K1\"]},\"project:/contracts/LiquidityPool.sol\":{\"keccak256\":\"0xe5f0452d4d4b4faba67d34722f0e4df7ab7f95322f7eeeaf5c9a454479e525ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57fe115bee6769084e89e43c5a2c647cf0e5e1b57948434c2ea5ca710166bec9\",\"dweb:/ipfs/QmTgHiSL3aoCHCUw4DLTmorqvBXugeZFQXpgrAnSc1WGrG\"]},\"project:/contracts/PriceFeed.sol\":{\"keccak256\":\"0x190137437d41a4b57d199f3d03612177129834aa1705e6d8015590fbf30d23b1\",\"urls\":[\"bzz-raw://b6748338e100de69cdf82df66af5dd8fbde4d13b2f09692f9a97781d2b5f2a9a\",\"dweb:/ipfs/QmUtSeAJWosp4D2XvPfLg15VEkCa66mHAvtfqQZ8v6YHjX\"]},\"project:/contracts/Reserves.sol\":{\"keccak256\":\"0x49dc40d6b470bed4cab6d0e9a3c919a8a0041d8f32079c48a815d3a0d2925852\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b256fa555bc76bf62981a40ecd2cb472a4e30a859ae060088e94694573a0e6e7\",\"dweb:/ipfs/QmSwRRumYQuTJR9MV2B43Q61Vwg3z45tDiKxAJNQZ3cW4v\"]}},\"version\":1}",
  "bytecode": "0x60806040526121346004556101f460055533600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200005e57600080fd5b5060405162003303380380620033038339818101604052810190620000849190620002f2565b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000364565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001c38262000196565b9050919050565b6000620001d782620001b6565b9050919050565b620001e981620001ca565b8114620001f557600080fd5b50565b6000815190506200020981620001de565b92915050565b60006200021c8262000196565b9050919050565b600062000230826200020f565b9050919050565b620002428162000223565b81146200024e57600080fd5b50565b600081519050620002628162000237565b92915050565b600062000275826200020f565b9050919050565b620002878162000268565b81146200029357600080fd5b50565b600081519050620002a7816200027c565b92915050565b6000620002ba82620001b6565b9050919050565b620002cc81620002ad565b8114620002d857600080fd5b50565b600081519050620002ec81620002c1565b92915050565b600080600080608085870312156200030f576200030e62000191565b5b60006200031f87828801620001f8565b9450506020620003328782880162000251565b9350506040620003458782880162000296565b92505060606200035887828801620002db565b91505092959194509250565b612f8f80620003746000396000f3fe6080604052600436106100a75760003560e01c80634fed0518116100645780634fed05181461016a578063734997e514610188578063b60d261714610192578063b968c930146101bb578063db8bf7e6146101e4578063fcd6e191146101fb576100a7565b80632133e3b9146100ac57806323ded52a146100e95780632b0fa3991461011457806342b9309a1461011e5780634a282670146101355780634b84a6471461013f575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190612795565b610226565b6040516100e091906127e4565b60405180910390f35b3480156100f557600080fd5b506100fe610249565b60405161010b91906127e4565b60405180910390f35b61011c610311565b005b34801561012a57600080fd5b50610133610544565b005b61013d610c3a565b005b34801561014b57600080fd5b50610154611191565b60405161016191906127e4565b60405180910390f35b610172611233565b60405161017f91906127e4565b60405180910390f35b61019061154b565b005b34801561019e57600080fd5b506101b960048036038101906101b491906127ff565b611a4b565b005b3480156101c757600080fd5b506101e260048036038101906101dd91906127ff565b611d3c565b005b3480156101f057600080fd5b506101f961220b565b005b34801561020757600080fd5b50610210612752565b60405161021d91906127e4565b60405180910390f35b60006127108284610237919061285b565b61024191906128cc565b905092915050565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116102cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c390612980565b60405180910390fd5b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a906129ec565b60405180910390fd5b6000349050600081036103db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d290612a58565b60405180910390fd5b6000670de0b6b3a7640000826103f191906128cc565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a1cf9e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610462573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104869190612a8d565b82610491919061285b565b905082600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104e29190612aba565b9250508190555080600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105389190612aba565b92505081905550505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116105c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bd90612980565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106229190612b2f565b602060405180830381865afa15801561063f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106639190612a8d565b116106a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069a90612bbc565b60405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016107419190612b2f565b602060405180830381865afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107829190612a8d565b10156107c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ba90612c4e565b60405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161086493929190612c6e565b6020604051808303816000875af1158015610883573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a79190612cdd565b5060006108b682600554610226565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384866109029190612d0a565b6040518463ffffffff1660e01b815260040161092093929190612c6e565b6020604051808303816000875af115801561093f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109639190612cdd565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ad415bd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a329190612d6a565b846040518463ffffffff1660e01b8152600401610a5193929190612c6e565b6020604051808303816000875af1158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a949190612cdd565b50600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560005b600e80549050811015610c34573373ffffffffffffffffffffffffffffffffffffffff16600e8281548110610b9957610b98612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c2157600e8181548110610bf357610bf2612d97565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b8080610c2c90612dc6565b915050610b61565b50505050565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610cbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb3906129ec565b60405180910390fd5b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080341015610d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3a90612e5a565b60405180910390fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000610d9582600554610226565b905060003390508073ffffffffffffffffffffffffffffffffffffffff166108fc8385610dc29190612d0a565b9081150290604051600060405180830381858888f19350505050158015610ded573d6000803e3d6000fd5b5083471015610e31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2890612ec6565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663996e96f06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ea0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec49190612d6a565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc869081150290604051600060405180830381858888f19350505050158015610f0c573d6000803e3d6000fd5b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ad415bd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa09190612d6a565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f19350505050158015610fe8573d6000803e3d6000fd5b50600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560005b600d80549050811015611188573373ffffffffffffffffffffffffffffffffffffffff16600d82815481106110ed576110ec612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361117557600d818154811061114757611146612d97565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808061118090612dc6565b9150506110b5565b50505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111ed9190612b2f565b602060405180830381865afa15801561120a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122e9190612a8d565b905090565b6000803490506000810361127c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127390612a58565b60405180910390fd5b6000670de0b6b3a76400008261129291906128cc565b90506000600d339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a1cf9e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138a9190612a8d565b82611395919061285b565b905060006113a584600454610226565b905083600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394a54a1282336040518363ffffffff1660e01b81526004016114d0929190612f07565b600060405180830381600087803b1580156114ea57600080fd5b505af11580156114fe573d6000803e3d6000fd5b50505050600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205494505050505090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166319d747236040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115de9190612a8d565b905060005b600d80549050811015611a47576000670de0b6b3a7640000600a6000600d858154811061161357611612612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461168391906128cc565b8361168e919061285b565b9050600c6000600d84815481106116a8576116a7612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111611a33576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663996e96f06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a79190612d6a565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc600a6000600d87815481106117db576117da612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f1935050505015801561186c573d6000803e3d6000fd5b50600a6000600d858154811061188557611884612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600b6000600d858154811061190657611905612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600c6000600d858154811061198757611986612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600d8381548110611a0457611a03612d97565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505b508080611a3f90612dc6565b9150506115e3565b5050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611acd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ac490612980565b60405180910390fd5b60008103611b10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0790612a58565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401611b6a9190612b2f565b602060405180830381865afa158015611b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bab9190612a8d565b1015611bec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611be390612c4e565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663946e34726040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c7f9190612a8d565b82611c8a919061285b565b905081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611cdb9190612aba565b9250508190555080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611d319190612aba565b925050819055505050565b60008103611d7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7690612a58565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401611dd99190612b2f565b602060405180830381865afa158015611df6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1a9190612a8d565b1015611e5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e5290612c4e565b60405180910390fd5b600e339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000611ecc82600454610226565b905081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600082905080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663996e96f06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561200e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120329190612d6a565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161209193929190612c6e565b6020604051808303816000875af11580156120b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d49190612cdd565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663598c5b4284306040518363ffffffff1660e01b8152600401612132929190612f30565b600060405180830381600087803b15801561214c57600080fd5b505af1158015612160573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033866040518463ffffffff1660e01b81526004016121c193929190612c6e565b6020604051808303816000875af11580156121e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122049190612cdd565b5050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffa8ce506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561227a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229e9190612a8d565b905060005b600e8054905081101561274e57600060076000600e84815481106122ca576122c9612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361233b919061285b565b905060096000600e848154811061235557612354612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811161273a576000600e83815481106123d7576123d6612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663996e96f06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156124ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d29190612d6a565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518463ffffffff1660e01b815260040161253093929190612c6e565b6020604051808303816000875af115801561254f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125739190612cdd565b5060076000600e858154811061258c5761258b612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560086000600e858154811061260d5761260c612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560096000600e858154811061268e5761268d612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600e838154811061270b5761270a612d97565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505b50808061274690612dc6565b9150506122a3565b5050565b600047905090565b600080fd5b6000819050919050565b6127728161275f565b811461277d57600080fd5b50565b60008135905061278f81612769565b92915050565b600080604083850312156127ac576127ab61275a565b5b60006127ba85828601612780565b92505060206127cb85828601612780565b9150509250929050565b6127de8161275f565b82525050565b60006020820190506127f960008301846127d5565b92915050565b6000602082840312156128155761281461275a565b5b600061282384828501612780565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006128668261275f565b91506128718361275f565b925082820261287f8161275f565b915082820484148315176128965761289561282c565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006128d78261275f565b91506128e28361275f565b9250826128f2576128f161289d565b5b828204905092915050565b600082825260208201905092915050565b7f596f7520646f206e6f74206861766520616e79206f75747374616e64696e672060008201527f6465627400000000000000000000000000000000000000000000000000000000602082015250565b600061296a6024836128fd565b91506129758261290e565b604082019050919050565b600060208201905081810360008301526129998161295d565b9050919050565b7f596f7520646f206e6f742068617665206f75747374616e64696e672064656274600082015250565b60006129d66020836128fd565b91506129e1826129a0565b602082019050919050565b60006020820190508181036000830152612a05816129c9565b9050919050565b7f506c6561736520707574206d6f726520636f6c6c61746572616c000000000000600082015250565b6000612a42601a836128fd565b9150612a4d82612a0c565b602082019050919050565b60006020820190508181036000830152612a7181612a35565b9050919050565b600081519050612a8781612769565b92915050565b600060208284031215612aa357612aa261275a565b5b6000612ab184828501612a78565b91505092915050565b6000612ac58261275f565b9150612ad08361275f565b9250828201905080821115612ae857612ae761282c565b5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b1982612aee565b9050919050565b612b2981612b0e565b82525050565b6000602082019050612b446000830184612b20565b92915050565b7f596f7520646f206e6f74206861766520656e6f756768205553444320746f207260008201527f6570617920746869732064656274000000000000000000000000000000000000602082015250565b6000612ba6602e836128fd565b9150612bb182612b4a565b604082019050919050565b60006020820190508181036000830152612bd581612b99565b9050919050565b7f596f7520646f206e6f74206861766520656e6f756768204156415820746f6b6560008201527f6e21000000000000000000000000000000000000000000000000000000000000602082015250565b6000612c386022836128fd565b9150612c4382612bdc565b604082019050919050565b60006020820190508181036000830152612c6781612c2b565b9050919050565b6000606082019050612c836000830186612b20565b612c906020830185612b20565b612c9d60408301846127d5565b949350505050565b60008115159050919050565b612cba81612ca5565b8114612cc557600080fd5b50565b600081519050612cd781612cb1565b92915050565b600060208284031215612cf357612cf261275a565b5b6000612d0184828501612cc8565b91505092915050565b6000612d158261275f565b9150612d208361275f565b9250828203905081811115612d3857612d3761282c565b5b92915050565b612d4781612b0e565b8114612d5257600080fd5b50565b600081519050612d6481612d3e565b92915050565b600060208284031215612d8057612d7f61275a565b5b6000612d8e84828501612d55565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612dd18261275f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612e0357612e0261282c565b5b600182019050919050565b7f56616c756520696e736572746564206973206e6f7420656e6f75676800000000600082015250565b6000612e44601c836128fd565b9150612e4f82612e0e565b602082019050919050565b60006020820190508181036000830152612e7381612e37565b9050919050565b7f4552524f52000000000000000000000000000000000000000000000000000000600082015250565b6000612eb06005836128fd565b9150612ebb82612e7a565b602082019050919050565b60006020820190508181036000830152612edf81612ea3565b9050919050565b6000612ef182612aee565b9050919050565b612f0181612ee6565b82525050565b6000604082019050612f1c60008301856127d5565b612f296020830184612ef8565b9392505050565b6000604082019050612f4560008301856127d5565b612f526020830184612b20565b939250505056fea2646970667358221220fc7733fec3f5cf8e2a00f463374b4c867324d1ca04ec93e9a04f7cbf922fe46a64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c80634fed0518116100645780634fed05181461016a578063734997e514610188578063b60d261714610192578063b968c930146101bb578063db8bf7e6146101e4578063fcd6e191146101fb576100a7565b80632133e3b9146100ac57806323ded52a146100e95780632b0fa3991461011457806342b9309a1461011e5780634a282670146101355780634b84a6471461013f575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190612795565b610226565b6040516100e091906127e4565b60405180910390f35b3480156100f557600080fd5b506100fe610249565b60405161010b91906127e4565b60405180910390f35b61011c610311565b005b34801561012a57600080fd5b50610133610544565b005b61013d610c3a565b005b34801561014b57600080fd5b50610154611191565b60405161016191906127e4565b60405180910390f35b610172611233565b60405161017f91906127e4565b60405180910390f35b61019061154b565b005b34801561019e57600080fd5b506101b960048036038101906101b491906127ff565b611a4b565b005b3480156101c757600080fd5b506101e260048036038101906101dd91906127ff565b611d3c565b005b3480156101f057600080fd5b506101f961220b565b005b34801561020757600080fd5b50610210612752565b60405161021d91906127e4565b60405180910390f35b60006127108284610237919061285b565b61024191906128cc565b905092915050565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116102cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c390612980565b60405180910390fd5b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a906129ec565b60405180910390fd5b6000349050600081036103db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d290612a58565b60405180910390fd5b6000670de0b6b3a7640000826103f191906128cc565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a1cf9e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610462573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104869190612a8d565b82610491919061285b565b905082600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104e29190612aba565b9250508190555080600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105389190612aba565b92505081905550505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116105c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bd90612980565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106229190612b2f565b602060405180830381865afa15801561063f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106639190612a8d565b116106a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069a90612bbc565b60405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016107419190612b2f565b602060405180830381865afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107829190612a8d565b10156107c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ba90612c4e565b60405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161086493929190612c6e565b6020604051808303816000875af1158015610883573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a79190612cdd565b5060006108b682600554610226565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384866109029190612d0a565b6040518463ffffffff1660e01b815260040161092093929190612c6e565b6020604051808303816000875af115801561093f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109639190612cdd565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ad415bd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a329190612d6a565b846040518463ffffffff1660e01b8152600401610a5193929190612c6e565b6020604051808303816000875af1158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a949190612cdd565b50600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560005b600e80549050811015610c34573373ffffffffffffffffffffffffffffffffffffffff16600e8281548110610b9957610b98612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c2157600e8181548110610bf357610bf2612d97565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b8080610c2c90612dc6565b915050610b61565b50505050565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610cbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb3906129ec565b60405180910390fd5b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080341015610d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3a90612e5a565b60405180910390fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000610d9582600554610226565b905060003390508073ffffffffffffffffffffffffffffffffffffffff166108fc8385610dc29190612d0a565b9081150290604051600060405180830381858888f19350505050158015610ded573d6000803e3d6000fd5b5083471015610e31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2890612ec6565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663996e96f06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ea0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec49190612d6a565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc869081150290604051600060405180830381858888f19350505050158015610f0c573d6000803e3d6000fd5b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ad415bd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa09190612d6a565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f19350505050158015610fe8573d6000803e3d6000fd5b50600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560005b600d80549050811015611188573373ffffffffffffffffffffffffffffffffffffffff16600d82815481106110ed576110ec612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361117557600d818154811061114757611146612d97565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808061118090612dc6565b9150506110b5565b50505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111ed9190612b2f565b602060405180830381865afa15801561120a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122e9190612a8d565b905090565b6000803490506000810361127c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127390612a58565b60405180910390fd5b6000670de0b6b3a76400008261129291906128cc565b90506000600d339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307a1cf9e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138a9190612a8d565b82611395919061285b565b905060006113a584600454610226565b905083600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394a54a1282336040518363ffffffff1660e01b81526004016114d0929190612f07565b600060405180830381600087803b1580156114ea57600080fd5b505af11580156114fe573d6000803e3d6000fd5b50505050600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205494505050505090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166319d747236040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115de9190612a8d565b905060005b600d80549050811015611a47576000670de0b6b3a7640000600a6000600d858154811061161357611612612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461168391906128cc565b8361168e919061285b565b9050600c6000600d84815481106116a8576116a7612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111611a33576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663996e96f06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a79190612d6a565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc600a6000600d87815481106117db576117da612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f1935050505015801561186c573d6000803e3d6000fd5b50600a6000600d858154811061188557611884612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600b6000600d858154811061190657611905612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600c6000600d858154811061198757611986612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600d8381548110611a0457611a03612d97565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505b508080611a3f90612dc6565b9150506115e3565b5050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611acd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ac490612980565b60405180910390fd5b60008103611b10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0790612a58565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401611b6a9190612b2f565b602060405180830381865afa158015611b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bab9190612a8d565b1015611bec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611be390612c4e565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663946e34726040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c7f9190612a8d565b82611c8a919061285b565b905081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611cdb9190612aba565b9250508190555080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611d319190612aba565b925050819055505050565b60008103611d7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7690612a58565b60405180910390fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401611dd99190612b2f565b602060405180830381865afa158015611df6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1a9190612a8d565b1015611e5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e5290612c4e565b60405180910390fd5b600e339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000611ecc82600454610226565b905081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600082905080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663996e96f06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561200e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120329190612d6a565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161209193929190612c6e565b6020604051808303816000875af11580156120b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d49190612cdd565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663598c5b4284306040518363ffffffff1660e01b8152600401612132929190612f30565b600060405180830381600087803b15801561214c57600080fd5b505af1158015612160573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033866040518463ffffffff1660e01b81526004016121c193929190612c6e565b6020604051808303816000875af11580156121e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122049190612cdd565b5050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffa8ce506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561227a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229e9190612a8d565b905060005b600e8054905081101561274e57600060076000600e84815481106122ca576122c9612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361233b919061285b565b905060096000600e848154811061235557612354612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811161273a576000600e83815481106123d7576123d6612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663996e96f06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156124ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d29190612d6a565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518463ffffffff1660e01b815260040161253093929190612c6e565b6020604051808303816000875af115801561254f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125739190612cdd565b5060076000600e858154811061258c5761258b612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560086000600e858154811061260d5761260c612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560096000600e858154811061268e5761268d612d97565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600e838154811061270b5761270a612d97565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505b50808061274690612dc6565b9150506122a3565b5050565b600047905090565b600080fd5b6000819050919050565b6127728161275f565b811461277d57600080fd5b50565b60008135905061278f81612769565b92915050565b600080604083850312156127ac576127ab61275a565b5b60006127ba85828601612780565b92505060206127cb85828601612780565b9150509250929050565b6127de8161275f565b82525050565b60006020820190506127f960008301846127d5565b92915050565b6000602082840312156128155761281461275a565b5b600061282384828501612780565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006128668261275f565b91506128718361275f565b925082820261287f8161275f565b915082820484148315176128965761289561282c565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006128d78261275f565b91506128e28361275f565b9250826128f2576128f161289d565b5b828204905092915050565b600082825260208201905092915050565b7f596f7520646f206e6f74206861766520616e79206f75747374616e64696e672060008201527f6465627400000000000000000000000000000000000000000000000000000000602082015250565b600061296a6024836128fd565b91506129758261290e565b604082019050919050565b600060208201905081810360008301526129998161295d565b9050919050565b7f596f7520646f206e6f742068617665206f75747374616e64696e672064656274600082015250565b60006129d66020836128fd565b91506129e1826129a0565b602082019050919050565b60006020820190508181036000830152612a05816129c9565b9050919050565b7f506c6561736520707574206d6f726520636f6c6c61746572616c000000000000600082015250565b6000612a42601a836128fd565b9150612a4d82612a0c565b602082019050919050565b60006020820190508181036000830152612a7181612a35565b9050919050565b600081519050612a8781612769565b92915050565b600060208284031215612aa357612aa261275a565b5b6000612ab184828501612a78565b91505092915050565b6000612ac58261275f565b9150612ad08361275f565b9250828201905080821115612ae857612ae761282c565b5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b1982612aee565b9050919050565b612b2981612b0e565b82525050565b6000602082019050612b446000830184612b20565b92915050565b7f596f7520646f206e6f74206861766520656e6f756768205553444320746f207260008201527f6570617920746869732064656274000000000000000000000000000000000000602082015250565b6000612ba6602e836128fd565b9150612bb182612b4a565b604082019050919050565b60006020820190508181036000830152612bd581612b99565b9050919050565b7f596f7520646f206e6f74206861766520656e6f756768204156415820746f6b6560008201527f6e21000000000000000000000000000000000000000000000000000000000000602082015250565b6000612c386022836128fd565b9150612c4382612bdc565b604082019050919050565b60006020820190508181036000830152612c6781612c2b565b9050919050565b6000606082019050612c836000830186612b20565b612c906020830185612b20565b612c9d60408301846127d5565b949350505050565b60008115159050919050565b612cba81612ca5565b8114612cc557600080fd5b50565b600081519050612cd781612cb1565b92915050565b600060208284031215612cf357612cf261275a565b5b6000612d0184828501612cc8565b91505092915050565b6000612d158261275f565b9150612d208361275f565b9250828203905081811115612d3857612d3761282c565b5b92915050565b612d4781612b0e565b8114612d5257600080fd5b50565b600081519050612d6481612d3e565b92915050565b600060208284031215612d8057612d7f61275a565b5b6000612d8e84828501612d55565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612dd18261275f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612e0357612e0261282c565b5b600182019050919050565b7f56616c756520696e736572746564206973206e6f7420656e6f75676800000000600082015250565b6000612e44601c836128fd565b9150612e4f82612e0e565b602082019050919050565b60006020820190508181036000830152612e7381612e37565b9050919050565b7f4552524f52000000000000000000000000000000000000000000000000000000600082015250565b6000612eb06005836128fd565b9150612ebb82612e7a565b602082019050919050565b60006020820190508181036000830152612edf81612ea3565b9050919050565b6000612ef182612aee565b9050919050565b612f0181612ee6565b82525050565b6000604082019050612f1c60008301856127d5565b612f296020830184612ef8565b9392505050565b6000604082019050612f4560008301856127d5565b612f526020830184612b20565b939250505056fea2646970667358221220fc7733fec3f5cf8e2a00f463374b4c867324d1ca04ec93e9a04f7cbf922fe46a64736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3516:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:12",
                "type": ""
              }
            ],
            "src": "7:75:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:12"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:12"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:12",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:12",
                "type": ""
              }
            ],
            "src": "334:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:12",
                "type": ""
              }
            ],
            "src": "466:96:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "625:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "635:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "664:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "646:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "646:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "635:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Avax_$106",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "607:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "617:7:12",
                "type": ""
              }
            ],
            "src": "568:108:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "737:91:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "806:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "815:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "818:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "808:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "808:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "808:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "760:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "797:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Avax_$106",
                              "nodeType": "YulIdentifier",
                              "src": "767:29:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "767:36:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "757:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "757:47:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "750:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "750:55:12"
                  },
                  "nodeType": "YulIf",
                  "src": "747:75:12"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Avax_$106",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "730:5:12",
                "type": ""
              }
            ],
            "src": "682:146:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "909:92:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "919:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "934:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "928:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "928:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "919:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "989:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Avax_$106",
                      "nodeType": "YulIdentifier",
                      "src": "950:38:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "950:45:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "950:45:12"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Avax_$106_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "887:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "895:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "903:5:12",
                "type": ""
              }
            ],
            "src": "834:167:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1060:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1070:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1099:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1081:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1081:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1070:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1042:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1052:7:12",
                "type": ""
              }
            ],
            "src": "1007:104:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1184:59:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1194:43:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1231:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "1205:25:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1205:32:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1194:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_LiquidityPool_$2048",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1166:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1176:7:12",
                "type": ""
              }
            ],
            "src": "1117:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1314:101:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1393:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1402:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1405:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1395:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1395:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1395:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1337:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1384:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_LiquidityPool_$2048",
                              "nodeType": "YulIdentifier",
                              "src": "1344:39:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1344:46:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1334:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1334:57:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1327:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1327:65:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1324:85:12"
                }
              ]
            },
            "name": "validator_revert_t_contract$_LiquidityPool_$2048",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1307:5:12",
                "type": ""
              }
            ],
            "src": "1249:166:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1506:102:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1516:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1531:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1525:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1525:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1516:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1596:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_LiquidityPool_$2048",
                      "nodeType": "YulIdentifier",
                      "src": "1547:48:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1547:55:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1547:55:12"
                }
              ]
            },
            "name": "abi_decode_t_contract$_LiquidityPool_$2048_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1484:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1492:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1500:5:12",
                "type": ""
              }
            ],
            "src": "1421:187:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1676:59:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1686:43:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1723:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "1697:25:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1697:32:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1686:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Reserves_$2402",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1658:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1668:7:12",
                "type": ""
              }
            ],
            "src": "1614:121:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1801:96:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1875:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1884:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1887:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1877:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1877:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1877:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1824:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1866:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Reserves_$2402",
                              "nodeType": "YulIdentifier",
                              "src": "1831:34:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1831:41:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1821:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1821:52:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1814:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1814:60:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1811:80:12"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Reserves_$2402",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1794:5:12",
                "type": ""
              }
            ],
            "src": "1741:156:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1983:97:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1993:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2008:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2002:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2002:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1993:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2068:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Reserves_$2402",
                      "nodeType": "YulIdentifier",
                      "src": "2024:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2024:50:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2024:50:12"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Reserves_$2402_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1961:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1969:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1977:5:12",
                "type": ""
              }
            ],
            "src": "1903:177:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2149:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2159:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2188:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2170:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2170:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2159:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_PriceFeed_$2174",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2131:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2141:7:12",
                "type": ""
              }
            ],
            "src": "2086:114:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2267:97:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2342:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2351:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2354:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2344:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2344:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2344:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2290:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2333:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_PriceFeed_$2174",
                              "nodeType": "YulIdentifier",
                              "src": "2297:35:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2297:42:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2287:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2287:53:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2280:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2280:61:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2277:81:12"
                }
              ]
            },
            "name": "validator_revert_t_contract$_PriceFeed_$2174",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2260:5:12",
                "type": ""
              }
            ],
            "src": "2206:158:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2451:98:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2461:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2476:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2470:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2470:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2461:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2537:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_PriceFeed_$2174",
                      "nodeType": "YulIdentifier",
                      "src": "2492:44:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2492:51:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2492:51:12"
                }
              ]
            },
            "name": "abi_decode_t_contract$_PriceFeed_$2174_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2429:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2437:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2445:5:12",
                "type": ""
              }
            ],
            "src": "2370:179:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2752:761:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2799:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2801:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2801:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2801:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2773:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2782:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2769:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2769:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2794:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2765:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2765:33:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2762:120:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2892:140:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2907:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2921:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2911:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2936:86:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2994:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3005:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2990:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2990:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3014:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Avax_$106_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2946:43:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2946:76:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2936:6:12"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3042:151:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3057:16:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3071:2:12",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3061:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3087:96:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3155:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3166:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3151:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3151:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3175:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_LiquidityPool_$2048_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3097:53:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3097:86:12"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3087:6:12"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3203:146:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3218:16:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3232:2:12",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3222:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3248:91:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3311:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3322:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3307:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3307:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3331:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Reserves_$2402_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3258:48:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3258:81:12"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3248:6:12"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3359:147:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3374:16:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3388:2:12",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3378:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3404:92:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3468:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3479:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3464:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3464:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3488:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PriceFeed_$2174_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3414:49:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3414:82:12"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3404:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Avax_$106t_contract$_LiquidityPool_$2048t_contract$_Reserves_$2402t_contract$_PriceFeed_$2174_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2698:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2709:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2721:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2729:6:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2737:6:12",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2745:6:12",
                "type": ""
              }
            ],
            "src": "2555:958:12"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Avax_$106(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_Avax_$106(value) {\n        if iszero(eq(value, cleanup_t_contract$_Avax_$106(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Avax_$106_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Avax_$106(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_LiquidityPool_$2048(value) -> cleaned {\n        cleaned := cleanup_t_address_payable(value)\n    }\n\n    function validator_revert_t_contract$_LiquidityPool_$2048(value) {\n        if iszero(eq(value, cleanup_t_contract$_LiquidityPool_$2048(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_LiquidityPool_$2048_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_LiquidityPool_$2048(value)\n    }\n\n    function cleanup_t_contract$_Reserves_$2402(value) -> cleaned {\n        cleaned := cleanup_t_address_payable(value)\n    }\n\n    function validator_revert_t_contract$_Reserves_$2402(value) {\n        if iszero(eq(value, cleanup_t_contract$_Reserves_$2402(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Reserves_$2402_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Reserves_$2402(value)\n    }\n\n    function cleanup_t_contract$_PriceFeed_$2174(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_PriceFeed_$2174(value) {\n        if iszero(eq(value, cleanup_t_contract$_PriceFeed_$2174(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_PriceFeed_$2174_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_PriceFeed_$2174(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Avax_$106t_contract$_LiquidityPool_$2048t_contract$_Reserves_$2402t_contract$_PriceFeed_$2174_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Avax_$106_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_LiquidityPool_$2048_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_Reserves_$2402_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_contract$_PriceFeed_$2174_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14670:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:12",
                "type": ""
              }
            ],
            "src": "7:75:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:12"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:12"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:12",
                "type": ""
              }
            ],
            "src": "334:77:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:12"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:12"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:12",
                "type": ""
              }
            ],
            "src": "417:122:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:12"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:12",
                "type": ""
              }
            ],
            "src": "545:139:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "773:391:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "819:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "821:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "821:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "821:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "794:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "803:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "790:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "790:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "815:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "786:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "786:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "783:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "912:117:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "927:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "941:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "931:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "956:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "991:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1002:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "987:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "987:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1011:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "966:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "966:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "956:6:12"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1039:118:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1054:16:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1068:2:12",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1058:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1084:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1119:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1130:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1115:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1115:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1139:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1094:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1094:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1084:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "735:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "746:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "758:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "766:6:12",
                "type": ""
              }
            ],
            "src": "690:474:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1235:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1252:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1275:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1257:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1257:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1245:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1245:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1245:37:12"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1223:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1230:3:12",
                "type": ""
              }
            ],
            "src": "1170:118:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1392:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1402:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1414:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1425:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1410:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1410:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1402:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1482:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1495:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1506:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1491:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1491:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1438:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1438:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1438:71:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1364:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1376:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1387:4:12",
                "type": ""
              }
            ],
            "src": "1294:222:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1588:263:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1634:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1636:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1636:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1636:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1609:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1618:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1605:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1605:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1630:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1601:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1601:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1598:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1727:117:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1742:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1756:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1746:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1771:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1806:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1817:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1802:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1802:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1826:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1781:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1781:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1771:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1558:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1569:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1581:6:12",
                "type": ""
              }
            ],
            "src": "1522:329:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1885:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1902:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1905:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1895:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1895:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1895:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1999:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2002:4:12",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1992:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1992:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1992:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2023:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2026:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2016:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2016:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2016:15:12"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "1857:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2091:362:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2101:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2124:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2106:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2106:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "2101:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2135:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2158:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2140:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2140:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "2135:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2169:28:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2192:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2195:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2188:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2188:9:12"
                  },
                  "variables": [
                    {
                      "name": "product_raw",
                      "nodeType": "YulTypedName",
                      "src": "2173:11:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2206:41:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "product_raw",
                        "nodeType": "YulIdentifier",
                        "src": "2235:11:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2217:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2217:30:12"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "2206:7:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2424:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2426:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2426:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2426:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2357:1:12"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2350:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2350:9:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "2380:1:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "2387:7:12"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2396:1:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "2383:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2383:15:12"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "2377:2:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2377:22:12"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "2330:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2330:83:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2310:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2310:113:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2307:139:12"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2074:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2077:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "2083:7:12",
                "type": ""
              }
            ],
            "src": "2043:410:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2487:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2504:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2507:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2497:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2497:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2497:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2601:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2604:4:12",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2594:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2594:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2594:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2625:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2628:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2618:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2618:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2618:15:12"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "2459:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2687:143:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2697:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2720:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2702:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2702:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "2697:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2731:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2754:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2736:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2736:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "2731:1:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2778:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "2780:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2780:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2780:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2775:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2768:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2768:9:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2765:35:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2810:14:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2819:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2822:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2815:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2815:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "2810:1:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2676:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2679:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "2685:1:12",
                "type": ""
              }
            ],
            "src": "2645:185:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2932:73:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2949:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2954:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2942:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2942:19:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2942:19:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2970:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2989:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2994:4:12",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2985:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2985:14:12"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2970:11:12"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2904:3:12",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2909:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2920:11:12",
                "type": ""
              }
            ],
            "src": "2836:169:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3117:117:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3139:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3147:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3135:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3135:14:12"
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520616e79206f75747374616e64696e6720",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3151:34:12",
                        "type": "",
                        "value": "You do not have any outstanding "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3128:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3128:58:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3128:58:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3207:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3215:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3203:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3203:15:12"
                      },
                      {
                        "hexValue": "64656274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3220:6:12",
                        "type": "",
                        "value": "debt"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3196:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3196:31:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3196:31:12"
                }
              ]
            },
            "name": "store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3109:6:12",
                "type": ""
              }
            ],
            "src": "3011:223:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3386:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3396:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3462:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3467:2:12",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3403:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3403:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3396:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3568:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
                      "nodeType": "YulIdentifier",
                      "src": "3479:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3479:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3479:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3581:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3592:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3597:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3588:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3588:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3581:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3374:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3382:3:12",
                "type": ""
              }
            ],
            "src": "3240:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3783:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3793:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3805:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3816:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3801:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3801:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3793:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3840:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3851:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3836:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3836:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3859:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3865:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3855:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3855:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3829:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3829:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3829:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3885:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4019:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3893:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3893:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3885:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3763:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3778:4:12",
                "type": ""
              }
            ],
            "src": "3612:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4143:76:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4165:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4173:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4161:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4161:14:12"
                      },
                      {
                        "hexValue": "596f7520646f206e6f742068617665206f75747374616e64696e672064656274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4177:34:12",
                        "type": "",
                        "value": "You do not have outstanding debt"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4154:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4154:58:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4154:58:12"
                }
              ]
            },
            "name": "store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4135:6:12",
                "type": ""
              }
            ],
            "src": "4037:182:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4371:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4381:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4447:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4452:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4388:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4388:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4381:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4553:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
                      "nodeType": "YulIdentifier",
                      "src": "4464:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4464:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4464:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4566:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4577:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4582:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4573:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4573:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4566:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4359:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4367:3:12",
                "type": ""
              }
            ],
            "src": "4225:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4768:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4778:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4790:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4801:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4786:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4786:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4778:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4825:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4836:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4821:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4821:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4844:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4850:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4840:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4840:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4814:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4814:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4814:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4870:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5004:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4878:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4878:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4870:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4748:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4763:4:12",
                "type": ""
              }
            ],
            "src": "4597:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5128:70:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5150:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5158:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5146:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5146:14:12"
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5162:28:12",
                        "type": "",
                        "value": "Please put more collateral"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5139:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5139:52:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5139:52:12"
                }
              ]
            },
            "name": "store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5120:6:12",
                "type": ""
              }
            ],
            "src": "5022:176:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5350:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5360:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5426:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5431:2:12",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5367:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5367:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5360:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5532:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                      "nodeType": "YulIdentifier",
                      "src": "5443:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5443:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5443:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5545:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5556:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5561:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5552:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5552:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5545:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5338:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5346:3:12",
                "type": ""
              }
            ],
            "src": "5204:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5747:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5757:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5769:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5780:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5765:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5765:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5757:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5804:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5815:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5800:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5800:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5823:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5829:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5819:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5819:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5793:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5793:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5793:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5849:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5983:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5857:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5857:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5849:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5727:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5742:4:12",
                "type": ""
              }
            ],
            "src": "5576:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6064:80:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6074:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6089:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6083:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6083:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6074:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6132:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6105:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6105:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6105:33:12"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6042:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6050:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6058:5:12",
                "type": ""
              }
            ],
            "src": "6001:143:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6227:274:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6273:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6275:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6275:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6275:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6248:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6257:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6244:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6244:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6269:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6240:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6240:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "6237:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6366:128:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6381:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6395:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6385:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6410:74:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6456:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6467:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6452:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6452:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6476:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "6420:31:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6420:64:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6410:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6197:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6208:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6220:6:12",
                "type": ""
              }
            ],
            "src": "6150:351:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6551:147:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6561:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6584:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6566:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6566:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6561:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6595:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6618:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6600:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6600:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6595:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6629:16:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6640:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6643:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6636:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6636:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6629:3:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6669:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6671:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6671:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6671:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6661:1:12"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "6664:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6658:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6658:10:12"
                  },
                  "nodeType": "YulIf",
                  "src": "6655:36:12"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6538:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6541:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6547:3:12",
                "type": ""
              }
            ],
            "src": "6507:191:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6749:81:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6759:65:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6774:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6781:42:12",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6770:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6770:54:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6759:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6731:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6741:7:12",
                "type": ""
              }
            ],
            "src": "6704:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6881:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6891:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6920:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6902:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6902:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6891:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6863:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6873:7:12",
                "type": ""
              }
            ],
            "src": "6836:96:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7003:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7020:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7043:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7025:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7025:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7013:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7013:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7013:37:12"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6991:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6998:3:12",
                "type": ""
              }
            ],
            "src": "6938:118:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7160:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7170:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7182:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7193:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7178:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7178:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7170:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7250:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7263:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7274:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7259:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7259:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7206:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7206:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7206:71:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7132:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7144:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7155:4:12",
                "type": ""
              }
            ],
            "src": "7062:222:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7396:127:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7418:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7426:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7414:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7414:14:12"
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768205553444320746f2072",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7430:34:12",
                        "type": "",
                        "value": "You do not have enough USDC to r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7407:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7407:58:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7407:58:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7486:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7494:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7482:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7482:15:12"
                      },
                      {
                        "hexValue": "6570617920746869732064656274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7499:16:12",
                        "type": "",
                        "value": "epay this debt"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7475:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7475:41:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7475:41:12"
                }
              ]
            },
            "name": "store_literal_in_memory_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7388:6:12",
                "type": ""
              }
            ],
            "src": "7290:233:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7675:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7685:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7751:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7756:2:12",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7692:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7692:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7685:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7857:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8",
                      "nodeType": "YulIdentifier",
                      "src": "7768:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7768:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7768:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7870:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7881:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7886:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7877:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7877:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7870:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7663:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7671:3:12",
                "type": ""
              }
            ],
            "src": "7529:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8072:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8082:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8094:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8105:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8090:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8090:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8082:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8129:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8140:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8125:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8125:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8148:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8154:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8144:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8144:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8118:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8118:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8118:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8174:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8308:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8182:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8182:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8174:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8052:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8067:4:12",
                "type": ""
              }
            ],
            "src": "7901:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8432:115:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8454:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8462:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8450:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8450:14:12"
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8466:34:12",
                        "type": "",
                        "value": "You do not have enough AVAX toke"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8443:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8443:58:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8443:58:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8522:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8530:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8518:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8518:15:12"
                      },
                      {
                        "hexValue": "6e21",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8535:4:12",
                        "type": "",
                        "value": "n!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8511:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8511:29:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8511:29:12"
                }
              ]
            },
            "name": "store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8424:6:12",
                "type": ""
              }
            ],
            "src": "8326:221:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8699:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8709:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8775:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8780:2:12",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8716:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8716:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8709:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8881:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                      "nodeType": "YulIdentifier",
                      "src": "8792:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8792:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8792:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8894:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8905:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8910:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8901:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8901:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8894:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8687:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8695:3:12",
                "type": ""
              }
            ],
            "src": "8553:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9096:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9106:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9118:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9129:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9114:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9114:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9106:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9153:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9164:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9149:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9149:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9172:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9178:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9168:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9168:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9142:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9142:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9142:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9198:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9332:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9206:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9206:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9198:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9076:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9091:4:12",
                "type": ""
              }
            ],
            "src": "8925:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9504:288:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9514:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9526:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9537:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9522:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9522:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9514:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9594:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9607:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9618:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9603:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9603:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9550:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9550:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9550:71:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9675:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9688:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9699:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9684:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9684:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9631:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9631:72:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9631:72:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9757:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9770:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9781:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9766:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9766:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9713:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9713:72:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9713:72:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9460:9:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9472:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9480:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9488:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9499:4:12",
                "type": ""
              }
            ],
            "src": "9350:442:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9840:48:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9850:32:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9875:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9868:6:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9868:13:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9861:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9861:21:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9850:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9822:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9832:7:12",
                "type": ""
              }
            ],
            "src": "9798:90:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9934:76:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9988:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9997:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10000:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9990:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9990:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9990:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9957:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9979:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "9964:14:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9964:21:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9954:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9954:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9947:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9947:40:12"
                  },
                  "nodeType": "YulIf",
                  "src": "9944:60:12"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9927:5:12",
                "type": ""
              }
            ],
            "src": "9894:116:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10076:77:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10086:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10101:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10095:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10095:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "10086:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10141:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "10117:23:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10117:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10117:30:12"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "10054:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10062:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10070:5:12",
                "type": ""
              }
            ],
            "src": "10016:137:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10233:271:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10279:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "10281:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10281:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10281:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10254:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10263:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10250:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10250:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10275:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10246:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10246:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "10243:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10372:125:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10387:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10401:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10391:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10416:71:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10459:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10470:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10455:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10455:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10479:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10426:28:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10426:61:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10416:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10203:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10214:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10226:6:12",
                "type": ""
              }
            ],
            "src": "10159:345:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10555:149:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10565:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10588:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10570:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10570:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10565:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10599:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10622:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10604:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10604:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10599:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10633:17:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10645:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10648:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10641:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10641:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "10633:4:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10675:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10677:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10677:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10677:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "10666:4:12"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10672:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10663:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10663:11:12"
                  },
                  "nodeType": "YulIf",
                  "src": "10660:37:12"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10541:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10544:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "10550:4:12",
                "type": ""
              }
            ],
            "src": "10510:194:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10753:79:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10810:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10819:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10822:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10812:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10812:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10812:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10776:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10801:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "10783:17:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10783:24:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10773:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10773:35:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10766:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10766:43:12"
                  },
                  "nodeType": "YulIf",
                  "src": "10763:63:12"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10746:5:12",
                "type": ""
              }
            ],
            "src": "10710:122:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10901:80:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10911:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10926:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10920:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10920:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "10911:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10969:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "10942:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10942:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10942:33:12"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "10879:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10887:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10895:5:12",
                "type": ""
              }
            ],
            "src": "10838:143:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11064:274:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11110:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "11112:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11112:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11112:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11085:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11094:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11081:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11081:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11106:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11077:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11077:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "11074:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11203:128:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11218:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11232:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "11222:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11247:74:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11293:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11304:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11289:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11289:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11313:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "11257:31:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11257:64:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "11247:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11034:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11045:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11057:6:12",
                "type": ""
              }
            ],
            "src": "10987:351:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11372:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11389:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11392:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11382:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11382:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11382:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11486:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11489:4:12",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11479:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11479:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11479:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11510:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11513:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11503:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11503:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11503:15:12"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "11344:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11573:190:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11583:33:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11610:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11592:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11592:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11583:5:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11706:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11708:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11708:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11708:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11631:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11638:66:12",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "11628:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11628:77:12"
                  },
                  "nodeType": "YulIf",
                  "src": "11625:103:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11737:20:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11748:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11755:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11744:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11744:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "11737:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11559:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "11569:3:12",
                "type": ""
              }
            ],
            "src": "11530:233:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11875:72:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11897:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11905:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11893:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11893:14:12"
                      },
                      {
                        "hexValue": "56616c756520696e736572746564206973206e6f7420656e6f756768",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11909:30:12",
                        "type": "",
                        "value": "Value inserted is not enough"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11886:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11886:54:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11886:54:12"
                }
              ]
            },
            "name": "store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11867:6:12",
                "type": ""
              }
            ],
            "src": "11769:178:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12099:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12109:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12175:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12180:2:12",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12116:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12116:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12109:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12281:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
                      "nodeType": "YulIdentifier",
                      "src": "12192:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12192:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12192:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12294:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12305:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12310:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12301:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12301:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12294:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12087:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12095:3:12",
                "type": ""
              }
            ],
            "src": "11953:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12496:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12506:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12518:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12529:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12514:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12514:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12506:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12553:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12564:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12549:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12549:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12572:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12578:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12568:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12568:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12542:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12542:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12542:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12598:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12732:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12606:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12606:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12598:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12476:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12491:4:12",
                "type": ""
              }
            ],
            "src": "12325:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12856:49:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12878:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12886:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12874:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12874:14:12"
                      },
                      {
                        "hexValue": "4552524f52",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12890:7:12",
                        "type": "",
                        "value": "ERROR"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12867:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12867:31:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12867:31:12"
                }
              ]
            },
            "name": "store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12848:6:12",
                "type": ""
              }
            ],
            "src": "12750:155:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13057:219:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13067:73:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13133:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13138:1:12",
                        "type": "",
                        "value": "5"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13074:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13074:66:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13067:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13238:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
                      "nodeType": "YulIdentifier",
                      "src": "13149:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13149:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13149:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13251:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13262:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13267:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13258:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13258:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13251:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13045:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13053:3:12",
                "type": ""
              }
            ],
            "src": "12911:365:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13453:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13463:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13475:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13486:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13471:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13471:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13463:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13510:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13521:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13506:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13506:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13529:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13535:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13525:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13525:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13499:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13499:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13499:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13555:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13689:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13563:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13563:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13555:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13433:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13448:4:12",
                "type": ""
              }
            ],
            "src": "13282:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13760:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13770:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13799:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "13781:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13781:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13770:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13742:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13752:7:12",
                "type": ""
              }
            ],
            "src": "13707:104:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13898:61:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13915:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13946:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "13920:25:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13920:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13908:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13908:45:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13908:45:12"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13886:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13893:3:12",
                "type": ""
              }
            ],
            "src": "13817:142:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14107:222:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14117:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14129:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14140:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14125:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14125:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14117:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14197:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14210:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14221:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14206:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14206:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14153:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14153:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14153:71:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14294:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14307:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14318:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14303:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14303:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14234:59:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14234:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14234:88:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14071:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14083:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14091:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14102:4:12",
                "type": ""
              }
            ],
            "src": "13965:364:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14461:206:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14471:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14483:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14494:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14479:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14479:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14471:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14551:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14564:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14575:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14560:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14560:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14507:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14507:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14507:71:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14632:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14645:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14656:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14641:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14641:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14588:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14588:72:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14588:72:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14425:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14437:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14445:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14456:4:12",
                "type": ""
              }
            ],
            "src": "14335:332:12"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have any outstanding \")\n\n        mstore(add(memPtr, 32), \"debt\")\n\n    }\n\n    function abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have outstanding debt\")\n\n    }\n\n    function abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please put more collateral\")\n\n    }\n\n    function abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have enough USDC to r\")\n\n        mstore(add(memPtr, 32), \"epay this debt\")\n\n    }\n\n    function abi_encode_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have enough AVAX toke\")\n\n        mstore(add(memPtr, 32), \"n!\")\n\n    }\n\n    function abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Value inserted is not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR\")\n\n    }\n\n    function abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n        store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address_payable__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "181:10396:4:-:0;;;341:4;305:40;;393:3;371:25;;448:10;427:31;;;;;;;;;;;;;;;;;;;;953:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1069:16;1057:9;;:28;;;;;;;;;;;;;;;;;;1111:2;1095:13;;:18;;;;;;;;;;;;;;;;;;1134:15;1123:8;;:26;;;;;;;;;;;;;;;;;;1171:2;1159:9;;:14;;;;;;;;;;;;;;;;;;953:227;;;;181:10396;;88:117:12;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:108::-;617:7;646:24;664:5;646:24;:::i;:::-;635:35;;568:108;;;:::o;682:146::-;767:36;797:5;767:36;:::i;:::-;760:5;757:47;747:75;;818:1;815;808:12;747:75;682:146;:::o;834:167::-;903:5;934:6;928:13;919:22;;950:45;989:5;950:45;:::i;:::-;834:167;;;;:::o;1007:104::-;1052:7;1081:24;1099:5;1081:24;:::i;:::-;1070:35;;1007:104;;;:::o;1117:126::-;1176:7;1205:32;1231:5;1205:32;:::i;:::-;1194:43;;1117:126;;;:::o;1249:166::-;1344:46;1384:5;1344:46;:::i;:::-;1337:5;1334:57;1324:85;;1405:1;1402;1395:12;1324:85;1249:166;:::o;1421:187::-;1500:5;1531:6;1525:13;1516:22;;1547:55;1596:5;1547:55;:::i;:::-;1421:187;;;;:::o;1614:121::-;1668:7;1697:32;1723:5;1697:32;:::i;:::-;1686:43;;1614:121;;;:::o;1741:156::-;1831:41;1866:5;1831:41;:::i;:::-;1824:5;1821:52;1811:80;;1887:1;1884;1877:12;1811:80;1741:156;:::o;1903:177::-;1977:5;2008:6;2002:13;1993:22;;2024:50;2068:5;2024:50;:::i;:::-;1903:177;;;;:::o;2086:114::-;2141:7;2170:24;2188:5;2170:24;:::i;:::-;2159:35;;2086:114;;;:::o;2206:158::-;2297:42;2333:5;2297:42;:::i;:::-;2290:5;2287:53;2277:81;;2354:1;2351;2344:12;2277:81;2206:158;:::o;2370:179::-;2445:5;2476:6;2470:13;2461:22;;2492:51;2537:5;2492:51;:::i;:::-;2370:179;;;;:::o;2555:958::-;2721:6;2729;2737;2745;2794:3;2782:9;2773:7;2769:23;2765:33;2762:120;;;2801:79;;:::i;:::-;2762:120;2921:1;2946:76;3014:7;3005:6;2994:9;2990:22;2946:76;:::i;:::-;2936:86;;2892:140;3071:2;3097:86;3175:7;3166:6;3155:9;3151:22;3097:86;:::i;:::-;3087:96;;3042:151;3232:2;3258:81;3331:7;3322:6;3311:9;3307:22;3258:81;:::i;:::-;3248:91;;3203:146;3388:2;3414:82;3488:7;3479:6;3468:9;3464:22;3414:82;:::i;:::-;3404:92;;3359:147;2555:958;;;;;;;:::o;181:10396:4:-;;;;;;;",
  "deployedSourceMap": "181:10396:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9515:169;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10008:124;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6262:530;;;:::i;:::-;;2326:1415;;;;;;;;;;;;;:::i;:::-;;6803:1509;;;:::i;:::-;;9690:124;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5376:880;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8329:957;;;:::i;:::-;;3747:539;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1222:1098;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4293:1040;;;;;;;;;;;;;:::i;:::-;;9820:110;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9515:169;9611:7;9671:6;9657:10;9638:16;:29;;;;:::i;:::-;9637:40;;;;:::i;:::-;9630:47;;9515:169;;;;:::o;10008:124::-;10071:7;10215:1;10186:14;:26;10201:10;10186:26;;;;;;;;;;;;;;;;:30;10178:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;10098:14:::1;:26;10113:10;10098:26;;;;;;;;;;;;;;;;10090:35;;10008:124:::0;:::o;6262:530::-;10356:1;10328:13;:25;10342:10;10328:25;;;;;;;;;;;;;;;;:29;10320:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;6335:23:::1;6361:9;6335:35;;6407:1;6388:15;:20:::0;6380:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;6449:28;6498:19;6480:15;:37;;;;:::i;:::-;6449:68;;6527:28;6612:9;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6589:20;:51;;;;:::i;:::-;6566:74;;6695:15;6660:19;:31;6680:10;6660:31;;;;;;;;;;;;;;;;:50;;;;;;;:::i;:::-;;;;;;;;6765:20;6720:29;:41;6750:10;6720:41;;;;;;;;;;;;;;;;:65;;;;;;;:::i;:::-;;;;;;;;6325:467;;;6262:530::o:0;2326:1415::-;10215:1;10186:14;:26;10201:10;10186:26;;;;;;;;;;;;;;;;:30;10178:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;10505:1:::1;10471:9:::0;::::1;;;;;;;;;;:19;;;10491:10;10471:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;10463:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;2465:22:::2;2490:14;:26;2505:10;2490:26;;;;;;;;;;;;;;;;2465:51;;2613:14;2578:9;::::0;::::2;;;;;;;;:19;;;2598:10;2578:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;2569:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;2677:24;2704:20;:32;2725:10;2704:32;;;;;;;;;;;;;;;;2677:59;;2801:9;::::0;::::2;;;;;;;;:22;;;2824:10;2844:4;2851:14;2801:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2939:26;2968:50;2988:16;3006:11;;2968:19;:50::i;:::-;2939:79;;3071:9;::::0;::::2;;;;;;;;:22;;;3102:4;3109:10;3141:18;3122:16;:37;;;;:::i;:::-;3071:90;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3196:9;::::0;::::2;;;;;;;;:22;;;3227:4;3234:8;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3265:18;3196:88;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3340:20;:32;3361:10;3340:32;;;;;;;;;;;;;;;3333:39;;;3434:14;:26;3449:10;3434:26;;;;;;;;;;;;;;;3427:33;;;3522:30;:42;3553:10;3522:42;;;;;;;;;;;;;;;3515:49;;;3579:9;3574:161;3598:11;:18;;;;3594:1;:22;3574:161;;;3659:10;3641:28;;:11;3653:1;3641:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:28;;::::0;3637:88:::2;;3696:11;3708:1;3696:14;;;;;;;;:::i;:::-;;;;;;;;;;3689:21;;;;;;;;;;;3637:88;3618:3;;;;;:::i;:::-;;;;3574:161;;;;2396:1345;;;2326:1415::o:0;6803:1509::-;10356:1;10328:13;:25;10342:10;10328:25;;;;;;;;;;;;;;;;:29;10320:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;6931:22:::1;6956:13;:25;6970:10;6956:25;;;;;;;;;;;;;;;;6931:50;;7056:14;7043:9;:27;;7034:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;7113:24;7140:19;:31;7160:10;7140:31;;;;;;;;;;;;;;;;7113:58;;7244:26;7273:50;7293:16;7311:11;;7273:19;:50::i;:::-;7244:79;;7376:29;7417:10;7376:52;;7438:13;:22;;:61;7480:18;7461:16;:37;;;;:::i;:::-;7438:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;7569:14;7544:21;:39;;7535:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;7603:25;7640:13;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7603:66;;7679:9;:18;;:34;7698:14;7679:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;7764:31;7806:8;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7764:72;;7846:15;:24;;:44;7871:18;7846:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;7908:19;:31;7928:10;7908:31;;;;;;;;;;;;;;;7901:38;;;8001:13;:25;8015:10;8001:25;;;;;;;;;;;;;;;7994:32;;;8088:29;:41;8118:10;8088:41;;;;;;;;;;;;;;;8081:48;;;8153:9;8148:158;8172:10;:17;;;;8168:1;:21;8148:158;;;8231:10;8214:27;;:10;8225:1;8214:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:27;;::::0;8210:86:::1;;8268:10;8279:1;8268:13;;;;;;;;:::i;:::-;;;;;;;;;;8261:20;;;;;;;;;;;8210:86;8191:3;;;;;:::i;:::-;;;;8148:158;;;;6856:1456;;;;;;6803:1509::o:0;9690:124::-;9747:7;9773:9;;;;;;;;;;;:19;;;9801:4;9773:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9766:41;;9690:124;:::o;5376:880::-;5421:7;5440:25;5468:9;5440:37;;5516:1;5495:17;:22;5487:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5558:30;5611:19;5591:17;:39;;;;:::i;:::-;5558:72;;5640:30;5681:10;5697;5681:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5768:9;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5743:22;:53;;;;:::i;:::-;5718:78;;5816:19;5838:65;5858:17;5877:25;;5838:19;:65::i;:::-;5816:87;;5967:17;5933:19;:31;5953:10;5933:31;;;;;;;;;;;;;;;:51;;;;6022:11;5994:13;:25;6008:10;5994:25;;;;;;;;;;;;;;;:39;;;;6087:22;6043:29;:41;6073:10;6043:41;;;;;;;;;;;;;;;:66;;;;6128:13;;;;;;;;;;;:29;;;6158:11;6179:10;6128:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6208:29;:41;6238:10;6208:41;;;;;;;;;;;;;;;;6201:48;;;;;;5376:880;:::o;8329:957::-;8378:25;8406:9;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8378:62;;8455:6;8450:830;8471:10;:17;;;;8467:1;:21;8450:830;;;8509:26;8597:19;8560;:34;8580:10;8591:1;8580:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8560:34;;;;;;;;;;;;;;;;:56;;;;:::i;:::-;8539:17;:78;;;;:::i;:::-;8509:109;;8658:29;:44;8688:10;8699:1;8688:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8658:44;;;;;;;;;;;;;;;;8636:18;:66;8632:638;;8784:29;8825:13;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8784:70;;8872:13;:22;;:58;8895:19;:34;8915:10;8926:1;8915:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8895:34;;;;;;;;;;;;;;;;8872:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8956:19;:34;8976:10;8987:1;8976:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8956:34;;;;;;;;;;;;;;;8949:41;;;9067:13;:28;9081:10;9092:1;9081:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9067:28;;;;;;;;;;;;;;;9060:35;;;9172:29;:44;9202:10;9213:1;9202:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9172:44;;;;;;;;;;;;;;;9165:51;;;9242:10;9253:1;9242:13;;;;;;;;:::i;:::-;;;;;;;;;;9235:20;;;;;;;;;;;8704:566;8632:638;8495:785;8490:3;;;;;:::i;:::-;;;;8450:830;;;;8368:918;8329:957::o;3747:539::-;10215:1;10186:14;:26;10201:10;10186:26;;;;;;;;;;;;;;;;:30;10178:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3873:1:::1;3854:15;:20:::0;3846:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3959:15;3924:9;::::0;::::1;;;;;;;;:19;;;3944:10;3924:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;3915:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;4023:28;4103:9;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4085:15;:47;;;;:::i;:::-;4062:70;;4188:15;4152:20;:32;4173:10;4152:32;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;4259:20;4213:30;:42;4244:10;4213:42;;;;;;;;;;;;;;;;:66;;;;;;;:::i;:::-;;;;;;;;3827:459;3747:539:::0;:::o;1222:1098::-;1315:1;1294:17;:22;1286:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1401:17;1366:9;;;;;;;;;;:19;;;1386:10;1366:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;1357:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;1467:11;1484:10;1467:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1505:19;1527:65;1547:17;1566:25;;1527:19;:65::i;:::-;1505:87;;1658:17;1623:20;:32;1644:10;1623:32;;;;;;;;;;;;;;;:52;;;;1714:11;1685:14;:26;1700:10;1685:26;;;;;;;;;;;;;;;:40;;;;1736:30;1769:17;1736:50;;1850:22;1805:30;:42;1836:10;1805:42;;;;;;;;;;;;;;;:67;;;;1883:27;1913:13;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1883:58;;1951:9;;;;;;;;;;:22;;;1974:10;1994:4;2001:17;1951:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2077:13;;;;;;;;;;;:39;;;2117:11;2138:4;2077:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:9;;;;;;;;;;:22;;;2227:4;2234:10;2246:11;2196:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1276:1044;;;1222:1098;:::o;4293:1040::-;4335:26;4364:9;;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4335:64;;4414:6;4409:918;4430:11;:18;;;;4426:1;:22;4409:918;;;4469:26;4521:20;:36;4542:11;4554:1;4542:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4521:36;;;;;;;;;;;;;;;;4499:18;:59;;;;:::i;:::-;4469:90;;4599:30;:46;4630:11;4642:1;4630:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4599:46;;;;;;;;;;;;;;;;4577:18;:68;4573:744;;4807:22;4832:11;4844:1;4832:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4807:39;;4865:9;;;;;;;;;;:22;;;4896:4;4903:13;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4933:20;:36;4954:14;4933:36;;;;;;;;;;;;;;;;4865:105;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4996:20;:36;5017:11;5029:1;5017:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4996:36;;;;;;;;;;;;;;;4989:43;;;5109:14;:30;5124:11;5136:1;5124:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5109:30;;;;;;;;;;;;;;;5102:37;;;5216:30;:46;5247:11;5259:1;5247:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5216:46;;;;;;;;;;;;;;;5209:53;;;5288:11;5300:1;5288:14;;;;;;;;:::i;:::-;;;;;;;;;;5281:21;;;;;;;;;;;4647:670;4573:744;4455:872;4450:3;;;;;:::i;:::-;;;;4409:918;;;;4325:1008;4293:1040::o;9820:110::-;9876:7;9902:21;9895:28;;9820:110;:::o;88:117:12:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:118::-;1257:24;1275:5;1257:24;:::i;:::-;1252:3;1245:37;1170:118;;:::o;1294:222::-;1387:4;1425:2;1414:9;1410:18;1402:26;;1438:71;1506:1;1495:9;1491:17;1482:6;1438:71;:::i;:::-;1294:222;;;;:::o;1522:329::-;1581:6;1630:2;1618:9;1609:7;1605:23;1601:32;1598:119;;;1636:79;;:::i;:::-;1598:119;1756:1;1781:53;1826:7;1817:6;1806:9;1802:22;1781:53;:::i;:::-;1771:63;;1727:117;1522:329;;;;:::o;1857:180::-;1905:77;1902:1;1895:88;2002:4;1999:1;1992:15;2026:4;2023:1;2016:15;2043:410;2083:7;2106:20;2124:1;2106:20;:::i;:::-;2101:25;;2140:20;2158:1;2140:20;:::i;:::-;2135:25;;2195:1;2192;2188:9;2217:30;2235:11;2217:30;:::i;:::-;2206:41;;2396:1;2387:7;2383:15;2380:1;2377:22;2357:1;2350:9;2330:83;2307:139;;2426:18;;:::i;:::-;2307:139;2091:362;2043:410;;;;:::o;2459:180::-;2507:77;2504:1;2497:88;2604:4;2601:1;2594:15;2628:4;2625:1;2618:15;2645:185;2685:1;2702:20;2720:1;2702:20;:::i;:::-;2697:25;;2736:20;2754:1;2736:20;:::i;:::-;2731:25;;2775:1;2765:35;;2780:18;;:::i;:::-;2765:35;2822:1;2819;2815:9;2810:14;;2645:185;;;;:::o;2836:169::-;2920:11;2954:6;2949:3;2942:19;2994:4;2989:3;2985:14;2970:29;;2836:169;;;;:::o;3011:223::-;3151:34;3147:1;3139:6;3135:14;3128:58;3220:6;3215:2;3207:6;3203:15;3196:31;3011:223;:::o;3240:366::-;3382:3;3403:67;3467:2;3462:3;3403:67;:::i;:::-;3396:74;;3479:93;3568:3;3479:93;:::i;:::-;3597:2;3592:3;3588:12;3581:19;;3240:366;;;:::o;3612:419::-;3778:4;3816:2;3805:9;3801:18;3793:26;;3865:9;3859:4;3855:20;3851:1;3840:9;3836:17;3829:47;3893:131;4019:4;3893:131;:::i;:::-;3885:139;;3612:419;;;:::o;4037:182::-;4177:34;4173:1;4165:6;4161:14;4154:58;4037:182;:::o;4225:366::-;4367:3;4388:67;4452:2;4447:3;4388:67;:::i;:::-;4381:74;;4464:93;4553:3;4464:93;:::i;:::-;4582:2;4577:3;4573:12;4566:19;;4225:366;;;:::o;4597:419::-;4763:4;4801:2;4790:9;4786:18;4778:26;;4850:9;4844:4;4840:20;4836:1;4825:9;4821:17;4814:47;4878:131;5004:4;4878:131;:::i;:::-;4870:139;;4597:419;;;:::o;5022:176::-;5162:28;5158:1;5150:6;5146:14;5139:52;5022:176;:::o;5204:366::-;5346:3;5367:67;5431:2;5426:3;5367:67;:::i;:::-;5360:74;;5443:93;5532:3;5443:93;:::i;:::-;5561:2;5556:3;5552:12;5545:19;;5204:366;;;:::o;5576:419::-;5742:4;5780:2;5769:9;5765:18;5757:26;;5829:9;5823:4;5819:20;5815:1;5804:9;5800:17;5793:47;5857:131;5983:4;5857:131;:::i;:::-;5849:139;;5576:419;;;:::o;6001:143::-;6058:5;6089:6;6083:13;6074:22;;6105:33;6132:5;6105:33;:::i;:::-;6001:143;;;;:::o;6150:351::-;6220:6;6269:2;6257:9;6248:7;6244:23;6240:32;6237:119;;;6275:79;;:::i;:::-;6237:119;6395:1;6420:64;6476:7;6467:6;6456:9;6452:22;6420:64;:::i;:::-;6410:74;;6366:128;6150:351;;;;:::o;6507:191::-;6547:3;6566:20;6584:1;6566:20;:::i;:::-;6561:25;;6600:20;6618:1;6600:20;:::i;:::-;6595:25;;6643:1;6640;6636:9;6629:16;;6664:3;6661:1;6658:10;6655:36;;;6671:18;;:::i;:::-;6655:36;6507:191;;;;:::o;6704:126::-;6741:7;6781:42;6774:5;6770:54;6759:65;;6704:126;;;:::o;6836:96::-;6873:7;6902:24;6920:5;6902:24;:::i;:::-;6891:35;;6836:96;;;:::o;6938:118::-;7025:24;7043:5;7025:24;:::i;:::-;7020:3;7013:37;6938:118;;:::o;7062:222::-;7155:4;7193:2;7182:9;7178:18;7170:26;;7206:71;7274:1;7263:9;7259:17;7250:6;7206:71;:::i;:::-;7062:222;;;;:::o;7290:233::-;7430:34;7426:1;7418:6;7414:14;7407:58;7499:16;7494:2;7486:6;7482:15;7475:41;7290:233;:::o;7529:366::-;7671:3;7692:67;7756:2;7751:3;7692:67;:::i;:::-;7685:74;;7768:93;7857:3;7768:93;:::i;:::-;7886:2;7881:3;7877:12;7870:19;;7529:366;;;:::o;7901:419::-;8067:4;8105:2;8094:9;8090:18;8082:26;;8154:9;8148:4;8144:20;8140:1;8129:9;8125:17;8118:47;8182:131;8308:4;8182:131;:::i;:::-;8174:139;;7901:419;;;:::o;8326:221::-;8466:34;8462:1;8454:6;8450:14;8443:58;8535:4;8530:2;8522:6;8518:15;8511:29;8326:221;:::o;8553:366::-;8695:3;8716:67;8780:2;8775:3;8716:67;:::i;:::-;8709:74;;8792:93;8881:3;8792:93;:::i;:::-;8910:2;8905:3;8901:12;8894:19;;8553:366;;;:::o;8925:419::-;9091:4;9129:2;9118:9;9114:18;9106:26;;9178:9;9172:4;9168:20;9164:1;9153:9;9149:17;9142:47;9206:131;9332:4;9206:131;:::i;:::-;9198:139;;8925:419;;;:::o;9350:442::-;9499:4;9537:2;9526:9;9522:18;9514:26;;9550:71;9618:1;9607:9;9603:17;9594:6;9550:71;:::i;:::-;9631:72;9699:2;9688:9;9684:18;9675:6;9631:72;:::i;:::-;9713;9781:2;9770:9;9766:18;9757:6;9713:72;:::i;:::-;9350:442;;;;;;:::o;9798:90::-;9832:7;9875:5;9868:13;9861:21;9850:32;;9798:90;;;:::o;9894:116::-;9964:21;9979:5;9964:21;:::i;:::-;9957:5;9954:32;9944:60;;10000:1;9997;9990:12;9944:60;9894:116;:::o;10016:137::-;10070:5;10101:6;10095:13;10086:22;;10117:30;10141:5;10117:30;:::i;:::-;10016:137;;;;:::o;10159:345::-;10226:6;10275:2;10263:9;10254:7;10250:23;10246:32;10243:119;;;10281:79;;:::i;:::-;10243:119;10401:1;10426:61;10479:7;10470:6;10459:9;10455:22;10426:61;:::i;:::-;10416:71;;10372:125;10159:345;;;;:::o;10510:194::-;10550:4;10570:20;10588:1;10570:20;:::i;:::-;10565:25;;10604:20;10622:1;10604:20;:::i;:::-;10599:25;;10648:1;10645;10641:9;10633:17;;10672:1;10666:4;10663:11;10660:37;;;10677:18;;:::i;:::-;10660:37;10510:194;;;;:::o;10710:122::-;10783:24;10801:5;10783:24;:::i;:::-;10776:5;10773:35;10763:63;;10822:1;10819;10812:12;10763:63;10710:122;:::o;10838:143::-;10895:5;10926:6;10920:13;10911:22;;10942:33;10969:5;10942:33;:::i;:::-;10838:143;;;;:::o;10987:351::-;11057:6;11106:2;11094:9;11085:7;11081:23;11077:32;11074:119;;;11112:79;;:::i;:::-;11074:119;11232:1;11257:64;11313:7;11304:6;11293:9;11289:22;11257:64;:::i;:::-;11247:74;;11203:128;10987:351;;;;:::o;11344:180::-;11392:77;11389:1;11382:88;11489:4;11486:1;11479:15;11513:4;11510:1;11503:15;11530:233;11569:3;11592:24;11610:5;11592:24;:::i;:::-;11583:33;;11638:66;11631:5;11628:77;11625:103;;11708:18;;:::i;:::-;11625:103;11755:1;11748:5;11744:13;11737:20;;11530:233;;;:::o;11769:178::-;11909:30;11905:1;11897:6;11893:14;11886:54;11769:178;:::o;11953:366::-;12095:3;12116:67;12180:2;12175:3;12116:67;:::i;:::-;12109:74;;12192:93;12281:3;12192:93;:::i;:::-;12310:2;12305:3;12301:12;12294:19;;11953:366;;;:::o;12325:419::-;12491:4;12529:2;12518:9;12514:18;12506:26;;12578:9;12572:4;12568:20;12564:1;12553:9;12549:17;12542:47;12606:131;12732:4;12606:131;:::i;:::-;12598:139;;12325:419;;;:::o;12750:155::-;12890:7;12886:1;12878:6;12874:14;12867:31;12750:155;:::o;12911:365::-;13053:3;13074:66;13138:1;13133:3;13074:66;:::i;:::-;13067:73;;13149:93;13238:3;13149:93;:::i;:::-;13267:2;13262:3;13258:12;13251:19;;12911:365;;;:::o;13282:419::-;13448:4;13486:2;13475:9;13471:18;13463:26;;13535:9;13529:4;13525:20;13521:1;13510:9;13506:17;13499:47;13563:131;13689:4;13563:131;:::i;:::-;13555:139;;13282:419;;;:::o;13707:104::-;13752:7;13781:24;13799:5;13781:24;:::i;:::-;13770:35;;13707:104;;;:::o;13817:142::-;13920:32;13946:5;13920:32;:::i;:::-;13915:3;13908:45;13817:142;;:::o;13965:364::-;14102:4;14140:2;14129:9;14125:18;14117:26;;14153:71;14221:1;14210:9;14206:17;14197:6;14153:71;:::i;:::-;14234:88;14318:2;14307:9;14303:18;14294:6;14234:88;:::i;:::-;13965:364;;;;;:::o;14335:332::-;14456:4;14494:2;14483:9;14479:18;14471:26;;14507:71;14575:1;14564:9;14560:17;14551:6;14507:71;:::i;:::-;14588:72;14656:2;14645:9;14641:18;14632:6;14588:72;:::i;:::-;14335:332;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\nimport \"./LiquidityPool.sol\";\nimport \"./ERC20.sol\";\nimport \"./Reserves.sol\";\nimport \"./PriceFeed.sol\";\nimport \"./Avax.sol\";\n\ncontract Lending {\n    Avax avaxToken;\n    LiquidityPool liquidityPool;\n    Reserves reserves;\n    PriceFeed priceFeed;\n    uint256 _maximumLendingPercentage = 8500; //85% of collateral\n    uint256 _lendingFee = 500; //5% of total collateral\n    address _debtOwner = msg.sender;\n\n    mapping(address => uint256) AVAXCollateralLedger;\n    mapping(address => uint256) AVAXLoanLedger;\n    mapping(address => uint256) AVAXCollateralValueLedgerinUSD;\n\n    mapping(address => uint256) ETHCollateralLedger;\n    mapping(address => uint256) ETHLoanLedger;\n    mapping(address => uint256) ETHCollateralValueLedgerinUSD;\n\n    address[] ETHDebtors; // keep track who is still has outstanding loans\n    address[] AVAXDebtors; // keep track who is still has outstanding loans\n    \n     constructor(Avax avaxTokenAddress, LiquidityPool lp, Reserves reservesAddress,  PriceFeed pf) {\n        avaxToken = avaxTokenAddress;\n        liquidityPool = lp;\n        reserves = reservesAddress;\n        priceFeed = pf;\n    }\n\n    //Take collateral and give 85% \n    function borrowAVAX(uint256 depositCollateral) public {\n        require(depositCollateral != 0, \"Please put more collateral\");\n        require (avaxToken.balanceOf(msg.sender) >= depositCollateral, \"You do not have enough AVAX token!\");\n        AVAXDebtors.push(msg.sender);\n        uint256 _loanAmount = calculatePercentage(depositCollateral, _maximumLendingPercentage); //85% of collateral\n\n        AVAXCollateralLedger[msg.sender] = depositCollateral;\n        AVAXLoanLedger[msg.sender] = _loanAmount;\n\n        uint256 depositCollateralInUSD = depositCollateral; //in USD\n        AVAXCollateralValueLedgerinUSD[msg.sender] = depositCollateralInUSD;\n\n        address liqudityPoolAddress = liquidityPool.getLPAddress();\n        avaxToken.transferFrom(msg.sender, address(this), depositCollateral); //Transfer borrower collateral to this contract\n        liquidityPool.sendAvaxToLendingContract(_loanAmount, address(this)); // Transfer AVAX from LP to this contract\n        avaxToken.transferFrom(address(this), msg.sender, _loanAmount); //Take assets from Liquidity Pool and send to borrower\n    }\n\n    function repayAVAXDebt() public onlyAVAXDebtHolder enoughAVAXInWallet {\n        //require only the person who loan it can pay back\n        uint256 amountToReturn = AVAXLoanLedger[msg.sender]; //Get amount to return from USDCLoanLedger\n        require (avaxToken.balanceOf(msg.sender) >= amountToReturn, \"You do not have enough AVAX token!\");\n\n        uint256 collateralAmount = AVAXCollateralLedger[msg.sender]; //Get the collteral that is held by the Smart contract\n        avaxToken.transferFrom(msg.sender, address(this), amountToReturn); //Transfer USDC to pay back from wallet to this smart contract\n        uint256 lendingFeeToDeduct = calculatePercentage(collateralAmount, _lendingFee); //Calculate the USDC taken as comission 5%\n        avaxToken.transferFrom(address(this), msg.sender, (collateralAmount - lendingFeeToDeduct)); //Transfer only 95% back\n        avaxToken.transferFrom(address(this), reserves.getReservesAddress(), lendingFeeToDeduct); //Transfer 5% to the reserves\n        \n        delete AVAXCollateralLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete AVAXLoanLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete AVAXCollateralValueLedgerinUSD[msg.sender];\n        for (uint256 i = 0; i < AVAXDebtors.length; i++) {\n            if (AVAXDebtors[i] == msg.sender) {\n                delete AVAXDebtors[i];\n            }\n        }\n    }\n\n    function topUpAVAXCollateral(uint256 topUpCollateral) public onlyAVAXDebtHolder {\n        \n        require(topUpCollateral != 0, \"Please put more collateral\");\n        require (avaxToken.balanceOf(msg.sender) >= topUpCollateral, \"You do not have enough AVAX token!\");\n        uint256 topUpCollateralInUSD; \n        topUpCollateralInUSD = topUpCollateral * priceFeed.getAvaxPriceFirst(); //in USD\n\n        AVAXCollateralLedger[msg.sender] += topUpCollateral;\n        AVAXCollateralValueLedgerinUSD[msg.sender] += topUpCollateralInUSD;\n    }\n\n     function liquidateAVAX() public {\n        uint256 currentPriceOfAVAX = priceFeed.getAvaxPriceToLiquidate();\n        for (uint i = 0; i < AVAXDebtors.length; i++) {\n            uint256 newCollateralPrice = (currentPriceOfAVAX * (AVAXCollateralLedger[AVAXDebtors[i]]));\n            if (newCollateralPrice <= AVAXCollateralValueLedgerinUSD[AVAXDebtors[i]]) {\n                //liquidate by sending collateral to the pool\n                 //addressToSend.transfer(ETHCollateralLedger[ETHDebtors[i]]);\n                 address accountAddress = AVAXDebtors[i];\n                 avaxToken.transferFrom(address(this), liquidityPool.getLPAddress(), AVAXCollateralLedger[accountAddress]);\n                 delete AVAXCollateralLedger[AVAXDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete AVAXLoanLedger[AVAXDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete AVAXCollateralValueLedgerinUSD[AVAXDebtors[i]];\n                 delete AVAXDebtors[i];\n            }\n        }\n    }\n\n     //Take collateral and give 85% \n    function borrowEth() public payable returns (uint256) {\n        uint256 depositCollateral = msg.value;\n        require(depositCollateral != 0, \"Please put more collateral\");\n        uint256 depositCollateralInEth = depositCollateral / 1000000000000000000;\n        uint256 depositCollateralInUSD; \n        ETHDebtors.push(msg.sender);\n        depositCollateralInUSD = depositCollateralInEth * priceFeed.getEthPriceFirst(); //in USD\n\n        uint256 _loanAmount = calculatePercentage(depositCollateral, _maximumLendingPercentage); //85% of collateral\n        ETHCollateralLedger[msg.sender] = depositCollateral;\n        ETHLoanLedger[msg.sender] = _loanAmount;\n        ETHCollateralValueLedgerinUSD[msg.sender] = depositCollateralInUSD;\n        \n        liquidityPool.sendEthToLender(_loanAmount, payable(msg.sender));\n        return ETHCollateralValueLedgerinUSD[msg.sender];\n    }\n\n    function topUpETHCollateral() public payable onlyEthDebtHolder {\n        uint256 topUpCollateral = msg.value;\n        require(topUpCollateral != 0, \"Please put more collateral\");\n        uint256 topUpCollateralInEth = topUpCollateral / 1000000000000000000;\n        uint256 topUpCollateralInUSD; \n        topUpCollateralInUSD = topUpCollateralInEth * priceFeed.getEthPriceFirst(); //in USD\n\n        ETHCollateralLedger[msg.sender] += topUpCollateral;\n        ETHCollateralValueLedgerinUSD[msg.sender] += topUpCollateralInUSD;\n    }\n\n   \n\n    function repayEth() public payable onlyEthDebtHolder {\n        //require only the person who loan it can pay back\n     \n        uint256 amountToReturn = ETHLoanLedger[msg.sender]; //Get amount to return from USDCLoanLedger\n        require (msg.value >= amountToReturn, \"Value inserted is not enough\");\n        uint256 collateralAmount = ETHCollateralLedger[msg.sender]; //Get the collteral that is held by the Smart contract\n       \n        uint256 lendingFeeToDeduct = calculatePercentage(collateralAmount, _lendingFee); //Calculate the USDC taken as comission 5%\n        address payable addressToSend = payable (msg.sender);\n        addressToSend.transfer(collateralAmount - lendingFeeToDeduct);\n        //Send back to LP\n        require (address(this).balance >= amountToReturn, \"ERROR\");\n        address payable lpAddress = payable (liquidityPool.getLPAddress());\n        lpAddress.transfer(amountToReturn);\n\n        //Send comissionFee to reserves\n        address payable reservesAddress = payable(reserves.getReservesAddress());\n        reservesAddress.transfer(lendingFeeToDeduct);\n\n        delete ETHCollateralLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete ETHLoanLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete ETHCollateralValueLedgerinUSD[msg.sender];\n        \n        for (uint256 i = 0; i < ETHDebtors.length; i++) {\n            if (ETHDebtors[i] == msg.sender) {\n                delete ETHDebtors[i];\n            }\n        }\n    }\n           \n    function liquidateETH() public payable {\n        uint256 currentPriceOfEth = priceFeed.getEthPriceToLiquidate();\n        for (uint i = 0; i < ETHDebtors.length; i++) {\n            uint256 newCollateralPrice = (currentPriceOfEth * (ETHCollateralLedger[ETHDebtors[i]] / 1000000000000000000));\n            if (newCollateralPrice <= ETHCollateralValueLedgerinUSD[ETHDebtors[i]]) {\n                //liquidate by sending collateral to the pool\n                address payable addressToSend = payable (liquidityPool.getLPAddress());\n                addressToSend.transfer(ETHCollateralLedger[ETHDebtors[i]]);\n                 delete ETHCollateralLedger[ETHDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete ETHLoanLedger[ETHDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete ETHCollateralValueLedgerinUSD[ETHDebtors[i]];\n                 delete ETHDebtors[i];\n            }\n        }\n    }\n\n    //This function calculates Percentages\n    //Used to calculate the amount of Loan that can be given and platform lendingFees\n    //e.g \n    //Assume collateral = 100, desired percentage = 85%\n    //function returns 85\n\n    function calculatePercentage(uint256 collateralAmount, uint256 percentage) public pure returns (uint256) {\n        return (collateralAmount * percentage) / 10_000;\n    }\n\n    function getHoldingAVAXCollateral() public view returns (uint256) {\n        return avaxToken.balanceOf(address(this));\n    }\n\n    function getHoldingEthCollateral() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    //Functions to return the amount of Debt the msg.sender has in USDC\n    function getAVAXDebt() public view onlyAVAXDebtHolder returns (uint256) {\n        return (AVAXLoanLedger[msg.sender]);\n    }\n\n    modifier onlyAVAXDebtHolder() {\n        require(AVAXLoanLedger[msg.sender] > 0, \"You do not have any outstanding debt\");\n        _;\n    }\n\n    modifier onlyEthDebtHolder() {\n        require(ETHLoanLedger[msg.sender] > 0, \"You do not have outstanding debt\");\n        _;\n    }\n    \n     modifier enoughAVAXInWallet() {\n        require(avaxToken.balanceOf(msg.sender) > 0, \"You do not have enough USDC to repay this debt\");\n        _;\n    }\n}",
  "sourcePath": "/Users/yijie/Desktop/Y2S2/IS4302/Project/IS4302_Group_6_Project/contracts/Lending.sol",
  "ast": {
    "absolutePath": "project:/contracts/Lending.sol",
    "exportedSymbols": {
      "Avax": [
        106
      ],
      "ERC20": [
        653
      ],
      "Lending": [
        1576
      ],
      "LiquidityPool": [
        2048
      ],
      "PriceFeed": [
        2174
      ],
      "Reserves": [
        2402
      ],
      "SafeMath": [
        312
      ]
    },
    "id": 1577,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 655,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "project:/contracts/LiquidityPool.sol",
        "file": "./LiquidityPool.sol",
        "id": 656,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1577,
        "sourceUnit": 2049,
        "src": "56:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 657,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1577,
        "sourceUnit": 654,
        "src": "86:21:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Reserves.sol",
        "file": "./Reserves.sol",
        "id": 658,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1577,
        "sourceUnit": 2403,
        "src": "108:24:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/PriceFeed.sol",
        "file": "./PriceFeed.sol",
        "id": 659,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1577,
        "sourceUnit": 2175,
        "src": "133:25:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Avax.sol",
        "file": "./Avax.sol",
        "id": 660,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1577,
        "sourceUnit": 107,
        "src": "159:20:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Lending",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1576,
        "linearizedBaseContracts": [
          1576
        ],
        "name": "Lending",
        "nameLocation": "190:7:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 663,
            "mutability": "mutable",
            "name": "avaxToken",
            "nameLocation": "209:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 1576,
            "src": "204:14:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Avax_$106",
              "typeString": "contract Avax"
            },
            "typeName": {
              "id": 662,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 661,
                "name": "Avax",
                "nameLocations": [
                  "204:4:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 106,
                "src": "204:4:4"
              },
              "referencedDeclaration": 106,
              "src": "204:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Avax_$106",
                "typeString": "contract Avax"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 666,
            "mutability": "mutable",
            "name": "liquidityPool",
            "nameLocation": "238:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 1576,
            "src": "224:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LiquidityPool_$2048",
              "typeString": "contract LiquidityPool"
            },
            "typeName": {
              "id": 665,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 664,
                "name": "LiquidityPool",
                "nameLocations": [
                  "224:13:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2048,
                "src": "224:13:4"
              },
              "referencedDeclaration": 2048,
              "src": "224:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LiquidityPool_$2048",
                "typeString": "contract LiquidityPool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 669,
            "mutability": "mutable",
            "name": "reserves",
            "nameLocation": "266:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 1576,
            "src": "257:17:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Reserves_$2402",
              "typeString": "contract Reserves"
            },
            "typeName": {
              "id": 668,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 667,
                "name": "Reserves",
                "nameLocations": [
                  "257:8:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2402,
                "src": "257:8:4"
              },
              "referencedDeclaration": 2402,
              "src": "257:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Reserves_$2402",
                "typeString": "contract Reserves"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 672,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "290:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 1576,
            "src": "280:19:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PriceFeed_$2174",
              "typeString": "contract PriceFeed"
            },
            "typeName": {
              "id": 671,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 670,
                "name": "PriceFeed",
                "nameLocations": [
                  "280:9:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2174,
                "src": "280:9:4"
              },
              "referencedDeclaration": 2174,
              "src": "280:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceFeed_$2174",
                "typeString": "contract PriceFeed"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 675,
            "mutability": "mutable",
            "name": "_maximumLendingPercentage",
            "nameLocation": "313:25:4",
            "nodeType": "VariableDeclaration",
            "scope": 1576,
            "src": "305:40:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 673,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "305:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38353030",
              "id": 674,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "341:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8500_by_1",
                "typeString": "int_const 8500"
              },
              "value": "8500"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 678,
            "mutability": "mutable",
            "name": "_lendingFee",
            "nameLocation": "379:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 1576,
            "src": "371:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 676,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "371:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "353030",
              "id": 677,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "393:3:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "500"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 682,
            "mutability": "mutable",
            "name": "_debtOwner",
            "nameLocation": "435:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 1576,
            "src": "427:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 679,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "427:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 680,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967281,
                "src": "448:3:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 681,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberLocation": "452:6:4",
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "448:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 686,
            "mutability": "mutable",
            "name": "AVAXCollateralLedger",
            "nameLocation": "493:20:4",
            "nodeType": "VariableDeclaration",
            "scope": 1576,
            "src": "465:48:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 685,
              "keyType": {
                "id": 683,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "473:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "465:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 684,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "484:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 690,
            "mutability": "mutable",
            "name": "AVAXLoanLedger",
            "nameLocation": "547:14:4",
            "nodeType": "VariableDeclaration",
            "scope": 1576,
            "src": "519:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 689,
              "keyType": {
                "id": 687,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "527:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "519:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 688,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "538:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 694,
            "mutability": "mutable",
            "name": "AVAXCollateralValueLedgerinUSD",
            "nameLocation": "595:30:4",
            "nodeType": "VariableDeclaration",
            "scope": 1576,
            "src": "567:58:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 693,
              "keyType": {
                "id": 691,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "575:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "567:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 692,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "586:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 698,
            "mutability": "mutable",
            "name": "ETHCollateralLedger",
            "nameLocation": "660:19:4",
            "nodeType": "VariableDeclaration",
            "scope": 1576,
            "src": "632:47:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 697,
              "keyType": {
                "id": 695,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "640:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "632:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 696,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "651:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 702,
            "mutability": "mutable",
            "name": "ETHLoanLedger",
            "nameLocation": "713:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 1576,
            "src": "685:41:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 701,
              "keyType": {
                "id": 699,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "693:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "685:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 700,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "704:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 706,
            "mutability": "mutable",
            "name": "ETHCollateralValueLedgerinUSD",
            "nameLocation": "760:29:4",
            "nodeType": "VariableDeclaration",
            "scope": 1576,
            "src": "732:57:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 705,
              "keyType": {
                "id": 703,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "740:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "732:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 704,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "751:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 709,
            "mutability": "mutable",
            "name": "ETHDebtors",
            "nameLocation": "806:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 1576,
            "src": "796:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 707,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "796:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 708,
              "nodeType": "ArrayTypeName",
              "src": "796:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 712,
            "mutability": "mutable",
            "name": "AVAXDebtors",
            "nameLocation": "881:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 1576,
            "src": "871:21:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 710,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "871:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 711,
              "nodeType": "ArrayTypeName",
              "src": "871:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 743,
              "nodeType": "Block",
              "src": "1047:133:4",
              "statements": [
                {
                  "expression": {
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 727,
                      "name": "avaxToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "1057:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Avax_$106",
                        "typeString": "contract Avax"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 728,
                      "name": "avaxTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "1069:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Avax_$106",
                        "typeString": "contract Avax"
                      }
                    },
                    "src": "1057:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avax_$106",
                      "typeString": "contract Avax"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:28:4"
                },
                {
                  "expression": {
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 731,
                      "name": "liquidityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 666,
                      "src": "1095:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$2048",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 732,
                      "name": "lp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "1111:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$2048",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "src": "1095:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPool_$2048",
                      "typeString": "contract LiquidityPool"
                    }
                  },
                  "id": 734,
                  "nodeType": "ExpressionStatement",
                  "src": "1095:18:4"
                },
                {
                  "expression": {
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 735,
                      "name": "reserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "1123:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Reserves_$2402",
                        "typeString": "contract Reserves"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 736,
                      "name": "reservesAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "1134:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Reserves_$2402",
                        "typeString": "contract Reserves"
                      }
                    },
                    "src": "1123:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Reserves_$2402",
                      "typeString": "contract Reserves"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:26:4"
                },
                {
                  "expression": {
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 739,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "1159:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceFeed_$2174",
                        "typeString": "contract PriceFeed"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 740,
                      "name": "pf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "1171:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceFeed_$2174",
                        "typeString": "contract PriceFeed"
                      }
                    },
                    "src": "1159:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceFeed_$2174",
                      "typeString": "contract PriceFeed"
                    }
                  },
                  "id": 742,
                  "nodeType": "ExpressionStatement",
                  "src": "1159:14:4"
                }
              ]
            },
            "id": 744,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "avaxTokenAddress",
                  "nameLocation": "970:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "965:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Avax_$106",
                    "typeString": "contract Avax"
                  },
                  "typeName": {
                    "id": 714,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 713,
                      "name": "Avax",
                      "nameLocations": [
                        "965:4:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 106,
                      "src": "965:4:4"
                    },
                    "referencedDeclaration": 106,
                    "src": "965:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avax_$106",
                      "typeString": "contract Avax"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 718,
                  "mutability": "mutable",
                  "name": "lp",
                  "nameLocation": "1002:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "988:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LiquidityPool_$2048",
                    "typeString": "contract LiquidityPool"
                  },
                  "typeName": {
                    "id": 717,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 716,
                      "name": "LiquidityPool",
                      "nameLocations": [
                        "988:13:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2048,
                      "src": "988:13:4"
                    },
                    "referencedDeclaration": 2048,
                    "src": "988:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPool_$2048",
                      "typeString": "contract LiquidityPool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "reservesAddress",
                  "nameLocation": "1015:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "1006:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Reserves_$2402",
                    "typeString": "contract Reserves"
                  },
                  "typeName": {
                    "id": 720,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 719,
                      "name": "Reserves",
                      "nameLocations": [
                        "1006:8:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2402,
                      "src": "1006:8:4"
                    },
                    "referencedDeclaration": 2402,
                    "src": "1006:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Reserves_$2402",
                      "typeString": "contract Reserves"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 724,
                  "mutability": "mutable",
                  "name": "pf",
                  "nameLocation": "1043:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "1033:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PriceFeed_$2174",
                    "typeString": "contract PriceFeed"
                  },
                  "typeName": {
                    "id": 723,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 722,
                      "name": "PriceFeed",
                      "nameLocations": [
                        "1033:9:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2174,
                      "src": "1033:9:4"
                    },
                    "referencedDeclaration": 2174,
                    "src": "1033:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceFeed_$2174",
                      "typeString": "contract PriceFeed"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "964:82:4"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1047:0:4"
            },
            "scope": 1576,
            "src": "953:227:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 846,
              "nodeType": "Block",
              "src": "1276:1044:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 750,
                          "name": "depositCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 746,
                          "src": "1294:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1315:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1294:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1318:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 749,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1286:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1286:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 755,
                  "nodeType": "ExpressionStatement",
                  "src": "1286:61:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 759,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1386:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1390:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1386:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 757,
                              "name": "avaxToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 663,
                              "src": "1366:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Avax_$106",
                                "typeString": "contract Avax"
                              }
                            },
                            "id": 758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1376:9:4",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 389,
                            "src": "1366:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1366:31:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 762,
                          "name": "depositCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 746,
                          "src": "1401:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1366:52:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b656e21",
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1420:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        },
                        "value": "You do not have enough AVAX token!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        }
                      ],
                      "id": 756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1357:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:100:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:100:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 770,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1484:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1488:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1484:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 767,
                        "name": "AVAXDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "1467:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1479:4:4",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1467:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1467:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 773,
                  "nodeType": "ExpressionStatement",
                  "src": "1467:28:4"
                },
                {
                  "assignments": [
                    775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 775,
                      "mutability": "mutable",
                      "name": "_loanAmount",
                      "nameLocation": "1513:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 846,
                      "src": "1505:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 774,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1505:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 780,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 777,
                        "name": "depositCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "1547:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 778,
                        "name": "_maximumLendingPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "1566:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 776,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1492,
                      "src": "1527:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1527:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1505:87:4"
                },
                {
                  "expression": {
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 781,
                        "name": "AVAXCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 686,
                        "src": "1623:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 784,
                      "indexExpression": {
                        "expression": {
                          "id": 782,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1644:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1648:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1644:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1623:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 785,
                      "name": "depositCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "1658:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1623:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "1623:52:4"
                },
                {
                  "expression": {
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 788,
                        "name": "AVAXLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 690,
                        "src": "1685:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 791,
                      "indexExpression": {
                        "expression": {
                          "id": 789,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1700:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1704:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1700:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1685:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 792,
                      "name": "_loanAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "1714:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1685:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 794,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:40:4"
                },
                {
                  "assignments": [
                    796
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 796,
                      "mutability": "mutable",
                      "name": "depositCollateralInUSD",
                      "nameLocation": "1744:22:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 846,
                      "src": "1736:30:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 795,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1736:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 798,
                  "initialValue": {
                    "id": 797,
                    "name": "depositCollateral",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 746,
                    "src": "1769:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1736:50:4"
                },
                {
                  "expression": {
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 799,
                        "name": "AVAXCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "1805:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 802,
                      "indexExpression": {
                        "expression": {
                          "id": 800,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1836:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1840:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1836:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1805:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 803,
                      "name": "depositCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 796,
                      "src": "1850:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1805:67:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "1805:67:4"
                },
                {
                  "assignments": [
                    807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 807,
                      "mutability": "mutable",
                      "name": "liqudityPoolAddress",
                      "nameLocation": "1891:19:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 846,
                      "src": "1883:27:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 806,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1883:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 811,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 808,
                        "name": "liquidityPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "1913:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$2048",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1927:12:4",
                      "memberName": "getLPAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1994,
                      "src": "1913:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1913:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1883:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 815,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1974:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1978:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1974:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 819,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1994:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1576",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1576",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1986:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 817,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1986:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1986:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 821,
                        "name": "depositCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "2001:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 812,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "1951:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$106",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1961:12:4",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 513,
                      "src": "1951:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1951:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 823,
                  "nodeType": "ExpressionStatement",
                  "src": "1951:68:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 827,
                        "name": "_loanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "2117:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 830,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2138:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1576",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1576",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2130:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 828,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2130:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2130:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 824,
                        "name": "liquidityPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "2077:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$2048",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2091:25:4",
                      "memberName": "sendAvaxToLendingContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2021,
                      "src": "2077:39:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2077:67:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 833,
                  "nodeType": "ExpressionStatement",
                  "src": "2077:67:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 839,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2227:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1576",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1576",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2219:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 837,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2219:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2219:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 841,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2234:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2238:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2234:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 843,
                        "name": "_loanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "2246:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 834,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "2196:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$106",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2206:12:4",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 513,
                      "src": "2196:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2196:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 845,
                  "nodeType": "ExpressionStatement",
                  "src": "2196:62:4"
                }
              ]
            },
            "functionSelector": "b968c930",
            "id": 847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrowAVAX",
            "nameLocation": "1231:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "depositCollateral",
                  "nameLocation": "1250:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 847,
                  "src": "1242:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1241:27:4"
            },
            "returnParameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1276:0:4"
            },
            "scope": 1576,
            "src": "1222:1098:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 970,
              "nodeType": "Block",
              "src": "2396:1345:4",
              "statements": [
                {
                  "assignments": [
                    855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 855,
                      "mutability": "mutable",
                      "name": "amountToReturn",
                      "nameLocation": "2473:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 970,
                      "src": "2465:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 854,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2465:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 860,
                  "initialValue": {
                    "baseExpression": {
                      "id": 856,
                      "name": "AVAXLoanLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 690,
                      "src": "2490:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 859,
                    "indexExpression": {
                      "expression": {
                        "id": 857,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2505:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2509:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2505:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2490:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2465:51:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 864,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2598:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2602:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2598:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 862,
                              "name": "avaxToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 663,
                              "src": "2578:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Avax_$106",
                                "typeString": "contract Avax"
                              }
                            },
                            "id": 863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2588:9:4",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 389,
                            "src": "2578:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2578:31:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 867,
                          "name": "amountToReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "2613:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2578:49:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b656e21",
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2629:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        },
                        "value": "You do not have enough AVAX token!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        }
                      ],
                      "id": 861,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2569:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2569:97:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "2569:97:4"
                },
                {
                  "assignments": [
                    873
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 873,
                      "mutability": "mutable",
                      "name": "collateralAmount",
                      "nameLocation": "2685:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 970,
                      "src": "2677:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 872,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2677:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 878,
                  "initialValue": {
                    "baseExpression": {
                      "id": 874,
                      "name": "AVAXCollateralLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "2704:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 877,
                    "indexExpression": {
                      "expression": {
                        "id": 875,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2725:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2729:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2725:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2704:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2677:59:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 882,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2824:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2828:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2824:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 886,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2844:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1576",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1576",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2836:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 884,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2836:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2836:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 888,
                        "name": "amountToReturn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "2851:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 879,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "2801:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$106",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2811:12:4",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 513,
                      "src": "2801:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 890,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:65:4"
                },
                {
                  "assignments": [
                    892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 892,
                      "mutability": "mutable",
                      "name": "lendingFeeToDeduct",
                      "nameLocation": "2947:18:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 970,
                      "src": "2939:26:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 891,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2939:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 897,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 894,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "2988:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 895,
                        "name": "_lendingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 678,
                        "src": "3006:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 893,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1492,
                      "src": "2968:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2968:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2939:79:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 903,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3102:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1576",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1576",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3094:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 901,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3094:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3094:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 905,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3109:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3113:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3109:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 907,
                              "name": "collateralAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 873,
                              "src": "3122:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 908,
                              "name": "lendingFeeToDeduct",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 892,
                              "src": "3141:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3122:37:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 910,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3121:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 898,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "3071:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$106",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3081:12:4",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 513,
                      "src": "3071:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3071:90:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 912,
                  "nodeType": "ExpressionStatement",
                  "src": "3071:90:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 918,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3227:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1576",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1576",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3219:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 916,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3219:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3219:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 920,
                            "name": "reserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "3234:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Reserves_$2402",
                              "typeString": "contract Reserves"
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3243:18:4",
                          "memberName": "getReservesAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2397,
                          "src": "3234:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3234:29:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 923,
                        "name": "lendingFeeToDeduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "3265:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 913,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "3196:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$106",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3206:12:4",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 513,
                      "src": "3196:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3196:88:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "3196:88:4"
                },
                {
                  "expression": {
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3333:39:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 926,
                        "name": "AVAXCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 686,
                        "src": "3340:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 929,
                      "indexExpression": {
                        "expression": {
                          "id": 927,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3361:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3365:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3361:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3340:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 931,
                  "nodeType": "ExpressionStatement",
                  "src": "3333:39:4"
                },
                {
                  "expression": {
                    "id": 936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3427:33:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 932,
                        "name": "AVAXLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 690,
                        "src": "3434:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 935,
                      "indexExpression": {
                        "expression": {
                          "id": 933,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3449:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3453:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3449:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3434:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 937,
                  "nodeType": "ExpressionStatement",
                  "src": "3427:33:4"
                },
                {
                  "expression": {
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3515:49:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 938,
                        "name": "AVAXCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "3522:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 941,
                      "indexExpression": {
                        "expression": {
                          "id": 939,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3553:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3557:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3553:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3522:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "3515:49:4"
                },
                {
                  "body": {
                    "id": 968,
                    "nodeType": "Block",
                    "src": "3623:112:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 955,
                              "name": "AVAXDebtors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 712,
                              "src": "3641:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 957,
                            "indexExpression": {
                              "id": 956,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 945,
                              "src": "3653:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3641:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 958,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3659:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3663:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3659:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3641:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 967,
                        "nodeType": "IfStatement",
                        "src": "3637:88:4",
                        "trueBody": {
                          "id": 966,
                          "nodeType": "Block",
                          "src": "3671:54:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 964,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "3689:21:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 961,
                                    "name": "AVAXDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 712,
                                    "src": "3696:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 963,
                                  "indexExpression": {
                                    "id": 962,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 945,
                                    "src": "3708:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3696:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 965,
                              "nodeType": "ExpressionStatement",
                              "src": "3689:21:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 948,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 945,
                      "src": "3594:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 949,
                        "name": "AVAXDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "3598:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3610:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3598:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3594:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 969,
                  "initializationExpression": {
                    "assignments": [
                      945
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 945,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3587:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 969,
                        "src": "3579:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 944,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3579:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 947,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3591:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3579:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3618:3:4",
                      "subExpression": {
                        "id": 952,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "3618:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 954,
                    "nodeType": "ExpressionStatement",
                    "src": "3618:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "3574:161:4"
                }
              ]
            },
            "functionSelector": "42b9309a",
            "id": 971,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 850,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 849,
                  "name": "onlyAVAXDebtHolder",
                  "nameLocations": [
                    "2358:18:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1546,
                  "src": "2358:18:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2358:18:4"
              },
              {
                "id": 852,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 851,
                  "name": "enoughAVAXInWallet",
                  "nameLocations": [
                    "2377:18:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1575,
                  "src": "2377:18:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2377:18:4"
              }
            ],
            "name": "repayAVAXDebt",
            "nameLocation": "2335:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2348:2:4"
            },
            "returnParameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2396:0:4"
            },
            "scope": 1576,
            "src": "2326:1415:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1021,
              "nodeType": "Block",
              "src": "3827:459:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 979,
                          "name": "topUpCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 973,
                          "src": "3854:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3873:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3854:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3876:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 978,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3846:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3846:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 984,
                  "nodeType": "ExpressionStatement",
                  "src": "3846:59:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 988,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3944:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3948:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3944:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 986,
                              "name": "avaxToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 663,
                              "src": "3924:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Avax_$106",
                                "typeString": "contract Avax"
                              }
                            },
                            "id": 987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3934:9:4",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 389,
                            "src": "3924:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3924:31:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 991,
                          "name": "topUpCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 973,
                          "src": "3959:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3924:50:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b656e21",
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3976:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        },
                        "value": "You do not have enough AVAX token!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        }
                      ],
                      "id": 985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3915:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3915:98:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "3915:98:4"
                },
                {
                  "assignments": [
                    997
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 997,
                      "mutability": "mutable",
                      "name": "topUpCollateralInUSD",
                      "nameLocation": "4031:20:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1021,
                      "src": "4023:28:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 996,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4023:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 998,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4023:28:4"
                },
                {
                  "expression": {
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 999,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 997,
                      "src": "4062:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1000,
                        "name": "topUpCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 973,
                        "src": "4085:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1001,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 672,
                            "src": "4103:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceFeed_$2174",
                              "typeString": "contract PriceFeed"
                            }
                          },
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4113:17:4",
                          "memberName": "getAvaxPriceFirst",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2165,
                          "src": "4103:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4103:29:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4085:47:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4062:70:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1006,
                  "nodeType": "ExpressionStatement",
                  "src": "4062:70:4"
                },
                {
                  "expression": {
                    "id": 1012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1007,
                        "name": "AVAXCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 686,
                        "src": "4152:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1010,
                      "indexExpression": {
                        "expression": {
                          "id": 1008,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4173:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4177:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4173:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4152:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1011,
                      "name": "topUpCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "4188:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4152:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1013,
                  "nodeType": "ExpressionStatement",
                  "src": "4152:51:4"
                },
                {
                  "expression": {
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1014,
                        "name": "AVAXCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "4213:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1017,
                      "indexExpression": {
                        "expression": {
                          "id": 1015,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4244:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4248:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4244:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4213:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1018,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 997,
                      "src": "4259:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4213:66:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1020,
                  "nodeType": "ExpressionStatement",
                  "src": "4213:66:4"
                }
              ]
            },
            "functionSelector": "b60d2617",
            "id": 1022,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 976,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 975,
                  "name": "onlyAVAXDebtHolder",
                  "nameLocations": [
                    "3808:18:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1546,
                  "src": "3808:18:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3808:18:4"
              }
            ],
            "name": "topUpAVAXCollateral",
            "nameLocation": "3756:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 973,
                  "mutability": "mutable",
                  "name": "topUpCollateral",
                  "nameLocation": "3784:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "3776:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3776:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3775:25:4"
            },
            "returnParameters": {
              "id": 977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3827:0:4"
            },
            "scope": 1576,
            "src": "3747:539:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1112,
              "nodeType": "Block",
              "src": "4325:1008:4",
              "statements": [
                {
                  "assignments": [
                    1026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1026,
                      "mutability": "mutable",
                      "name": "currentPriceOfAVAX",
                      "nameLocation": "4343:18:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1112,
                      "src": "4335:26:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1025,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4335:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1030,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1027,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 672,
                        "src": "4364:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceFeed_$2174",
                          "typeString": "contract PriceFeed"
                        }
                      },
                      "id": 1028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4374:23:4",
                      "memberName": "getAvaxPriceToLiquidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2173,
                      "src": "4364:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4364:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4335:64:4"
                },
                {
                  "body": {
                    "id": 1110,
                    "nodeType": "Block",
                    "src": "4455:872:4",
                    "statements": [
                      {
                        "assignments": [
                          1043
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1043,
                            "mutability": "mutable",
                            "name": "newCollateralPrice",
                            "nameLocation": "4477:18:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1110,
                            "src": "4469:26:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1042,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4469:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1053,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1044,
                                "name": "currentPriceOfAVAX",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1026,
                                "src": "4499:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "baseExpression": {
                                      "id": 1045,
                                      "name": "AVAXCollateralLedger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 686,
                                      "src": "4521:20:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1049,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 1046,
                                        "name": "AVAXDebtors",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 712,
                                        "src": "4542:11:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1048,
                                      "indexExpression": {
                                        "id": 1047,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1032,
                                        "src": "4554:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4542:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4521:36:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1050,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4520:38:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4499:59:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1052,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4498:61:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4469:90:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1054,
                            "name": "newCollateralPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1043,
                            "src": "4577:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 1055,
                              "name": "AVAXCollateralValueLedgerinUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "4599:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1059,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1056,
                                "name": "AVAXDebtors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 712,
                                "src": "4630:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1058,
                              "indexExpression": {
                                "id": 1057,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1032,
                                "src": "4642:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4630:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4599:46:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4577:68:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1109,
                        "nodeType": "IfStatement",
                        "src": "4573:744:4",
                        "trueBody": {
                          "id": 1108,
                          "nodeType": "Block",
                          "src": "4647:670:4",
                          "statements": [
                            {
                              "assignments": [
                                1062
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1062,
                                  "mutability": "mutable",
                                  "name": "accountAddress",
                                  "nameLocation": "4815:14:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1108,
                                  "src": "4807:22:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 1061,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4807:7:4",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1066,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1063,
                                  "name": "AVAXDebtors",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 712,
                                  "src": "4832:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1065,
                                "indexExpression": {
                                  "id": 1064,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1032,
                                  "src": "4844:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4832:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4807:39:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1072,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "4896:4:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Lending_$1576",
                                          "typeString": "contract Lending"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Lending_$1576",
                                          "typeString": "contract Lending"
                                        }
                                      ],
                                      "id": 1071,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4888:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1070,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4888:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1073,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4888:13:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 1074,
                                        "name": "liquidityPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 666,
                                        "src": "4903:13:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LiquidityPool_$2048",
                                          "typeString": "contract LiquidityPool"
                                        }
                                      },
                                      "id": 1075,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4917:12:4",
                                      "memberName": "getLPAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1994,
                                      "src": "4903:26:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 1076,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4903:28:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1077,
                                      "name": "AVAXCollateralLedger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 686,
                                      "src": "4933:20:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1079,
                                    "indexExpression": {
                                      "id": 1078,
                                      "name": "accountAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1062,
                                      "src": "4954:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4933:36:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1067,
                                    "name": "avaxToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 663,
                                    "src": "4865:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Avax_$106",
                                      "typeString": "contract Avax"
                                    }
                                  },
                                  "id": 1069,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4875:12:4",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 513,
                                  "src": "4865:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1080,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4865:105:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1081,
                              "nodeType": "ExpressionStatement",
                              "src": "4865:105:4"
                            },
                            {
                              "expression": {
                                "id": 1087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "4989:43:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1082,
                                    "name": "AVAXCollateralLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 686,
                                    "src": "4996:20:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1086,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1083,
                                      "name": "AVAXDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 712,
                                      "src": "5017:11:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1085,
                                    "indexExpression": {
                                      "id": 1084,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1032,
                                      "src": "5029:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5017:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4996:36:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1088,
                              "nodeType": "ExpressionStatement",
                              "src": "4989:43:4"
                            },
                            {
                              "expression": {
                                "id": 1094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "5102:37:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1089,
                                    "name": "AVAXLoanLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 690,
                                    "src": "5109:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1093,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1090,
                                      "name": "AVAXDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 712,
                                      "src": "5124:11:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1092,
                                    "indexExpression": {
                                      "id": 1091,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1032,
                                      "src": "5136:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5124:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5109:30:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1095,
                              "nodeType": "ExpressionStatement",
                              "src": "5102:37:4"
                            },
                            {
                              "expression": {
                                "id": 1101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "5209:53:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1096,
                                    "name": "AVAXCollateralValueLedgerinUSD",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 694,
                                    "src": "5216:30:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1100,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1097,
                                      "name": "AVAXDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 712,
                                      "src": "5247:11:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1099,
                                    "indexExpression": {
                                      "id": 1098,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1032,
                                      "src": "5259:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5247:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5216:46:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1102,
                              "nodeType": "ExpressionStatement",
                              "src": "5209:53:4"
                            },
                            {
                              "expression": {
                                "id": 1106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "5281:21:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1103,
                                    "name": "AVAXDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 712,
                                    "src": "5288:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1105,
                                  "indexExpression": {
                                    "id": 1104,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1032,
                                    "src": "5300:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5288:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1107,
                              "nodeType": "ExpressionStatement",
                              "src": "5281:21:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1035,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1032,
                      "src": "4426:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1036,
                        "name": "AVAXDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "4430:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4442:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4430:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4426:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1111,
                  "initializationExpression": {
                    "assignments": [
                      1032
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1032,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4419:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1111,
                        "src": "4414:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1031,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4414:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1034,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4423:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4414:10:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4450:3:4",
                      "subExpression": {
                        "id": 1039,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1032,
                        "src": "4450:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1041,
                    "nodeType": "ExpressionStatement",
                    "src": "4450:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "4409:918:4"
                }
              ]
            },
            "functionSelector": "db8bf7e6",
            "id": 1113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateAVAX",
            "nameLocation": "4302:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4315:2:4"
            },
            "returnParameters": {
              "id": 1024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4325:0:4"
            },
            "scope": 1576,
            "src": "4293:1040:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1198,
              "nodeType": "Block",
              "src": "5430:826:4",
              "statements": [
                {
                  "assignments": [
                    1119
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1119,
                      "mutability": "mutable",
                      "name": "depositCollateral",
                      "nameLocation": "5448:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1198,
                      "src": "5440:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1118,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5440:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1122,
                  "initialValue": {
                    "expression": {
                      "id": 1120,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "5468:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5472:5:4",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "5468:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5440:37:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1124,
                          "name": "depositCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1119,
                          "src": "5495:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5516:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5495:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5519:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 1123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5487:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5487:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1129,
                  "nodeType": "ExpressionStatement",
                  "src": "5487:61:4"
                },
                {
                  "assignments": [
                    1131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1131,
                      "mutability": "mutable",
                      "name": "depositCollateralInEth",
                      "nameLocation": "5566:22:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1198,
                      "src": "5558:30:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1130,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5558:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1135,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1132,
                      "name": "depositCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1119,
                      "src": "5591:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030303030303030303030303030303030",
                      "id": 1133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5611:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1000000000000000000"
                    },
                    "src": "5591:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5558:72:4"
                },
                {
                  "assignments": [
                    1137
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1137,
                      "mutability": "mutable",
                      "name": "depositCollateralInUSD",
                      "nameLocation": "5648:22:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1198,
                      "src": "5640:30:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1136,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5640:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1138,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5640:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1142,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5697:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5701:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5697:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1139,
                        "name": "ETHDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "5681:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5692:4:4",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5681:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5681:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1145,
                  "nodeType": "ExpressionStatement",
                  "src": "5681:27:4"
                },
                {
                  "expression": {
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1146,
                      "name": "depositCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1137,
                      "src": "5718:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1147,
                        "name": "depositCollateralInEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1131,
                        "src": "5743:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1148,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 672,
                            "src": "5768:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceFeed_$2174",
                              "typeString": "contract PriceFeed"
                            }
                          },
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5778:16:4",
                          "memberName": "getEthPriceFirst",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2149,
                          "src": "5768:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5768:28:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5743:53:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5718:78:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1153,
                  "nodeType": "ExpressionStatement",
                  "src": "5718:78:4"
                },
                {
                  "assignments": [
                    1155
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1155,
                      "mutability": "mutable",
                      "name": "_loanAmount",
                      "nameLocation": "5824:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1198,
                      "src": "5816:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1154,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5816:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1160,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1157,
                        "name": "depositCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "5858:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1158,
                        "name": "_maximumLendingPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "5877:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1156,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1492,
                      "src": "5838:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5838:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5816:87:4"
                },
                {
                  "expression": {
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1161,
                        "name": "ETHCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "5933:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1164,
                      "indexExpression": {
                        "expression": {
                          "id": 1162,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5953:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5957:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5953:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5933:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1165,
                      "name": "depositCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1119,
                      "src": "5967:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5933:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1167,
                  "nodeType": "ExpressionStatement",
                  "src": "5933:51:4"
                },
                {
                  "expression": {
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1168,
                        "name": "ETHLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 702,
                        "src": "5994:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1171,
                      "indexExpression": {
                        "expression": {
                          "id": 1169,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6008:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6012:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6008:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5994:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1172,
                      "name": "_loanAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1155,
                      "src": "6022:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5994:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1174,
                  "nodeType": "ExpressionStatement",
                  "src": "5994:39:4"
                },
                {
                  "expression": {
                    "id": 1180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1175,
                        "name": "ETHCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "6043:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1178,
                      "indexExpression": {
                        "expression": {
                          "id": 1176,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6073:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6077:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6073:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6043:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1179,
                      "name": "depositCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1137,
                      "src": "6087:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6043:66:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1181,
                  "nodeType": "ExpressionStatement",
                  "src": "6043:66:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1185,
                        "name": "_loanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1155,
                        "src": "6158:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1188,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6179:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6183:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6179:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6171:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1186,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6171:8:4",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6171:19:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 1182,
                        "name": "liquidityPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "6128:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$2048",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 1184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6142:15:4",
                      "memberName": "sendEthToLender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2043,
                      "src": "6128:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_payable_$returns$__$",
                        "typeString": "function (uint256,address payable) external"
                      }
                    },
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6128:63:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1192,
                  "nodeType": "ExpressionStatement",
                  "src": "6128:63:4"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1193,
                      "name": "ETHCollateralValueLedgerinUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "6208:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1196,
                    "indexExpression": {
                      "expression": {
                        "id": 1194,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "6238:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6242:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6238:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6208:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1117,
                  "id": 1197,
                  "nodeType": "Return",
                  "src": "6201:48:4"
                }
              ]
            },
            "functionSelector": "4fed0518",
            "id": 1199,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrowEth",
            "nameLocation": "5385:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5394:2:4"
            },
            "returnParameters": {
              "id": 1117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1199,
                  "src": "5421:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5421:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5420:9:4"
            },
            "scope": 1576,
            "src": "5376:880:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1247,
              "nodeType": "Block",
              "src": "6325:467:4",
              "statements": [
                {
                  "assignments": [
                    1205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1205,
                      "mutability": "mutable",
                      "name": "topUpCollateral",
                      "nameLocation": "6343:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1247,
                      "src": "6335:23:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1204,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6335:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1208,
                  "initialValue": {
                    "expression": {
                      "id": 1206,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "6361:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6365:5:4",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "6361:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6335:35:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1210,
                          "name": "topUpCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1205,
                          "src": "6388:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6407:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6388:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 1213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6410:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 1209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6380:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6380:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1215,
                  "nodeType": "ExpressionStatement",
                  "src": "6380:59:4"
                },
                {
                  "assignments": [
                    1217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1217,
                      "mutability": "mutable",
                      "name": "topUpCollateralInEth",
                      "nameLocation": "6457:20:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1247,
                      "src": "6449:28:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1216,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6449:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1221,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1218,
                      "name": "topUpCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1205,
                      "src": "6480:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030303030303030303030303030303030",
                      "id": 1219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6498:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1000000000000000000"
                    },
                    "src": "6480:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6449:68:4"
                },
                {
                  "assignments": [
                    1223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1223,
                      "mutability": "mutable",
                      "name": "topUpCollateralInUSD",
                      "nameLocation": "6535:20:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1247,
                      "src": "6527:28:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6527:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1224,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6527:28:4"
                },
                {
                  "expression": {
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1225,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1223,
                      "src": "6566:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1226,
                        "name": "topUpCollateralInEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1217,
                        "src": "6589:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1227,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 672,
                            "src": "6612:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceFeed_$2174",
                              "typeString": "contract PriceFeed"
                            }
                          },
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6622:16:4",
                          "memberName": "getEthPriceFirst",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2149,
                          "src": "6612:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6612:28:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6589:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6566:74:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "6566:74:4"
                },
                {
                  "expression": {
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1233,
                        "name": "ETHCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "6660:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1236,
                      "indexExpression": {
                        "expression": {
                          "id": 1234,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6680:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6684:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6680:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6660:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1237,
                      "name": "topUpCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1205,
                      "src": "6695:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6660:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "6660:50:4"
                },
                {
                  "expression": {
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1240,
                        "name": "ETHCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "6720:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1243,
                      "indexExpression": {
                        "expression": {
                          "id": 1241,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6750:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6754:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6750:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6720:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1244,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1223,
                      "src": "6765:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6720:65:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1246,
                  "nodeType": "ExpressionStatement",
                  "src": "6720:65:4"
                }
              ]
            },
            "functionSelector": "2b0fa399",
            "id": 1248,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1202,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1201,
                  "name": "onlyEthDebtHolder",
                  "nameLocations": [
                    "6307:17:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1560,
                  "src": "6307:17:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "6307:17:4"
              }
            ],
            "name": "topUpETHCollateral",
            "nameLocation": "6271:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6289:2:4"
            },
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6325:0:4"
            },
            "scope": 1576,
            "src": "6262:530:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1383,
              "nodeType": "Block",
              "src": "6856:1456:4",
              "statements": [
                {
                  "assignments": [
                    1254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1254,
                      "mutability": "mutable",
                      "name": "amountToReturn",
                      "nameLocation": "6939:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1383,
                      "src": "6931:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1253,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6931:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1259,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1255,
                      "name": "ETHLoanLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 702,
                      "src": "6956:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1258,
                    "indexExpression": {
                      "expression": {
                        "id": 1256,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "6970:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6974:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6970:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6956:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6931:50:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1261,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7043:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7047:5:4",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7043:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1263,
                          "name": "amountToReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "7056:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7043:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c756520696e736572746564206973206e6f7420656e6f756768",
                        "id": 1265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7072:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
                          "typeString": "literal_string \"Value inserted is not enough\""
                        },
                        "value": "Value inserted is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
                          "typeString": "literal_string \"Value inserted is not enough\""
                        }
                      ],
                      "id": 1260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7034:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7034:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1267,
                  "nodeType": "ExpressionStatement",
                  "src": "7034:69:4"
                },
                {
                  "assignments": [
                    1269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1269,
                      "mutability": "mutable",
                      "name": "collateralAmount",
                      "nameLocation": "7121:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1383,
                      "src": "7113:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1268,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7113:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1274,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1270,
                      "name": "ETHCollateralLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 698,
                      "src": "7140:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1273,
                    "indexExpression": {
                      "expression": {
                        "id": 1271,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7160:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7164:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7160:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7140:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7113:58:4"
                },
                {
                  "assignments": [
                    1276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1276,
                      "mutability": "mutable",
                      "name": "lendingFeeToDeduct",
                      "nameLocation": "7252:18:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1383,
                      "src": "7244:26:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1275,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7244:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1281,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1278,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1269,
                        "src": "7293:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1279,
                        "name": "_lendingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 678,
                        "src": "7311:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1277,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1492,
                      "src": "7273:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7273:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7244:79:4"
                },
                {
                  "assignments": [
                    1283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1283,
                      "mutability": "mutable",
                      "name": "addressToSend",
                      "nameLocation": "7392:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1383,
                      "src": "7376:29:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1282,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7376:15:4",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1289,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1286,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7417:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7421:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7417:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7408:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1284,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7408:9:4",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7408:20:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7376:52:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1293,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1269,
                          "src": "7461:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1294,
                          "name": "lendingFeeToDeduct",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1276,
                          "src": "7480:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7461:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1290,
                        "name": "addressToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1283,
                        "src": "7438:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7452:8:4",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7438:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7438:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1297,
                  "nodeType": "ExpressionStatement",
                  "src": "7438:61:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1301,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "7552:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Lending_$1576",
                                  "typeString": "contract Lending"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Lending_$1576",
                                  "typeString": "contract Lending"
                                }
                              ],
                              "id": 1300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7544:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1299,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7544:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7544:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7558:7:4",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "7544:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1304,
                          "name": "amountToReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "7569:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7544:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f52",
                        "id": 1306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7585:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
                          "typeString": "literal_string \"ERROR\""
                        },
                        "value": "ERROR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
                          "typeString": "literal_string \"ERROR\""
                        }
                      ],
                      "id": 1298,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7535:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7535:58:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1308,
                  "nodeType": "ExpressionStatement",
                  "src": "7535:58:4"
                },
                {
                  "assignments": [
                    1310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1310,
                      "mutability": "mutable",
                      "name": "lpAddress",
                      "nameLocation": "7619:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1383,
                      "src": "7603:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1309,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7603:15:4",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1317,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1313,
                            "name": "liquidityPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 666,
                            "src": "7640:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityPool_$2048",
                              "typeString": "contract LiquidityPool"
                            }
                          },
                          "id": 1314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7654:12:4",
                          "memberName": "getLPAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1994,
                          "src": "7640:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7640:28:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7631:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1311,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7631:9:4",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7631:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7603:66:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1321,
                        "name": "amountToReturn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "7698:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1318,
                        "name": "lpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1310,
                        "src": "7679:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7689:8:4",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7679:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7679:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1323,
                  "nodeType": "ExpressionStatement",
                  "src": "7679:34:4"
                },
                {
                  "assignments": [
                    1325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1325,
                      "mutability": "mutable",
                      "name": "reservesAddress",
                      "nameLocation": "7780:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1383,
                      "src": "7764:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1324,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7764:15:4",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1332,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1328,
                            "name": "reserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "7806:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Reserves_$2402",
                              "typeString": "contract Reserves"
                            }
                          },
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7815:18:4",
                          "memberName": "getReservesAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2397,
                          "src": "7806:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7806:29:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7798:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1326,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7798:8:4",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7798:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7764:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1336,
                        "name": "lendingFeeToDeduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1276,
                        "src": "7871:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1333,
                        "name": "reservesAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1325,
                        "src": "7846:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7862:8:4",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7846:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7846:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1338,
                  "nodeType": "ExpressionStatement",
                  "src": "7846:44:4"
                },
                {
                  "expression": {
                    "id": 1343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "7901:38:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1339,
                        "name": "ETHCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "7908:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1342,
                      "indexExpression": {
                        "expression": {
                          "id": 1340,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7928:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7932:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7928:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7908:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1344,
                  "nodeType": "ExpressionStatement",
                  "src": "7901:38:4"
                },
                {
                  "expression": {
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "7994:32:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1345,
                        "name": "ETHLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 702,
                        "src": "8001:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1348,
                      "indexExpression": {
                        "expression": {
                          "id": 1346,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8015:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8019:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8015:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8001:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1350,
                  "nodeType": "ExpressionStatement",
                  "src": "7994:32:4"
                },
                {
                  "expression": {
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "8081:48:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1351,
                        "name": "ETHCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "8088:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1354,
                      "indexExpression": {
                        "expression": {
                          "id": 1352,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8118:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8122:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8118:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8088:41:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1356,
                  "nodeType": "ExpressionStatement",
                  "src": "8081:48:4"
                },
                {
                  "body": {
                    "id": 1381,
                    "nodeType": "Block",
                    "src": "8196:110:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1368,
                              "name": "ETHDebtors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "8214:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1370,
                            "indexExpression": {
                              "id": 1369,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1358,
                              "src": "8225:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8214:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1371,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "8231:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8235:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8231:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8214:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1380,
                        "nodeType": "IfStatement",
                        "src": "8210:86:4",
                        "trueBody": {
                          "id": 1379,
                          "nodeType": "Block",
                          "src": "8243:53:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 1377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "8261:20:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1374,
                                    "name": "ETHDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 709,
                                    "src": "8268:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1376,
                                  "indexExpression": {
                                    "id": 1375,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1358,
                                    "src": "8279:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8268:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1378,
                              "nodeType": "ExpressionStatement",
                              "src": "8261:20:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1361,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1358,
                      "src": "8168:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1362,
                        "name": "ETHDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "8172:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8183:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8172:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8168:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1382,
                  "initializationExpression": {
                    "assignments": [
                      1358
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1358,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8161:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1382,
                        "src": "8153:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1357,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8153:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1360,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8165:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8153:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8191:3:4",
                      "subExpression": {
                        "id": 1365,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1358,
                        "src": "8191:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1367,
                    "nodeType": "ExpressionStatement",
                    "src": "8191:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "8148:158:4"
                }
              ]
            },
            "functionSelector": "4a282670",
            "id": 1384,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1251,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1250,
                  "name": "onlyEthDebtHolder",
                  "nameLocations": [
                    "6838:17:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1560,
                  "src": "6838:17:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "6838:17:4"
              }
            ],
            "name": "repayEth",
            "nameLocation": "6812:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6820:2:4"
            },
            "returnParameters": {
              "id": 1252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6856:0:4"
            },
            "scope": 1576,
            "src": "6803:1509:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1474,
              "nodeType": "Block",
              "src": "8368:918:4",
              "statements": [
                {
                  "assignments": [
                    1388
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1388,
                      "mutability": "mutable",
                      "name": "currentPriceOfEth",
                      "nameLocation": "8386:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1474,
                      "src": "8378:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1387,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8378:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1392,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1389,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 672,
                        "src": "8406:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceFeed_$2174",
                          "typeString": "contract PriceFeed"
                        }
                      },
                      "id": 1390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8416:22:4",
                      "memberName": "getEthPriceToLiquidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2157,
                      "src": "8406:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8406:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8378:62:4"
                },
                {
                  "body": {
                    "id": 1472,
                    "nodeType": "Block",
                    "src": "8495:785:4",
                    "statements": [
                      {
                        "assignments": [
                          1405
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1405,
                            "mutability": "mutable",
                            "name": "newCollateralPrice",
                            "nameLocation": "8517:18:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1472,
                            "src": "8509:26:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1404,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8509:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1417,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1406,
                                "name": "currentPriceOfEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1388,
                                "src": "8539:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1413,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 1407,
                                        "name": "ETHCollateralLedger",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 698,
                                        "src": "8560:19:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1411,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 1408,
                                          "name": "ETHDebtors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 709,
                                          "src": "8580:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 1410,
                                        "indexExpression": {
                                          "id": 1409,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1394,
                                          "src": "8591:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8580:13:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8560:34:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "31303030303030303030303030303030303030",
                                      "id": 1412,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8597:19:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "value": "1000000000000000000"
                                    },
                                    "src": "8560:56:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1414,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8559:58:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8539:78:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1416,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8538:80:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8509:109:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1418,
                            "name": "newCollateralPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1405,
                            "src": "8636:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 1419,
                              "name": "ETHCollateralValueLedgerinUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 706,
                              "src": "8658:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1423,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1420,
                                "name": "ETHDebtors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 709,
                                "src": "8688:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1422,
                              "indexExpression": {
                                "id": 1421,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1394,
                                "src": "8699:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8688:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8658:44:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8636:66:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1471,
                        "nodeType": "IfStatement",
                        "src": "8632:638:4",
                        "trueBody": {
                          "id": 1470,
                          "nodeType": "Block",
                          "src": "8704:566:4",
                          "statements": [
                            {
                              "assignments": [
                                1426
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1426,
                                  "mutability": "mutable",
                                  "name": "addressToSend",
                                  "nameLocation": "8800:13:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1470,
                                  "src": "8784:29:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1425,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8784:15:4",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1433,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 1429,
                                        "name": "liquidityPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 666,
                                        "src": "8825:13:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LiquidityPool_$2048",
                                          "typeString": "contract LiquidityPool"
                                        }
                                      },
                                      "id": 1430,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "8839:12:4",
                                      "memberName": "getLPAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1994,
                                      "src": "8825:26:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 1431,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8825:28:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1428,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8816:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1427,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8816:9:4",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8816:38:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8784:70:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1437,
                                      "name": "ETHCollateralLedger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 698,
                                      "src": "8895:19:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1441,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 1438,
                                        "name": "ETHDebtors",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 709,
                                        "src": "8915:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1440,
                                      "indexExpression": {
                                        "id": 1439,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1394,
                                        "src": "8926:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8915:13:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8895:34:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1434,
                                    "name": "addressToSend",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1426,
                                    "src": "8872:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1436,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8886:8:4",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "8872:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8872:58:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1443,
                              "nodeType": "ExpressionStatement",
                              "src": "8872:58:4"
                            },
                            {
                              "expression": {
                                "id": 1449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "8949:41:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1444,
                                    "name": "ETHCollateralLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 698,
                                    "src": "8956:19:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1448,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1445,
                                      "name": "ETHDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 709,
                                      "src": "8976:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1447,
                                    "indexExpression": {
                                      "id": 1446,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1394,
                                      "src": "8987:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8976:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8956:34:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1450,
                              "nodeType": "ExpressionStatement",
                              "src": "8949:41:4"
                            },
                            {
                              "expression": {
                                "id": 1456,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "9060:35:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1451,
                                    "name": "ETHLoanLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 702,
                                    "src": "9067:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1455,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1452,
                                      "name": "ETHDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 709,
                                      "src": "9081:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1454,
                                    "indexExpression": {
                                      "id": 1453,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1394,
                                      "src": "9092:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9081:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9067:28:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1457,
                              "nodeType": "ExpressionStatement",
                              "src": "9060:35:4"
                            },
                            {
                              "expression": {
                                "id": 1463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "9165:51:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1458,
                                    "name": "ETHCollateralValueLedgerinUSD",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 706,
                                    "src": "9172:29:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1462,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1459,
                                      "name": "ETHDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 709,
                                      "src": "9202:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1461,
                                    "indexExpression": {
                                      "id": 1460,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1394,
                                      "src": "9213:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9202:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9172:44:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1464,
                              "nodeType": "ExpressionStatement",
                              "src": "9165:51:4"
                            },
                            {
                              "expression": {
                                "id": 1468,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "9235:20:4",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1465,
                                    "name": "ETHDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 709,
                                    "src": "9242:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1467,
                                  "indexExpression": {
                                    "id": 1466,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1394,
                                    "src": "9253:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9242:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1469,
                              "nodeType": "ExpressionStatement",
                              "src": "9235:20:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1397,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1394,
                      "src": "8467:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1398,
                        "name": "ETHDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "8471:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8482:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8471:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8467:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1473,
                  "initializationExpression": {
                    "assignments": [
                      1394
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1394,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8460:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1473,
                        "src": "8455:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1393,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8455:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1396,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8464:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8455:10:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8490:3:4",
                      "subExpression": {
                        "id": 1401,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1394,
                        "src": "8490:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1403,
                    "nodeType": "ExpressionStatement",
                    "src": "8490:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "8450:830:4"
                }
              ]
            },
            "functionSelector": "734997e5",
            "id": 1475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateETH",
            "nameLocation": "8338:12:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8350:2:4"
            },
            "returnParameters": {
              "id": 1386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8368:0:4"
            },
            "scope": 1576,
            "src": "8329:957:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1491,
              "nodeType": "Block",
              "src": "9620:64:4",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1484,
                            "name": "collateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1477,
                            "src": "9638:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1485,
                            "name": "percentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1479,
                            "src": "9657:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9638:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1487,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9637:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31305f303030",
                      "id": 1488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9671:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10_000"
                    },
                    "src": "9637:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1483,
                  "id": 1490,
                  "nodeType": "Return",
                  "src": "9630:47:4"
                }
              ]
            },
            "functionSelector": "2133e3b9",
            "id": 1492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePercentage",
            "nameLocation": "9524:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1477,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "9552:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1492,
                  "src": "9544:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9544:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1479,
                  "mutability": "mutable",
                  "name": "percentage",
                  "nameLocation": "9578:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1492,
                  "src": "9570:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9570:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9543:46:4"
            },
            "returnParameters": {
              "id": 1483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1482,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1492,
                  "src": "9611:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9611:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9610:9:4"
            },
            "scope": 1576,
            "src": "9515:169:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1505,
              "nodeType": "Block",
              "src": "9756:58:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1501,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "9801:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$1576",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$1576",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9793:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1499,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9793:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9793:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1497,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "9773:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$106",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 1498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9783:9:4",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 389,
                      "src": "9773:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9773:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1496,
                  "id": 1504,
                  "nodeType": "Return",
                  "src": "9766:41:4"
                }
              ]
            },
            "functionSelector": "4b84a647",
            "id": 1506,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHoldingAVAXCollateral",
            "nameLocation": "9699:24:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9723:2:4"
            },
            "returnParameters": {
              "id": 1496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1495,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1506,
                  "src": "9747:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9747:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9746:9:4"
            },
            "scope": 1576,
            "src": "9690:124:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1517,
              "nodeType": "Block",
              "src": "9885:45:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1513,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "9910:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Lending_$1576",
                            "typeString": "contract Lending"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Lending_$1576",
                            "typeString": "contract Lending"
                          }
                        ],
                        "id": 1512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9902:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1511,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9902:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9902:13:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9916:7:4",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "9902:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1510,
                  "id": 1516,
                  "nodeType": "Return",
                  "src": "9895:28:4"
                }
              ]
            },
            "functionSelector": "fcd6e191",
            "id": 1518,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHoldingEthCollateral",
            "nameLocation": "9829:23:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9852:2:4"
            },
            "returnParameters": {
              "id": 1510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1509,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1518,
                  "src": "9876:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9876:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9875:9:4"
            },
            "scope": 1576,
            "src": "9820:110:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1531,
              "nodeType": "Block",
              "src": "10080:52:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 1525,
                          "name": "AVAXLoanLedger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 690,
                          "src": "10098:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1528,
                        "indexExpression": {
                          "expression": {
                            "id": 1526,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10113:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10117:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10113:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10098:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1529,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10097:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1524,
                  "id": 1530,
                  "nodeType": "Return",
                  "src": "10090:35:4"
                }
              ]
            },
            "functionSelector": "23ded52a",
            "id": 1532,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1521,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1520,
                  "name": "onlyAVAXDebtHolder",
                  "nameLocations": [
                    "10043:18:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1546,
                  "src": "10043:18:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "10043:18:4"
              }
            ],
            "name": "getAVAXDebt",
            "nameLocation": "10017:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10028:2:4"
            },
            "returnParameters": {
              "id": 1524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1523,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "10071:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10071:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10070:9:4"
            },
            "scope": 1576,
            "src": "10008:124:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1545,
              "nodeType": "Block",
              "src": "10168:107:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1535,
                            "name": "AVAXLoanLedger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 690,
                            "src": "10186:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1538,
                          "indexExpression": {
                            "expression": {
                              "id": 1536,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "10201:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10205:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10201:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10186:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10215:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10186:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520616e79206f75747374616e64696e672064656274",
                        "id": 1541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10218:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
                          "typeString": "literal_string \"You do not have any outstanding debt\""
                        },
                        "value": "You do not have any outstanding debt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
                          "typeString": "literal_string \"You do not have any outstanding debt\""
                        }
                      ],
                      "id": 1534,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10178:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10178:79:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1543,
                  "nodeType": "ExpressionStatement",
                  "src": "10178:79:4"
                },
                {
                  "id": 1544,
                  "nodeType": "PlaceholderStatement",
                  "src": "10267:1:4"
                }
              ]
            },
            "id": 1546,
            "name": "onlyAVAXDebtHolder",
            "nameLocation": "10147:18:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10165:2:4"
            },
            "src": "10138:137:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1559,
              "nodeType": "Block",
              "src": "10310:102:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1549,
                            "name": "ETHLoanLedger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 702,
                            "src": "10328:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1552,
                          "indexExpression": {
                            "expression": {
                              "id": 1550,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "10342:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10346:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10342:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10328:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10356:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10328:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f742068617665206f75747374616e64696e672064656274",
                        "id": 1555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10359:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
                          "typeString": "literal_string \"You do not have outstanding debt\""
                        },
                        "value": "You do not have outstanding debt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
                          "typeString": "literal_string \"You do not have outstanding debt\""
                        }
                      ],
                      "id": 1548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10320:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10320:74:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1557,
                  "nodeType": "ExpressionStatement",
                  "src": "10320:74:4"
                },
                {
                  "id": 1558,
                  "nodeType": "PlaceholderStatement",
                  "src": "10404:1:4"
                }
              ]
            },
            "id": 1560,
            "name": "onlyEthDebtHolder",
            "nameLocation": "10290:17:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10307:2:4"
            },
            "src": "10281:131:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1574,
              "nodeType": "Block",
              "src": "10453:122:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1565,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "10491:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10495:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10491:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1563,
                              "name": "avaxToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 663,
                              "src": "10471:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Avax_$106",
                                "typeString": "contract Avax"
                              }
                            },
                            "id": 1564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10481:9:4",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 389,
                            "src": "10471:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10471:31:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10505:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10471:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768205553444320746f20726570617920746869732064656274",
                        "id": 1570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10508:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8",
                          "typeString": "literal_string \"You do not have enough USDC to repay this debt\""
                        },
                        "value": "You do not have enough USDC to repay this debt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8",
                          "typeString": "literal_string \"You do not have enough USDC to repay this debt\""
                        }
                      ],
                      "id": 1562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10463:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10463:94:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1572,
                  "nodeType": "ExpressionStatement",
                  "src": "10463:94:4"
                },
                {
                  "id": 1573,
                  "nodeType": "PlaceholderStatement",
                  "src": "10567:1:4"
                }
              ]
            },
            "id": 1575,
            "name": "enoughAVAXInWallet",
            "nameLocation": "10432:18:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10450:2:4"
            },
            "src": "10423:152:4",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1577,
        "src": "181:10396:4",
        "usedErrors": []
      }
    ],
    "src": "32:10545:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-03-09T10:36:28.857Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}