{
  "contractName": "Lending",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Avax",
          "name": "avaxTokenAddress",
          "type": "address"
        },
        {
          "internalType": "contract LiquidityPool",
          "name": "lp",
          "type": "address"
        },
        {
          "internalType": "contract Reserves",
          "name": "reservesAddress",
          "type": "address"
        },
        {
          "internalType": "contract PriceFeed",
          "name": "pf",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "depositCollateral",
          "type": "uint256"
        }
      ],
      "name": "borrowAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "repayAVAXDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "topUpCollateral",
          "type": "uint256"
        }
      ],
      "name": "topUpAVAXCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidateAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "topUpETHCollateral",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "repayEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "liquidateETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getUserTotaETHRepaymentAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getUserTotaAVAXRepaymentAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "initUserTotalEthRepaymentAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initUserTotalAVAXRepaymentAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "percentage",
          "type": "uint256"
        }
      ],
      "name": "calculatePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getHoldingAVAXCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getHoldingEthCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAVAXDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getTotalTransactionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Avax\",\"name\":\"avaxTokenAddress\",\"type\":\"address\"},{\"internalType\":\"contract LiquidityPool\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"contract Reserves\",\"name\":\"reservesAddress\",\"type\":\"address\"},{\"internalType\":\"contract PriceFeed\",\"name\":\"pf\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"depositCollateral\",\"type\":\"uint256\"}],\"name\":\"borrowAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"calculatePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAVAXDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHoldingAVAXCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHoldingEthCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTotalTransactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserTotaAVAXRepaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserTotaETHRepaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initUserTotalAVAXRepaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initUserTotalEthRepaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"repayAVAXDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"repayEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"topUpCollateral\",\"type\":\"uint256\"}],\"name\":\"topUpAVAXCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topUpETHCollateral\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Lending.sol\":\"Lending\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Avax.sol\":{\"keccak256\":\"0x76c6d23036985af800ac83d13f2344ed4aa4b150f131105d065536bcc6524f50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e990488108af0835f96864b8215ed1618ec7520bebb303fc52891ef12a558ee\",\"dweb:/ipfs/QmVJC2CvE3zHqw2B6mYVijvyevJJxDwdW1674rbUwyPnKC\"]},\"project:/contracts/ERC20.sol\":{\"keccak256\":\"0xfeef30ad2b2473035147ce29aedc86f3af9da74a44013bd0b232a387039ac7e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f1ceef2c3f56e2da1fa62b8ae94e8ba6cb3c184a0bc193bfa63684152cfe94d\",\"dweb:/ipfs/QmYoUkcUyb4Ze4iiK3Zx1GweZdHnaPtMK76Fxtqx9hjJR4\"]},\"project:/contracts/Lending.sol\":{\"keccak256\":\"0x2fd479585b54f2860306791a787520940bc9c3fcc2cdacdbcdd61a19583cb2b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2aee815577e4cfed1d817ff892e46ecf29d260376d5241d295e8c4e13a70fe\",\"dweb:/ipfs/QmdG2cQvbSRsjck1Q3SAxyWzCpzDxhXbMNupDsHXfXircZ\"]},\"project:/contracts/LiquidityPool.sol\":{\"keccak256\":\"0xcaa68e052c37c0ca7ad3f952f463bba2c5923e88dcd8c9af88fde44d8bcec478\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9200187b90b5990dec5ec8fd8f7b67b30f32fbf1c3682c6ed74237730c37f19\",\"dweb:/ipfs/QmaQMdppYk4SVSrCrrwp3ErKv3nYUKEoJU4M3za2kN7u39\"]},\"project:/contracts/PriceFeed.sol\":{\"keccak256\":\"0x190137437d41a4b57d199f3d03612177129834aa1705e6d8015590fbf30d23b1\",\"urls\":[\"bzz-raw://b6748338e100de69cdf82df66af5dd8fbde4d13b2f09692f9a97781d2b5f2a9a\",\"dweb:/ipfs/QmUtSeAJWosp4D2XvPfLg15VEkCa66mHAvtfqQZ8v6YHjX\"]},\"project:/contracts/Reserves.sol\":{\"keccak256\":\"0xcdcf784661018652289847931f5979876afb0f1a4e606bfd198d3830cd79f75c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91f25ba593f6e50798fef42bbfffa6240c4ffabaf9b0519abcb623efc5e8ee5c\",\"dweb:/ipfs/QmWziNrYM5bnDVDUQUzUJNEA55HxCMjbiCnudY4qovNfys\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3516:16",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:16",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:16",
                "type": ""
              }
            ],
            "src": "7:75:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:16"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:16"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:16",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:16",
                "type": ""
              }
            ],
            "src": "334:126:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:16",
                "type": ""
              }
            ],
            "src": "466:96:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "625:51:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "635:35:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "664:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "646:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "646:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "635:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Avax_$106",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "607:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "617:7:16",
                "type": ""
              }
            ],
            "src": "568:108:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "737:91:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "806:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "815:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "818:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "808:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "808:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "808:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "760:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "797:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Avax_$106",
                              "nodeType": "YulIdentifier",
                              "src": "767:29:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "767:36:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "757:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "757:47:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "750:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "750:55:16"
                  },
                  "nodeType": "YulIf",
                  "src": "747:75:16"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Avax_$106",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "730:5:16",
                "type": ""
              }
            ],
            "src": "682:146:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "909:92:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "919:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "934:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "928:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "928:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "919:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "989:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Avax_$106",
                      "nodeType": "YulIdentifier",
                      "src": "950:38:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "950:45:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "950:45:16"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Avax_$106_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "887:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "895:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "903:5:16",
                "type": ""
              }
            ],
            "src": "834:167:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1060:51:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1070:35:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1099:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1081:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1081:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1070:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1042:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1052:7:16",
                "type": ""
              }
            ],
            "src": "1007:104:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1184:59:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1194:43:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1231:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "1205:25:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1205:32:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1194:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_LiquidityPool_$2731",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1166:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1176:7:16",
                "type": ""
              }
            ],
            "src": "1117:126:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1314:101:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1393:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1402:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1405:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1395:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1395:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1395:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1337:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1384:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_LiquidityPool_$2731",
                              "nodeType": "YulIdentifier",
                              "src": "1344:39:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1344:46:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1334:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1334:57:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1327:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1327:65:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1324:85:16"
                }
              ]
            },
            "name": "validator_revert_t_contract$_LiquidityPool_$2731",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1307:5:16",
                "type": ""
              }
            ],
            "src": "1249:166:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1506:102:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1516:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1531:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1525:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1525:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1516:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1596:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_LiquidityPool_$2731",
                      "nodeType": "YulIdentifier",
                      "src": "1547:48:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1547:55:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1547:55:16"
                }
              ]
            },
            "name": "abi_decode_t_contract$_LiquidityPool_$2731_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1484:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1492:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1500:5:16",
                "type": ""
              }
            ],
            "src": "1421:187:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1676:59:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1686:43:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1723:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "1697:25:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1697:32:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1686:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Reserves_$4022",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1658:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1668:7:16",
                "type": ""
              }
            ],
            "src": "1614:121:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1801:96:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1875:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1884:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1887:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1877:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1877:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1877:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1824:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1866:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Reserves_$4022",
                              "nodeType": "YulIdentifier",
                              "src": "1831:34:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1831:41:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1821:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1821:52:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1814:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1814:60:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1811:80:16"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Reserves_$4022",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1794:5:16",
                "type": ""
              }
            ],
            "src": "1741:156:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1983:97:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1993:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2008:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2002:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2002:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1993:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2068:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Reserves_$4022",
                      "nodeType": "YulIdentifier",
                      "src": "2024:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2024:50:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2024:50:16"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Reserves_$4022_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1961:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1969:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1977:5:16",
                "type": ""
              }
            ],
            "src": "1903:177:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2149:51:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2159:35:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2188:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2170:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2170:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2159:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_PriceFeed_$3794",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2131:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2141:7:16",
                "type": ""
              }
            ],
            "src": "2086:114:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2267:97:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2342:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2351:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2354:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2344:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2344:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2344:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2290:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2333:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_PriceFeed_$3794",
                              "nodeType": "YulIdentifier",
                              "src": "2297:35:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2297:42:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2287:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2287:53:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2280:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2280:61:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2277:81:16"
                }
              ]
            },
            "name": "validator_revert_t_contract$_PriceFeed_$3794",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2260:5:16",
                "type": ""
              }
            ],
            "src": "2206:158:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2451:98:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2461:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2476:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2470:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2470:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2461:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2537:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_PriceFeed_$3794",
                      "nodeType": "YulIdentifier",
                      "src": "2492:44:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2492:51:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2492:51:16"
                }
              ]
            },
            "name": "abi_decode_t_contract$_PriceFeed_$3794_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2429:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2437:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2445:5:16",
                "type": ""
              }
            ],
            "src": "2370:179:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2752:761:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2799:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2801:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2801:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2801:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2773:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2782:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2769:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2769:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2794:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2765:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2765:33:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2762:120:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2892:140:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2907:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2921:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2911:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2936:86:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2994:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3005:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2990:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2990:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3014:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Avax_$106_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2946:43:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2946:76:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2936:6:16"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3042:151:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3057:16:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3071:2:16",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3061:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3087:96:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3155:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3166:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3151:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3151:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3175:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_LiquidityPool_$2731_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3097:53:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3097:86:16"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3087:6:16"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3203:146:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3218:16:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3232:2:16",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3222:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3248:91:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3311:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3322:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3307:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3307:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3331:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Reserves_$4022_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3258:48:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3258:81:16"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3248:6:16"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3359:147:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3374:16:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3388:2:16",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3378:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3404:92:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3468:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3479:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3464:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3464:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3488:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PriceFeed_$3794_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3414:49:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3414:82:16"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3404:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Avax_$106t_contract$_LiquidityPool_$2731t_contract$_Reserves_$4022t_contract$_PriceFeed_$3794_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2698:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2709:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2721:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2729:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2737:6:16",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2745:6:16",
                "type": ""
              }
            ],
            "src": "2555:958:16"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Avax_$106(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_Avax_$106(value) {\n        if iszero(eq(value, cleanup_t_contract$_Avax_$106(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Avax_$106_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Avax_$106(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_LiquidityPool_$2731(value) -> cleaned {\n        cleaned := cleanup_t_address_payable(value)\n    }\n\n    function validator_revert_t_contract$_LiquidityPool_$2731(value) {\n        if iszero(eq(value, cleanup_t_contract$_LiquidityPool_$2731(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_LiquidityPool_$2731_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_LiquidityPool_$2731(value)\n    }\n\n    function cleanup_t_contract$_Reserves_$4022(value) -> cleaned {\n        cleaned := cleanup_t_address_payable(value)\n    }\n\n    function validator_revert_t_contract$_Reserves_$4022(value) {\n        if iszero(eq(value, cleanup_t_contract$_Reserves_$4022(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Reserves_$4022_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Reserves_$4022(value)\n    }\n\n    function cleanup_t_contract$_PriceFeed_$3794(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_PriceFeed_$3794(value) {\n        if iszero(eq(value, cleanup_t_contract$_PriceFeed_$3794(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_PriceFeed_$3794_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_PriceFeed_$3794(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Avax_$106t_contract$_LiquidityPool_$2731t_contract$_Reserves_$4022t_contract$_PriceFeed_$3794_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Avax_$106_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_LiquidityPool_$2731_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_Reserves_$4022_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_contract$_PriceFeed_$3794_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15150:16",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:16",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:16",
                "type": ""
              }
            ],
            "src": "7:75:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:16"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:16"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:16",
                "type": ""
              }
            ],
            "src": "334:77:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:16"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:16"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:16",
                "type": ""
              }
            ],
            "src": "417:122:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:16"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:16",
                "type": ""
              }
            ],
            "src": "545:139:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "773:391:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "819:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "821:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "821:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "821:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "794:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "803:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "790:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "790:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "815:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "786:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "786:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "783:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "912:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "927:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "941:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "931:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "956:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "991:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1002:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "987:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "987:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1011:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "966:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "966:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "956:6:16"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1039:118:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1054:16:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1068:2:16",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1058:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1084:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1119:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1130:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1115:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1115:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1139:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1094:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1094:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1084:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "735:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "746:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "758:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "766:6:16",
                "type": ""
              }
            ],
            "src": "690:474:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1235:53:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1252:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1275:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1257:17:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1257:24:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1245:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1245:37:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1245:37:16"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1223:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1230:3:16",
                "type": ""
              }
            ],
            "src": "1170:118:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1392:124:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1402:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1414:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1425:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1410:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1410:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1402:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1482:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1495:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1506:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1491:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1491:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1438:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1438:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1438:71:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1364:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1376:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1387:4:16",
                "type": ""
              }
            ],
            "src": "1294:222:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1567:81:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1577:65:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1592:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1599:42:16",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1588:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1588:54:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1577:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1549:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1559:7:16",
                "type": ""
              }
            ],
            "src": "1522:126:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1699:51:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1709:35:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1738:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1720:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1720:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1709:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1681:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1691:7:16",
                "type": ""
              }
            ],
            "src": "1654:96:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1821:53:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1838:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1861:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1843:17:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1843:24:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1831:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1831:37:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1831:37:16"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1809:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1816:3:16",
                "type": ""
              }
            ],
            "src": "1756:118:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1978:124:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1988:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2000:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2011:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1996:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1996:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1988:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2068:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2081:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2092:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2077:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2077:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2024:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2024:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2024:71:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1950:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1962:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1973:4:16",
                "type": ""
              }
            ],
            "src": "1880:222:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2151:79:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2208:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2217:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2220:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2210:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2210:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2210:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2174:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2199:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2181:17:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2181:24:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2171:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2171:35:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2164:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2164:43:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2161:63:16"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2144:5:16",
                "type": ""
              }
            ],
            "src": "2108:122:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2288:87:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2298:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2320:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2307:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2307:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2298:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2363:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2336:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2336:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2336:33:16"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2266:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2274:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2282:5:16",
                "type": ""
              }
            ],
            "src": "2236:139:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2447:263:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2493:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2495:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2495:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2495:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2468:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2477:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2464:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2464:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2489:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2460:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2460:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2457:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2586:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2601:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2615:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2605:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2630:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2665:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2676:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2661:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2661:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2685:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2640:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2640:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2630:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2417:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2428:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2440:6:16",
                "type": ""
              }
            ],
            "src": "2381:329:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2782:263:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2828:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2830:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2830:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2830:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2803:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2812:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2799:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2799:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2824:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2795:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2795:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2792:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2921:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2936:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2950:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2940:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2965:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3000:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3011:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2996:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2996:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3020:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2975:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2975:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2965:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2752:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2763:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2775:6:16",
                "type": ""
              }
            ],
            "src": "2716:329:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3079:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3096:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3099:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3089:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3089:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3089:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3193:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3196:4:16",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3186:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3186:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3186:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3217:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3220:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3210:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3210:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3210:15:16"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3051:180:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3285:362:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3295:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3318:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3300:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3300:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3295:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3329:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3352:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3334:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3334:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3329:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3363:28:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3386:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3389:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3382:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3382:9:16"
                  },
                  "variables": [
                    {
                      "name": "product_raw",
                      "nodeType": "YulTypedName",
                      "src": "3367:11:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3400:41:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "product_raw",
                        "nodeType": "YulIdentifier",
                        "src": "3429:11:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3411:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3411:30:16"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3400:7:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3618:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3620:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3620:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3620:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3551:1:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3544:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3544:9:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "3574:1:16"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "3581:7:16"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "3590:1:16"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "3577:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3577:15:16"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "3571:2:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3571:22:16"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "3524:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3524:83:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3504:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3504:113:16"
                  },
                  "nodeType": "YulIf",
                  "src": "3501:139:16"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3268:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3271:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "3277:7:16",
                "type": ""
              }
            ],
            "src": "3237:410:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3681:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3698:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3701:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3691:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3691:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3691:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3795:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3798:4:16",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3788:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3788:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3788:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3819:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3822:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3812:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3812:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3812:15:16"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "3653:180:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3881:143:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3891:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3914:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3896:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3896:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3891:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3925:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3948:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3930:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3930:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3925:1:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3972:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "3974:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3974:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3974:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3969:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3962:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3962:9:16"
                  },
                  "nodeType": "YulIf",
                  "src": "3959:35:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4004:14:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4013:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4016:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "4009:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4009:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "4004:1:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3870:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3873:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "3879:1:16",
                "type": ""
              }
            ],
            "src": "3839:185:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4126:73:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4143:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4148:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4136:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4136:19:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4136:19:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4164:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4183:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4188:4:16",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4179:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4179:14:16"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4164:11:16"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4098:3:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4103:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4114:11:16",
                "type": ""
              }
            ],
            "src": "4030:169:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4311:117:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4333:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4341:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4329:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4329:14:16"
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520616e79206f75747374616e64696e6720",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4345:34:16",
                        "type": "",
                        "value": "You do not have any outstanding "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4322:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4322:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4322:58:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4401:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4409:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4397:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4397:15:16"
                      },
                      {
                        "hexValue": "64656274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4414:6:16",
                        "type": "",
                        "value": "debt"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4390:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4390:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4390:31:16"
                }
              ]
            },
            "name": "store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4303:6:16",
                "type": ""
              }
            ],
            "src": "4205:223:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4580:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4590:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4656:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4661:2:16",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4597:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4597:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4590:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4762:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
                      "nodeType": "YulIdentifier",
                      "src": "4673:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4673:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4673:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4775:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4786:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4791:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4782:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4782:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4775:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4568:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4576:3:16",
                "type": ""
              }
            ],
            "src": "4434:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4977:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4987:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4999:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5010:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4995:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4995:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4987:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5034:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5045:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5030:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5030:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5053:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5059:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5049:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5049:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5023:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5023:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5023:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5079:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5213:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5087:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5087:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5079:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4957:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4972:4:16",
                "type": ""
              }
            ],
            "src": "4806:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5337:76:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5359:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5367:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5355:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5355:14:16"
                      },
                      {
                        "hexValue": "596f7520646f206e6f742068617665206f75747374616e64696e672064656274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5371:34:16",
                        "type": "",
                        "value": "You do not have outstanding debt"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5348:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5348:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5348:58:16"
                }
              ]
            },
            "name": "store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5329:6:16",
                "type": ""
              }
            ],
            "src": "5231:182:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5565:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5575:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5641:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5646:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5582:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5582:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5575:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5747:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
                      "nodeType": "YulIdentifier",
                      "src": "5658:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5658:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5658:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5760:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5771:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5776:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5767:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5767:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5760:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5553:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5561:3:16",
                "type": ""
              }
            ],
            "src": "5419:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5962:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5972:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5984:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5995:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5980:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5980:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5972:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6019:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6030:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6015:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6015:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6038:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6044:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6034:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6034:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6008:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6008:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6008:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6064:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6198:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6072:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6072:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6064:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5942:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5957:4:16",
                "type": ""
              }
            ],
            "src": "5791:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6322:70:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6344:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6352:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6340:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6340:14:16"
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6356:28:16",
                        "type": "",
                        "value": "Please put more collateral"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6333:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6333:52:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6333:52:16"
                }
              ]
            },
            "name": "store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6314:6:16",
                "type": ""
              }
            ],
            "src": "6216:176:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6544:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6554:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6620:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6625:2:16",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6561:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6561:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6554:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6726:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                      "nodeType": "YulIdentifier",
                      "src": "6637:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6637:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6637:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6739:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6750:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6755:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6746:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6746:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6739:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6532:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6540:3:16",
                "type": ""
              }
            ],
            "src": "6398:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6941:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6951:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6963:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6974:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6959:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6959:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6951:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6998:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7009:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6994:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6994:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7017:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7023:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7013:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7013:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6987:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6987:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6987:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7043:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7177:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7051:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7051:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7043:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6921:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6936:4:16",
                "type": ""
              }
            ],
            "src": "6770:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7258:80:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7268:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7283:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7277:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7277:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7268:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7326:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7299:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7299:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7299:33:16"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7236:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7244:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7252:5:16",
                "type": ""
              }
            ],
            "src": "7195:143:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7421:274:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7467:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7469:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7469:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7469:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7442:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7451:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7438:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7438:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7463:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7434:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7434:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7431:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7560:128:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7575:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7589:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7579:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7604:74:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7650:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7661:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7646:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7646:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7670:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "7614:31:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7614:64:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7604:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7391:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7402:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7414:6:16",
                "type": ""
              }
            ],
            "src": "7344:351:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7745:147:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7755:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7778:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7760:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7760:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7755:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7789:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7812:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7794:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7794:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7789:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7823:16:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7834:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7837:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7830:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7830:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7823:3:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7863:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7865:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7865:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7865:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7855:1:16"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "7858:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7852:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7852:10:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7849:36:16"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7732:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7735:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7741:3:16",
                "type": ""
              }
            ],
            "src": "7701:191:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8004:127:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8026:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8034:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8022:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8022:14:16"
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768205553444320746f2072",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8038:34:16",
                        "type": "",
                        "value": "You do not have enough USDC to r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8015:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8015:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8015:58:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8094:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8102:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8090:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8090:15:16"
                      },
                      {
                        "hexValue": "6570617920746869732064656274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8107:16:16",
                        "type": "",
                        "value": "epay this debt"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8083:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8083:41:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8083:41:16"
                }
              ]
            },
            "name": "store_literal_in_memory_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7996:6:16",
                "type": ""
              }
            ],
            "src": "7898:233:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8283:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8293:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8359:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8364:2:16",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8300:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8300:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8293:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8465:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8",
                      "nodeType": "YulIdentifier",
                      "src": "8376:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8376:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8376:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8478:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8489:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8494:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8485:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8485:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8478:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8271:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8279:3:16",
                "type": ""
              }
            ],
            "src": "8137:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8680:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8690:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8702:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8713:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8698:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8698:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8690:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8737:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8748:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8733:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8733:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8756:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8762:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8752:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8752:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8726:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8726:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8726:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8782:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8916:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8790:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8790:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8782:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8660:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8675:4:16",
                "type": ""
              }
            ],
            "src": "8509:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9040:115:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9062:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9070:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9058:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9058:14:16"
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9074:34:16",
                        "type": "",
                        "value": "You do not have enough AVAX toke"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9051:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9051:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9051:58:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9130:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9138:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9126:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9126:15:16"
                      },
                      {
                        "hexValue": "6e21",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9143:4:16",
                        "type": "",
                        "value": "n!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9119:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9119:29:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9119:29:16"
                }
              ]
            },
            "name": "store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9032:6:16",
                "type": ""
              }
            ],
            "src": "8934:221:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9307:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9317:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9383:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9388:2:16",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9324:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9324:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9317:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9489:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                      "nodeType": "YulIdentifier",
                      "src": "9400:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9400:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9400:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9502:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9513:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9518:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9509:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9509:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9502:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9295:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9303:3:16",
                "type": ""
              }
            ],
            "src": "9161:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9704:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9714:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9726:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9737:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9722:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9722:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9714:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9761:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9772:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9757:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9757:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9780:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9786:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9776:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9776:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9750:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9750:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9750:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9806:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9940:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9814:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9814:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9806:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9684:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9699:4:16",
                "type": ""
              }
            ],
            "src": "9533:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10112:288:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10122:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10134:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10145:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10130:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10130:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10122:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10202:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10215:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10226:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10211:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10211:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10158:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10158:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10158:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10283:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10296:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10307:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10292:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10292:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10239:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10239:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10239:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10365:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10378:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10389:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10374:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10374:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10321:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10321:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10321:72:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10068:9:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10080:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10088:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10096:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10107:4:16",
                "type": ""
              }
            ],
            "src": "9958:442:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10448:48:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10458:32:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10483:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10476:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10476:13:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10469:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10469:21:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10458:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10430:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10440:7:16",
                "type": ""
              }
            ],
            "src": "10406:90:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10542:76:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10596:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10605:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10608:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10598:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10598:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10598:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10565:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10587:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10572:14:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10572:21:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10562:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10562:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10555:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10555:40:16"
                  },
                  "nodeType": "YulIf",
                  "src": "10552:60:16"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10535:5:16",
                "type": ""
              }
            ],
            "src": "10502:116:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10684:77:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10694:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10709:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10703:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10703:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "10694:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10749:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "10725:23:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10725:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10725:30:16"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "10662:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10670:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10678:5:16",
                "type": ""
              }
            ],
            "src": "10624:137:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10841:271:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10887:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "10889:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10889:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10889:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10862:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10871:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10858:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10858:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10883:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10854:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10854:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "10851:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10980:125:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10995:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11009:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10999:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11024:71:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11067:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11078:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11063:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11063:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11087:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "11034:28:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11034:61:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "11024:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10811:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10822:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10834:6:16",
                "type": ""
              }
            ],
            "src": "10767:345:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11163:149:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11173:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11196:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11178:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11178:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11173:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11207:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11230:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11212:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11212:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11207:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11241:17:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11253:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11256:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11249:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11249:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "11241:4:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11283:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11285:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11285:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11285:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "11274:4:16"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11280:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11271:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11271:11:16"
                  },
                  "nodeType": "YulIf",
                  "src": "11268:37:16"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11149:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11152:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "11158:4:16",
                "type": ""
              }
            ],
            "src": "11118:194:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11381:80:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11391:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11406:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11400:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11400:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11391:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11449:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "11422:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11422:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11422:33:16"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "11359:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11367:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11375:5:16",
                "type": ""
              }
            ],
            "src": "11318:143:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11544:274:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11590:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "11592:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11592:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11592:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11565:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11574:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11561:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11561:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11586:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11557:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11557:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "11554:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11683:128:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11698:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11712:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "11702:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11727:74:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11773:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11784:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11769:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11769:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11793:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "11737:31:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11737:64:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "11727:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11514:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11525:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11537:6:16",
                "type": ""
              }
            ],
            "src": "11467:351:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11852:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11869:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11872:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11862:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11862:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11862:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11966:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11969:4:16",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11959:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11959:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11959:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11990:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11993:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11983:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11983:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11983:15:16"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "11824:180:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12053:190:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12063:33:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12090:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12072:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12072:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "12063:5:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12186:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12188:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12188:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12188:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12111:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12118:66:16",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "12108:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12108:77:16"
                  },
                  "nodeType": "YulIf",
                  "src": "12105:103:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12217:20:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12228:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12235:1:16",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12224:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12224:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "12217:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12039:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "12049:3:16",
                "type": ""
              }
            ],
            "src": "12010:233:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12355:72:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12377:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12385:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12373:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12373:14:16"
                      },
                      {
                        "hexValue": "56616c756520696e736572746564206973206e6f7420656e6f756768",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12389:30:16",
                        "type": "",
                        "value": "Value inserted is not enough"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12366:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12366:54:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12366:54:16"
                }
              ]
            },
            "name": "store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12347:6:16",
                "type": ""
              }
            ],
            "src": "12249:178:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12579:220:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12589:74:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12655:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12660:2:16",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12596:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12596:67:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12589:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12761:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
                      "nodeType": "YulIdentifier",
                      "src": "12672:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12672:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12672:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12774:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12785:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12790:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12781:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12781:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12774:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12567:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12575:3:16",
                "type": ""
              }
            ],
            "src": "12433:366:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12976:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12986:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12998:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13009:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12994:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12994:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12986:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13033:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13044:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13029:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13029:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13052:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13058:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13048:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13048:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13022:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13022:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13022:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13078:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13212:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13086:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13086:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13078:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12956:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12971:4:16",
                "type": ""
              }
            ],
            "src": "12805:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13336:49:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13358:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13366:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13354:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13354:14:16"
                      },
                      {
                        "hexValue": "4552524f52",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13370:7:16",
                        "type": "",
                        "value": "ERROR"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13347:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13347:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13347:31:16"
                }
              ]
            },
            "name": "store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13328:6:16",
                "type": ""
              }
            ],
            "src": "13230:155:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13537:219:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13547:73:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13613:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13618:1:16",
                        "type": "",
                        "value": "5"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13554:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13554:66:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13547:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13718:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
                      "nodeType": "YulIdentifier",
                      "src": "13629:88:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13629:93:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13629:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13731:19:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13742:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13747:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13738:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13738:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13731:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13525:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13533:3:16",
                "type": ""
              }
            ],
            "src": "13391:365:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13933:248:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13943:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13955:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13966:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13951:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13951:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13943:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13990:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14001:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13986:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13986:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14009:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14015:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14005:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14005:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13979:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13979:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13979:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14035:139:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14169:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14043:124:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14043:131:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14035:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13913:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13928:4:16",
                "type": ""
              }
            ],
            "src": "13762:419:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14240:51:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14250:35:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14279:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "14261:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14261:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14250:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14222:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14232:7:16",
                "type": ""
              }
            ],
            "src": "14187:104:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14378:61:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14395:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14426:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "14400:25:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14400:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14388:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14388:45:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14388:45:16"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14366:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14373:3:16",
                "type": ""
              }
            ],
            "src": "14297:142:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14587:222:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14597:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14609:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14620:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14605:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14605:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14597:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14677:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14690:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14701:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14686:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14686:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14633:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14633:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14633:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14774:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14787:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14798:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14783:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14783:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14714:59:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14714:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14714:88:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14551:9:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14563:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14571:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14582:4:16",
                "type": ""
              }
            ],
            "src": "14445:364:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14941:206:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14951:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14963:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14974:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14959:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14959:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14951:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15031:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15044:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15055:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15040:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15040:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14987:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14987:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14987:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "15112:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15125:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15136:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15121:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15121:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15068:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15068:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15068:72:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14905:9:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14917:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14925:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14936:4:16",
                "type": ""
              }
            ],
            "src": "14815:332:16"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have any outstanding \")\n\n        mstore(add(memPtr, 32), \"debt\")\n\n    }\n\n    function abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have outstanding debt\")\n\n    }\n\n    function abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please put more collateral\")\n\n    }\n\n    function abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have enough USDC to r\")\n\n        mstore(add(memPtr, 32), \"epay this debt\")\n\n    }\n\n    function abi_encode_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have enough AVAX toke\")\n\n        mstore(add(memPtr, 32), \"n!\")\n\n    }\n\n    function abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Value inserted is not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR\")\n\n    }\n\n    function abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n        store_literal_in_memory_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address_payable__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "181:11675:6:-:0;;;341:4;305:40;;393:3;371:25;;448:10;427:31;;;;;;;;;;;;;;;;;;;;1083:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1199:16;1187:9;;:28;;;;;;;;;;;;;;;;;;1241:2;1225:13;;:18;;;;;;;;;;;;;;;;;;1264:15;1253:8;;:26;;;;;;;;;;;;;;;;;;1301:2;1289:9;;:14;;;;;;;;;;;;;;;;;;1083:227;;;;181:11675;;88:117:16;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:108::-;617:7;646:24;664:5;646:24;:::i;:::-;635:35;;568:108;;;:::o;682:146::-;767:36;797:5;767:36;:::i;:::-;760:5;757:47;747:75;;818:1;815;808:12;747:75;682:146;:::o;834:167::-;903:5;934:6;928:13;919:22;;950:45;989:5;950:45;:::i;:::-;834:167;;;;:::o;1007:104::-;1052:7;1081:24;1099:5;1081:24;:::i;:::-;1070:35;;1007:104;;;:::o;1117:126::-;1176:7;1205:32;1231:5;1205:32;:::i;:::-;1194:43;;1117:126;;;:::o;1249:166::-;1344:46;1384:5;1344:46;:::i;:::-;1337:5;1334:57;1324:85;;1405:1;1402;1395:12;1324:85;1249:166;:::o;1421:187::-;1500:5;1531:6;1525:13;1516:22;;1547:55;1596:5;1547:55;:::i;:::-;1421:187;;;;:::o;1614:121::-;1668:7;1697:32;1723:5;1697:32;:::i;:::-;1686:43;;1614:121;;;:::o;1741:156::-;1831:41;1866:5;1831:41;:::i;:::-;1824:5;1821:52;1811:80;;1887:1;1884;1877:12;1811:80;1741:156;:::o;1903:177::-;1977:5;2008:6;2002:13;1993:22;;2024:50;2068:5;2024:50;:::i;:::-;1903:177;;;;:::o;2086:114::-;2141:7;2170:24;2188:5;2170:24;:::i;:::-;2159:35;;2086:114;;;:::o;2206:158::-;2297:42;2333:5;2297:42;:::i;:::-;2290:5;2287:53;2277:81;;2354:1;2351;2344:12;2277:81;2206:158;:::o;2370:179::-;2445:5;2476:6;2470:13;2461:22;;2492:51;2537:5;2492:51;:::i;:::-;2370:179;;;;:::o;2555:958::-;2721:6;2729;2737;2745;2794:3;2782:9;2773:7;2769:23;2765:33;2762:120;;;2801:79;;:::i;:::-;2762:120;2921:1;2946:76;3014:7;3005:6;2994:9;2990:22;2946:76;:::i;:::-;2936:86;;2892:140;3071:2;3097:86;3175:7;3166:6;3155:9;3151:22;3097:86;:::i;:::-;3087:96;;3042:151;3232:2;3258:81;3331:7;3322:6;3311:9;3307:22;3258:81;:::i;:::-;3248:91;;3203:146;3388:2;3414:82;3488:7;3479:6;3468:9;3464:22;3414:82;:::i;:::-;3404:92;;3359:147;2555:958;;;;;;;:::o;181:11675:6:-;;;;;;;",
  "deployedSourceMap": "181:11675:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10471:169;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10964:124;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6490:530;;;:::i;:::-;;11094:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11232:179;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2491:1475;;;;;;;;;;;;;:::i;:::-;;7031:1640;;;:::i;:::-;;10646:124;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5601:883;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9651:137;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9794:140;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8688:957;;;:::i;:::-;;3972:539;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9967:133;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1352:1133;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4518:1040;;;;;;;;;;;;;:::i;:::-;;10106:136;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10776:110;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10471:169;10567:7;10627:6;10613:10;10594:16;:29;;;;:::i;:::-;10593:40;;;;:::i;:::-;10586:47;;10471:169;;;;:::o;10964:124::-;11027:7;11494:1;11465:14;:26;11480:10;11465:26;;;;;;;;;;;;;;;;:30;11457:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;11054:14:::1;:26;11069:10;11054:26;;;;;;;;;;;;;;;;11046:35;;10964:124:::0;:::o;6490:530::-;11635:1;11607:13;:25;11621:10;11607:25;;;;;;;;;;;;;;;;:29;11599:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;6563:23:::1;6589:9;6563:35;;6635:1;6616:15;:20:::0;6608:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;6677:28;6726:19;6708:15;:37;;;;:::i;:::-;6677:68;;6755:28;6840:9;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6817:20;:51;;;;:::i;:::-;6794:74;;6923:15;6888:19;:31;6908:10;6888:31;;;;;;;;;;;;;;;;:50;;;;;;;:::i;:::-;;;;;;;;6993:20;6948:29;:41;6978:10;6948:41;;;;;;;;;;;;;;;;:65;;;;;;;:::i;:::-;;;;;;;;6553:467;;;6490:530::o:0;11094:89::-;11137:7;11171:4;11156:20;;11094:89;:::o;11232:179::-;11301:7;11368:30;:36;11399:4;11368:36;;;;;;;;;;;;;;;;11327:32;:38;11360:4;11327:38;;;;;;;;;;;;;;;;:77;;;;:::i;:::-;11320:84;;11232:179;;;:::o;2491:1475::-;11494:1;11465:14;:26;11480:10;11465:26;;;;;;;;;;;;;;;;:30;11457:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;11784:1:::1;11750:9:::0;::::1;;;;;;;;;;:19;;;11770:10;11750:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;11742:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;2630:22:::2;2655:14;:26;2670:10;2655:26;;;;;;;;;;;;;;;;2630:51;;2778:14;2743:9;::::0;::::2;;;;;;;;:19;;;2763:10;2743:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;2734:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;2842:24;2869:20;:32;2890:10;2869:32;;;;;;;;;;;;;;;;2842:59;;2966:9;::::0;::::2;;;;;;;;:22;;;2989:10;3009:4;3016:14;2966:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3104:26;3133:50;3153:16;3171:11;;3133:19;:50::i;:::-;3104:79;;3236:9;::::0;::::2;;;;;;;;:22;;;3267:4;3274:10;3306:18;3287:16;:37;;;;:::i;:::-;3236:90;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3361:9;::::0;::::2;;;;;;;;:22;;;3392:4;3399:8;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3430:18;3361:88;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3505:20;:32;3526:10;3505:32;;;;;;;;;;;;;;;3498:39;;;3599:14;:26;3614:10;3599:26;;;;;;;;;;;;;;;3592:33;;;3687:30;:42;3718:10;3687:42;;;;;;;;;;;;;;;3680:49;;;3787:1;3739:32;:44;3772:10;3739:44;;;;;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;;;;;3804:9;3799:161;3823:11;:18;;;;3819:1;:22;3799:161;;;3884:10;3866:28;;:11;3878:1;3866:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:28;;::::0;3862:88:::2;;3921:11;3933:1;3921:14;;;;;;;;:::i;:::-;;;;;;;;;;3914:21;;;;;;;;;;;3862:88;3843:3;;;;;:::i;:::-;;;;3799:161;;;;2561:1405;;;2491:1475::o:0;7031:1640::-;11635:1;11607:13;:25;11621:10;11607:25;;;;;;;;;;;;;;;;:29;11599:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7159:22:::1;7184:13;:25;7198:10;7184:25;;;;;;;;;;;;;;;;7159:50;;7284:14;7271:9;:27;;7262:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;7341:24;7368:19;:31;7388:10;7368:31;;;;;;;;;;;;;;;;7341:58;;7472:26;7501:50;7521:16;7539:11;;7501:19;:50::i;:::-;7472:79;;7604:29;7645:10;7604:52;;7666:13;:22;;:61;7708:18;7689:16;:37;;;;:::i;:::-;7666:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;7871:14;7846:21;:39;;7837:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;7905:25;7942:13;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7905:66;;7981:9;:18;;:34;8000:14;7981:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;8066:31;8108:8;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8066:72;;8148:15;:24;;:44;8173:18;8148:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;8210:19;:31;8230:10;8210:31;;;;;;;;;;;;;;;8203:38;;;8303:13;:25;8317:10;8303:25;;;;;;;;;;;;;;;8296:32;;;8390:29;:41;8420:10;8390:41;;;;;;;;;;;;;;;8383:48;;;8487:1;8441:30;:42;8472:10;8441:42;;;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;;;;;;;8512:9;8507:158;8531:10;:17;;;;8527:1;:21;8507:158;;;8590:10;8573:27;;:10;8584:1;8573:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:27;;::::0;8569:86:::1;;8627:10;8638:1;8627:13;;;;;;;;:::i;:::-;;;;;;;;;;8620:20;;;;;;;;;;;8569:86;8550:3;;;;;:::i;:::-;;;;8507:158;;;;7084:1587;;;;;;7031:1640::o:0;10646:124::-;10703:7;10729:9;;;;;;;;;;;:19;;;10757:4;10729:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10722:41;;10646:124;:::o;5601:883::-;5646:7;5665:25;5693:9;5665:37;;5741:1;5720:17;:22;5712:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5783:30;5836:19;5816:17;:39;;;;:::i;:::-;5783:72;;5865:30;5906:10;5922;5906:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5993:9;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5968:22;:53;;;;:::i;:::-;5943:78;;6041:19;6063:65;6083:17;6102:25;;6063:19;:65::i;:::-;6041:87;;6193:17;6158:19;:31;6178:10;6158:31;;;;;;;;;;;;;;;;:52;;;;;;;:::i;:::-;;;;;;;;6249:11;6220:13;:25;6234:10;6220:25;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;6315:22;6270:29;:41;6300:10;6270:41;;;;;;;;;;;;;;;;:67;;;;;;;:::i;:::-;;;;;;;;6356:13;;;;;;;;;;;:29;;;6386:11;6407:10;6356:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6436:29;:41;6466:10;6436:41;;;;;;;;;;;;;;;;6429:48;;;;;;5601:883;:::o;9651:137::-;9713:7;9739:30;:42;9770:10;9739:42;;;;;;;;;;;;;;;;9732:49;;9651:137;:::o;9794:140::-;9857:7;9883:32;:44;9916:10;9883:44;;;;;;;;;;;;;;;;9876:51;;9794:140;:::o;8688:957::-;8737:25;8765:9;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8737:62;;8814:6;8809:830;8830:10;:17;;;;8826:1;:21;8809:830;;;8868:26;8956:19;8919;:34;8939:10;8950:1;8939:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8919:34;;;;;;;;;;;;;;;;:56;;;;:::i;:::-;8898:17;:78;;;;:::i;:::-;8868:109;;9017:29;:44;9047:10;9058:1;9047:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9017:44;;;;;;;;;;;;;;;;8995:18;:66;8991:638;;9143:29;9184:13;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9143:70;;9231:13;:22;;:58;9254:19;:34;9274:10;9285:1;9274:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9254:34;;;;;;;;;;;;;;;;9231:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9315:19;:34;9335:10;9346:1;9335:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9315:34;;;;;;;;;;;;;;;9308:41;;;9426:13;:28;9440:10;9451:1;9440:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9426:28;;;;;;;;;;;;;;;9419:35;;;9531:29;:44;9561:10;9572:1;9561:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9531:44;;;;;;;;;;;;;;;9524:51;;;9601:10;9612:1;9601:13;;;;;;;;:::i;:::-;;;;;;;;;;9594:20;;;;;;;;;;;9063:566;8991:638;8854:785;8849:3;;;;;:::i;:::-;;;;8809:830;;;;8727:918;8688:957::o;3972:539::-;11494:1;11465:14;:26;11480:10;11465:26;;;;;;;;;;;;;;;;:30;11457:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;4098:1:::1;4079:15;:20:::0;4071:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4184:15;4149:9;::::0;::::1;;;;;;;;:19;;;4169:10;4149:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;4140:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;4248:28;4328:9;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4310:15;:47;;;;:::i;:::-;4287:70;;4413:15;4377:20;:32;4398:10;4377:32;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;4484:20;4438:30;:42;4469:10;4438:42;;;;;;;;;;;;;;;;:66;;;;;;;:::i;:::-;;;;;;;;4052:459;3972:539:::0;:::o;9967:133::-;10026:7;10090:3;10044:30;:42;10075:10;10044:42;;;;;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;;;;;9967:133;:::o;1352:1133::-;1445:1;1424:17;:22;1416:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1531:17;1496:9;;;;;;;;;;:19;;;1516:10;1496:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;1487:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;1597:11;1614:10;1597:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1635:19;1657:65;1677:17;1696:25;;1657:19;:65::i;:::-;1635:87;;1789:17;1753:20;:32;1774:10;1753:32;;;;;;;;;;;;;;;;:53;;;;;;;:::i;:::-;;;;;;;;1846:11;1816:14;:26;1831:10;1816:26;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;1868:30;1921:9;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1901:17;:49;;;;:::i;:::-;1868:82;;2015:22;1969:30;:42;2000:10;1969:42;;;;;;;;;;;;;;;;:68;;;;;;;:::i;:::-;;;;;;;;2048:27;2078:13;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2048:58;;2116:9;;;;;;;;;;:22;;;2139:10;2159:4;2166:17;2116:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2242:13;;;;;;;;;;;:39;;;2282:11;2303:4;2242:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2361:9;;;;;;;;;;:22;;;2392:4;2399:10;2411:11;2361:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1406:1079;;;1352:1133;:::o;4518:1040::-;4560:26;4589:9;;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4560:64;;4639:6;4634:918;4655:11;:18;;;;4651:1;:22;4634:918;;;4694:26;4746:20;:36;4767:11;4779:1;4767:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4746:36;;;;;;;;;;;;;;;;4724:18;:59;;;;:::i;:::-;4694:90;;4824:30;:46;4855:11;4867:1;4855:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4824:46;;;;;;;;;;;;;;;;4802:18;:68;4798:744;;5032:22;5057:11;5069:1;5057:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5032:39;;5090:9;;;;;;;;;;:22;;;5121:4;5128:13;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5158:20;:36;5179:14;5158:36;;;;;;;;;;;;;;;;5090:105;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5221:20;:36;5242:11;5254:1;5242:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5221:36;;;;;;;;;;;;;;;5214:43;;;5334:14;:30;5349:11;5361:1;5349:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5334:30;;;;;;;;;;;;;;;5327:37;;;5441:30;:46;5472:11;5484:1;5472:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5441:46;;;;;;;;;;;;;;;5434:53;;;5513:11;5525:1;5513:14;;;;;;;;:::i;:::-;;;;;;;;;;5506:21;;;;;;;;;;;4872:670;4798:744;4680:872;4675:3;;;;;:::i;:::-;;;;4634:918;;;;4550:1008;4518:1040::o;10106:136::-;10166:7;10232:3;10184:32;:44;10217:10;10184:44;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;10106:136;:::o;10776:110::-;10832:7;10858:21;10851:28;;10776:110;:::o;88:117:16:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:118::-;1257:24;1275:5;1257:24;:::i;:::-;1252:3;1245:37;1170:118;;:::o;1294:222::-;1387:4;1425:2;1414:9;1410:18;1402:26;;1438:71;1506:1;1495:9;1491:17;1482:6;1438:71;:::i;:::-;1294:222;;;;:::o;1522:126::-;1559:7;1599:42;1592:5;1588:54;1577:65;;1522:126;;;:::o;1654:96::-;1691:7;1720:24;1738:5;1720:24;:::i;:::-;1709:35;;1654:96;;;:::o;1756:118::-;1843:24;1861:5;1843:24;:::i;:::-;1838:3;1831:37;1756:118;;:::o;1880:222::-;1973:4;2011:2;2000:9;1996:18;1988:26;;2024:71;2092:1;2081:9;2077:17;2068:6;2024:71;:::i;:::-;1880:222;;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:329::-;2440:6;2489:2;2477:9;2468:7;2464:23;2460:32;2457:119;;;2495:79;;:::i;:::-;2457:119;2615:1;2640:53;2685:7;2676:6;2665:9;2661:22;2640:53;:::i;:::-;2630:63;;2586:117;2381:329;;;;:::o;2716:::-;2775:6;2824:2;2812:9;2803:7;2799:23;2795:32;2792:119;;;2830:79;;:::i;:::-;2792:119;2950:1;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2921:117;2716:329;;;;:::o;3051:180::-;3099:77;3096:1;3089:88;3196:4;3193:1;3186:15;3220:4;3217:1;3210:15;3237:410;3277:7;3300:20;3318:1;3300:20;:::i;:::-;3295:25;;3334:20;3352:1;3334:20;:::i;:::-;3329:25;;3389:1;3386;3382:9;3411:30;3429:11;3411:30;:::i;:::-;3400:41;;3590:1;3581:7;3577:15;3574:1;3571:22;3551:1;3544:9;3524:83;3501:139;;3620:18;;:::i;:::-;3501:139;3285:362;3237:410;;;;:::o;3653:180::-;3701:77;3698:1;3691:88;3798:4;3795:1;3788:15;3822:4;3819:1;3812:15;3839:185;3879:1;3896:20;3914:1;3896:20;:::i;:::-;3891:25;;3930:20;3948:1;3930:20;:::i;:::-;3925:25;;3969:1;3959:35;;3974:18;;:::i;:::-;3959:35;4016:1;4013;4009:9;4004:14;;3839:185;;;;:::o;4030:169::-;4114:11;4148:6;4143:3;4136:19;4188:4;4183:3;4179:14;4164:29;;4030:169;;;;:::o;4205:223::-;4345:34;4341:1;4333:6;4329:14;4322:58;4414:6;4409:2;4401:6;4397:15;4390:31;4205:223;:::o;4434:366::-;4576:3;4597:67;4661:2;4656:3;4597:67;:::i;:::-;4590:74;;4673:93;4762:3;4673:93;:::i;:::-;4791:2;4786:3;4782:12;4775:19;;4434:366;;;:::o;4806:419::-;4972:4;5010:2;4999:9;4995:18;4987:26;;5059:9;5053:4;5049:20;5045:1;5034:9;5030:17;5023:47;5087:131;5213:4;5087:131;:::i;:::-;5079:139;;4806:419;;;:::o;5231:182::-;5371:34;5367:1;5359:6;5355:14;5348:58;5231:182;:::o;5419:366::-;5561:3;5582:67;5646:2;5641:3;5582:67;:::i;:::-;5575:74;;5658:93;5747:3;5658:93;:::i;:::-;5776:2;5771:3;5767:12;5760:19;;5419:366;;;:::o;5791:419::-;5957:4;5995:2;5984:9;5980:18;5972:26;;6044:9;6038:4;6034:20;6030:1;6019:9;6015:17;6008:47;6072:131;6198:4;6072:131;:::i;:::-;6064:139;;5791:419;;;:::o;6216:176::-;6356:28;6352:1;6344:6;6340:14;6333:52;6216:176;:::o;6398:366::-;6540:3;6561:67;6625:2;6620:3;6561:67;:::i;:::-;6554:74;;6637:93;6726:3;6637:93;:::i;:::-;6755:2;6750:3;6746:12;6739:19;;6398:366;;;:::o;6770:419::-;6936:4;6974:2;6963:9;6959:18;6951:26;;7023:9;7017:4;7013:20;7009:1;6998:9;6994:17;6987:47;7051:131;7177:4;7051:131;:::i;:::-;7043:139;;6770:419;;;:::o;7195:143::-;7252:5;7283:6;7277:13;7268:22;;7299:33;7326:5;7299:33;:::i;:::-;7195:143;;;;:::o;7344:351::-;7414:6;7463:2;7451:9;7442:7;7438:23;7434:32;7431:119;;;7469:79;;:::i;:::-;7431:119;7589:1;7614:64;7670:7;7661:6;7650:9;7646:22;7614:64;:::i;:::-;7604:74;;7560:128;7344:351;;;;:::o;7701:191::-;7741:3;7760:20;7778:1;7760:20;:::i;:::-;7755:25;;7794:20;7812:1;7794:20;:::i;:::-;7789:25;;7837:1;7834;7830:9;7823:16;;7858:3;7855:1;7852:10;7849:36;;;7865:18;;:::i;:::-;7849:36;7701:191;;;;:::o;7898:233::-;8038:34;8034:1;8026:6;8022:14;8015:58;8107:16;8102:2;8094:6;8090:15;8083:41;7898:233;:::o;8137:366::-;8279:3;8300:67;8364:2;8359:3;8300:67;:::i;:::-;8293:74;;8376:93;8465:3;8376:93;:::i;:::-;8494:2;8489:3;8485:12;8478:19;;8137:366;;;:::o;8509:419::-;8675:4;8713:2;8702:9;8698:18;8690:26;;8762:9;8756:4;8752:20;8748:1;8737:9;8733:17;8726:47;8790:131;8916:4;8790:131;:::i;:::-;8782:139;;8509:419;;;:::o;8934:221::-;9074:34;9070:1;9062:6;9058:14;9051:58;9143:4;9138:2;9130:6;9126:15;9119:29;8934:221;:::o;9161:366::-;9303:3;9324:67;9388:2;9383:3;9324:67;:::i;:::-;9317:74;;9400:93;9489:3;9400:93;:::i;:::-;9518:2;9513:3;9509:12;9502:19;;9161:366;;;:::o;9533:419::-;9699:4;9737:2;9726:9;9722:18;9714:26;;9786:9;9780:4;9776:20;9772:1;9761:9;9757:17;9750:47;9814:131;9940:4;9814:131;:::i;:::-;9806:139;;9533:419;;;:::o;9958:442::-;10107:4;10145:2;10134:9;10130:18;10122:26;;10158:71;10226:1;10215:9;10211:17;10202:6;10158:71;:::i;:::-;10239:72;10307:2;10296:9;10292:18;10283:6;10239:72;:::i;:::-;10321;10389:2;10378:9;10374:18;10365:6;10321:72;:::i;:::-;9958:442;;;;;;:::o;10406:90::-;10440:7;10483:5;10476:13;10469:21;10458:32;;10406:90;;;:::o;10502:116::-;10572:21;10587:5;10572:21;:::i;:::-;10565:5;10562:32;10552:60;;10608:1;10605;10598:12;10552:60;10502:116;:::o;10624:137::-;10678:5;10709:6;10703:13;10694:22;;10725:30;10749:5;10725:30;:::i;:::-;10624:137;;;;:::o;10767:345::-;10834:6;10883:2;10871:9;10862:7;10858:23;10854:32;10851:119;;;10889:79;;:::i;:::-;10851:119;11009:1;11034:61;11087:7;11078:6;11067:9;11063:22;11034:61;:::i;:::-;11024:71;;10980:125;10767:345;;;;:::o;11118:194::-;11158:4;11178:20;11196:1;11178:20;:::i;:::-;11173:25;;11212:20;11230:1;11212:20;:::i;:::-;11207:25;;11256:1;11253;11249:9;11241:17;;11280:1;11274:4;11271:11;11268:37;;;11285:18;;:::i;:::-;11268:37;11118:194;;;;:::o;11318:143::-;11375:5;11406:6;11400:13;11391:22;;11422:33;11449:5;11422:33;:::i;:::-;11318:143;;;;:::o;11467:351::-;11537:6;11586:2;11574:9;11565:7;11561:23;11557:32;11554:119;;;11592:79;;:::i;:::-;11554:119;11712:1;11737:64;11793:7;11784:6;11773:9;11769:22;11737:64;:::i;:::-;11727:74;;11683:128;11467:351;;;;:::o;11824:180::-;11872:77;11869:1;11862:88;11969:4;11966:1;11959:15;11993:4;11990:1;11983:15;12010:233;12049:3;12072:24;12090:5;12072:24;:::i;:::-;12063:33;;12118:66;12111:5;12108:77;12105:103;;12188:18;;:::i;:::-;12105:103;12235:1;12228:5;12224:13;12217:20;;12010:233;;;:::o;12249:178::-;12389:30;12385:1;12377:6;12373:14;12366:54;12249:178;:::o;12433:366::-;12575:3;12596:67;12660:2;12655:3;12596:67;:::i;:::-;12589:74;;12672:93;12761:3;12672:93;:::i;:::-;12790:2;12785:3;12781:12;12774:19;;12433:366;;;:::o;12805:419::-;12971:4;13009:2;12998:9;12994:18;12986:26;;13058:9;13052:4;13048:20;13044:1;13033:9;13029:17;13022:47;13086:131;13212:4;13086:131;:::i;:::-;13078:139;;12805:419;;;:::o;13230:155::-;13370:7;13366:1;13358:6;13354:14;13347:31;13230:155;:::o;13391:365::-;13533:3;13554:66;13618:1;13613:3;13554:66;:::i;:::-;13547:73;;13629:93;13718:3;13629:93;:::i;:::-;13747:2;13742:3;13738:12;13731:19;;13391:365;;;:::o;13762:419::-;13928:4;13966:2;13955:9;13951:18;13943:26;;14015:9;14009:4;14005:20;14001:1;13990:9;13986:17;13979:47;14043:131;14169:4;14043:131;:::i;:::-;14035:139;;13762:419;;;:::o;14187:104::-;14232:7;14261:24;14279:5;14261:24;:::i;:::-;14250:35;;14187:104;;;:::o;14297:142::-;14400:32;14426:5;14400:32;:::i;:::-;14395:3;14388:45;14297:142;;:::o;14445:364::-;14582:4;14620:2;14609:9;14605:18;14597:26;;14633:71;14701:1;14690:9;14686:17;14677:6;14633:71;:::i;:::-;14714:88;14798:2;14787:9;14783:18;14774:6;14714:88;:::i;:::-;14445:364;;;;;:::o;14815:332::-;14936:4;14974:2;14963:9;14959:18;14951:26;;14987:71;15055:1;15044:9;15040:17;15031:6;14987:71;:::i;:::-;15068:72;15136:2;15125:9;15121:18;15112:6;15068:72;:::i;:::-;14815:332;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\nimport \"./LiquidityPool.sol\";\nimport \"./ERC20.sol\";\nimport \"./Reserves.sol\";\nimport \"./PriceFeed.sol\";\nimport \"./Avax.sol\";\n\ncontract Lending {\n    Avax avaxToken;\n    LiquidityPool liquidityPool;\n    Reserves reserves;\n    PriceFeed priceFeed;\n    uint256 _maximumLendingPercentage = 8500; //85% of collateral\n    uint256 _lendingFee = 500; //5% of total collateral\n    address _debtOwner = msg.sender;\n\n    mapping(address => uint256) AVAXCollateralLedger;\n    mapping(address => uint256) AVAXLoanLedger;\n    mapping(address => uint256) AVAXCollateralValueLedgerinUSD;\n    mapping(address => uint256) AVAXCUserTotalReturnTransactions;\n\n    mapping(address => uint256) ETHCollateralLedger;\n    mapping(address => uint256) ETHLoanLedger;\n    mapping(address => uint256) ETHCollateralValueLedgerinUSD;\n    mapping(address => uint256) ETHUserTotalReturnTransactions;\n\n    address[] ETHDebtors; // keep track who is still has outstanding loans\n    address[] AVAXDebtors; // keep track who is still has outstanding loans\n    \n     constructor(Avax avaxTokenAddress, LiquidityPool lp, Reserves reservesAddress,  PriceFeed pf) {\n        avaxToken = avaxTokenAddress;\n        liquidityPool = lp;\n        reserves = reservesAddress;\n        priceFeed = pf;\n    }\n\n    //Take collateral and give 85% \n    function borrowAVAX(uint256 depositCollateral) public {\n        require(depositCollateral != 0, \"Please put more collateral\");\n        require (avaxToken.balanceOf(msg.sender) >= depositCollateral, \"You do not have enough AVAX token!\");\n        AVAXDebtors.push(msg.sender);\n        uint256 _loanAmount = calculatePercentage(depositCollateral, _maximumLendingPercentage); //85% of collateral\n\n        AVAXCollateralLedger[msg.sender] += depositCollateral;\n        AVAXLoanLedger[msg.sender] += _loanAmount;\n\n        uint256 depositCollateralInUSD = depositCollateral * priceFeed.getAvaxPriceFirst(); //in USD\n        AVAXCollateralValueLedgerinUSD[msg.sender] += depositCollateralInUSD;\n\n        address liqudityPoolAddress = liquidityPool.getLPAddress();\n        avaxToken.transferFrom(msg.sender, address(this), depositCollateral); //Transfer borrower collateral to this contract\n        liquidityPool.sendAvaxToLendingContract(_loanAmount, address(this)); // Transfer AVAX from LP to this contract\n        avaxToken.transferFrom(address(this), msg.sender, _loanAmount); //Take assets from Liquidity Pool and send to borrower\n    }\n\n    function repayAVAXDebt() public onlyAVAXDebtHolder enoughAVAXInWallet {\n        //require only the person who loan it can pay back\n        uint256 amountToReturn = AVAXLoanLedger[msg.sender]; //Get amount to return from AvaxLoanLedger\n        require (avaxToken.balanceOf(msg.sender) >= amountToReturn, \"You do not have enough AVAX token!\");\n\n        uint256 collateralAmount = AVAXCollateralLedger[msg.sender]; //Get the collteral that is held by the Smart contract\n        avaxToken.transferFrom(msg.sender, address(this), amountToReturn); //Transfer USDC to pay back from wallet to this smart contract\n        uint256 lendingFeeToDeduct = calculatePercentage(collateralAmount, _lendingFee); //Calculate the avax taken as comission 5%\n        avaxToken.transferFrom(address(this), msg.sender, (collateralAmount - lendingFeeToDeduct)); //Transfer only 95% back\n        avaxToken.transferFrom(address(this), reserves.getReservesAddress(), lendingFeeToDeduct); //Transfer 5% to the reserves\n        \n        delete AVAXCollateralLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete AVAXLoanLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete AVAXCollateralValueLedgerinUSD[msg.sender];\n        AVAXCUserTotalReturnTransactions[msg.sender] += 1;\n\n        for (uint256 i = 0; i < AVAXDebtors.length; i++) {\n            if (AVAXDebtors[i] == msg.sender) {\n                delete AVAXDebtors[i];\n            }\n        }\n    }\n\n    function topUpAVAXCollateral(uint256 topUpCollateral) public onlyAVAXDebtHolder {\n        \n        require(topUpCollateral != 0, \"Please put more collateral\");\n        require (avaxToken.balanceOf(msg.sender) >= topUpCollateral, \"You do not have enough AVAX token!\");\n        uint256 topUpCollateralInUSD; \n        topUpCollateralInUSD = topUpCollateral * priceFeed.getAvaxPriceFirst(); //in USD\n\n        AVAXCollateralLedger[msg.sender] += topUpCollateral;\n        AVAXCollateralValueLedgerinUSD[msg.sender] += topUpCollateralInUSD;\n    }\n\n     function liquidateAVAX() public {\n        uint256 currentPriceOfAVAX = priceFeed.getAvaxPriceToLiquidate();\n        for (uint i = 0; i < AVAXDebtors.length; i++) {\n            uint256 newCollateralPrice = (currentPriceOfAVAX * (AVAXCollateralLedger[AVAXDebtors[i]]));\n            if (newCollateralPrice <= AVAXCollateralValueLedgerinUSD[AVAXDebtors[i]]) {\n                //liquidate by sending collateral to the pool\n                 //addressToSend.transfer(ETHCollateralLedger[ETHDebtors[i]]);\n                 address accountAddress = AVAXDebtors[i];\n                 avaxToken.transferFrom(address(this), liquidityPool.getLPAddress(), AVAXCollateralLedger[accountAddress]);\n                 delete AVAXCollateralLedger[AVAXDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete AVAXLoanLedger[AVAXDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete AVAXCollateralValueLedgerinUSD[AVAXDebtors[i]];\n                 delete AVAXDebtors[i];\n            }\n        }\n    }\n\n     //Take collateral and give 85% \n    function borrowEth() public payable returns (uint256) {\n        uint256 depositCollateral = msg.value;\n        require(depositCollateral != 0, \"Please put more collateral\");\n        uint256 depositCollateralInEth = depositCollateral / 1000000000000000000;\n        uint256 depositCollateralInUSD; \n        ETHDebtors.push(msg.sender);\n        depositCollateralInUSD = depositCollateralInEth * priceFeed.getEthPriceFirst(); //in USD\n\n        uint256 _loanAmount = calculatePercentage(depositCollateral, _maximumLendingPercentage); //85% of collateral\n        ETHCollateralLedger[msg.sender] += depositCollateral;\n        ETHLoanLedger[msg.sender] += _loanAmount;\n        ETHCollateralValueLedgerinUSD[msg.sender] += depositCollateralInUSD;\n        \n        liquidityPool.sendEthToLender(_loanAmount, payable(msg.sender));\n        return ETHCollateralValueLedgerinUSD[msg.sender];\n    }\n\n    function topUpETHCollateral() public payable onlyEthDebtHolder {\n        uint256 topUpCollateral = msg.value;\n        require(topUpCollateral != 0, \"Please put more collateral\");\n        uint256 topUpCollateralInEth = topUpCollateral / 1000000000000000000;\n        uint256 topUpCollateralInUSD; \n        topUpCollateralInUSD = topUpCollateralInEth * priceFeed.getEthPriceFirst(); //in USD\n\n        ETHCollateralLedger[msg.sender] += topUpCollateral;\n        ETHCollateralValueLedgerinUSD[msg.sender] += topUpCollateralInUSD;\n    }\n\n   \n\n    function repayEth() public payable onlyEthDebtHolder {\n        //require only the person who loan it can pay back\n     \n        uint256 amountToReturn = ETHLoanLedger[msg.sender]; //Get amount to return from USDCLoanLedger\n        require (msg.value >= amountToReturn, \"Value inserted is not enough\");\n        uint256 collateralAmount = ETHCollateralLedger[msg.sender]; //Get the collteral that is held by the Smart contract\n       \n        uint256 lendingFeeToDeduct = calculatePercentage(collateralAmount, _lendingFee); //Calculate the avax taken as comission 5%\n        address payable addressToSend = payable (msg.sender);\n        addressToSend.transfer(collateralAmount - lendingFeeToDeduct); //Transfer Collateral - lending fee From This contract back to msg.sender\n        //Send back to LP\n        require (address(this).balance >= amountToReturn, \"ERROR\");\n        address payable lpAddress = payable (liquidityPool.getLPAddress());\n        lpAddress.transfer(amountToReturn);\n\n        //Send comissionFee to reserves\n        address payable reservesAddress = payable(reserves.getReservesAddress());\n        reservesAddress.transfer(lendingFeeToDeduct);\n\n        delete ETHCollateralLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete ETHLoanLedger[msg.sender]; //Reset the ledger as the loan has been paid\n        delete ETHCollateralValueLedgerinUSD[msg.sender];\n        ETHUserTotalReturnTransactions[msg.sender] += 1;\n        \n        for (uint256 i = 0; i < ETHDebtors.length; i++) {\n            if (ETHDebtors[i] == msg.sender) {\n                delete ETHDebtors[i];\n            }\n        }\n    }\n           \n    function liquidateETH() public payable {\n        uint256 currentPriceOfEth = priceFeed.getEthPriceToLiquidate();\n        for (uint i = 0; i < ETHDebtors.length; i++) {\n            uint256 newCollateralPrice = (currentPriceOfEth * (ETHCollateralLedger[ETHDebtors[i]] / 1000000000000000000));\n            if (newCollateralPrice <= ETHCollateralValueLedgerinUSD[ETHDebtors[i]]) {\n                //liquidate by sending collateral to the pool\n                address payable addressToSend = payable (liquidityPool.getLPAddress());\n                addressToSend.transfer(ETHCollateralLedger[ETHDebtors[i]]);\n                 delete ETHCollateralLedger[ETHDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete ETHLoanLedger[ETHDebtors[i]]; //Reset the ledger as the loan has been Liquidated\n                 delete ETHCollateralValueLedgerinUSD[ETHDebtors[i]];\n                 delete ETHDebtors[i];\n            }\n        }\n    }\n\n    function getUserTotaETHRepaymentAmount() public view returns (uint256) {\n        return ETHUserTotalReturnTransactions[msg.sender];\n    }\n\n    function getUserTotaAVAXRepaymentAmount() public view returns (uint256) {\n        return AVAXCUserTotalReturnTransactions[msg.sender];\n    }\n\n    //For testing purposes\n    function initUserTotalEthRepaymentAmount() public returns (uint256) {\n       ETHUserTotalReturnTransactions[msg.sender] += 100;\n    }\n\n    function initUserTotalAVAXRepaymentAmount() public returns (uint256) {\n       AVAXCUserTotalReturnTransactions[msg.sender] += 100;\n    }\n\n    //This function calculates Percentages\n    //Used to calculate the amount of Loan that can be given and platform lendingFees\n    //e.g \n    //Assume collateral = 100, desired percentage = 85%\n    //function returns 85\n\n    function calculatePercentage(uint256 collateralAmount, uint256 percentage) public pure returns (uint256) {\n        return (collateralAmount * percentage) / 10_000;\n    }\n\n    function getHoldingAVAXCollateral() public view returns (uint256) {\n        return avaxToken.balanceOf(address(this));\n    }\n\n    function getHoldingEthCollateral() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    //Functions to return the amount of Debt the msg.sender has in USDC\n    function getAVAXDebt() public view onlyAVAXDebtHolder returns (uint256) {\n        return (AVAXLoanLedger[msg.sender]);\n    }\n\n    function getAddress() public view returns (address) {\n        return address(this);\n    }\n\n    //Function to return transaction count\n    function getTotalTransactionCount(address user) public view returns (uint256) {\n        return AVAXCUserTotalReturnTransactions[user] + ETHUserTotalReturnTransactions[user];\n    }\n\n    modifier onlyAVAXDebtHolder() {\n        require(AVAXLoanLedger[msg.sender] > 0, \"You do not have any outstanding debt\");\n        _;\n    }\n\n    modifier onlyEthDebtHolder() {\n        require(ETHLoanLedger[msg.sender] > 0, \"You do not have outstanding debt\");\n        _;\n    }\n    \n     modifier enoughAVAXInWallet() {\n        require(avaxToken.balanceOf(msg.sender) > 0, \"You do not have enough USDC to repay this debt\");\n        _;\n    }\n}",
  "sourcePath": "/Users/yijie/Desktop/Y2S2/IS4302/Project/IS4302_Group_6_Project/contracts/Lending.sol",
  "ast": {
    "absolutePath": "project:/contracts/Lending.sol",
    "exportedSymbols": {
      "Avax": [
        106
      ],
      "ERC20": [
        638
      ],
      "Lending": [
        2259
      ],
      "LiquidityPool": [
        2731
      ],
      "PriceFeed": [
        3794
      ],
      "Reserves": [
        4022
      ],
      "SafeMath": [
        297
      ]
    },
    "id": 2260,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1237,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "project:/contracts/LiquidityPool.sol",
        "file": "./LiquidityPool.sol",
        "id": 1238,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2260,
        "sourceUnit": 2732,
        "src": "56:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 1239,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2260,
        "sourceUnit": 639,
        "src": "86:21:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Reserves.sol",
        "file": "./Reserves.sol",
        "id": 1240,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2260,
        "sourceUnit": 4023,
        "src": "108:24:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/PriceFeed.sol",
        "file": "./PriceFeed.sol",
        "id": 1241,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2260,
        "sourceUnit": 3795,
        "src": "133:25:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Avax.sol",
        "file": "./Avax.sol",
        "id": 1242,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2260,
        "sourceUnit": 107,
        "src": "159:20:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Lending",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2259,
        "linearizedBaseContracts": [
          2259
        ],
        "name": "Lending",
        "nameLocation": "190:7:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1245,
            "mutability": "mutable",
            "name": "avaxToken",
            "nameLocation": "209:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "204:14:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Avax_$106",
              "typeString": "contract Avax"
            },
            "typeName": {
              "id": 1244,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1243,
                "name": "Avax",
                "nameLocations": [
                  "204:4:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 106,
                "src": "204:4:6"
              },
              "referencedDeclaration": 106,
              "src": "204:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Avax_$106",
                "typeString": "contract Avax"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1248,
            "mutability": "mutable",
            "name": "liquidityPool",
            "nameLocation": "238:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "224:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LiquidityPool_$2731",
              "typeString": "contract LiquidityPool"
            },
            "typeName": {
              "id": 1247,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1246,
                "name": "LiquidityPool",
                "nameLocations": [
                  "224:13:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2731,
                "src": "224:13:6"
              },
              "referencedDeclaration": 2731,
              "src": "224:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LiquidityPool_$2731",
                "typeString": "contract LiquidityPool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1251,
            "mutability": "mutable",
            "name": "reserves",
            "nameLocation": "266:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "257:17:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Reserves_$4022",
              "typeString": "contract Reserves"
            },
            "typeName": {
              "id": 1250,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1249,
                "name": "Reserves",
                "nameLocations": [
                  "257:8:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4022,
                "src": "257:8:6"
              },
              "referencedDeclaration": 4022,
              "src": "257:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Reserves_$4022",
                "typeString": "contract Reserves"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1254,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "290:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "280:19:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PriceFeed_$3794",
              "typeString": "contract PriceFeed"
            },
            "typeName": {
              "id": 1253,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1252,
                "name": "PriceFeed",
                "nameLocations": [
                  "280:9:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3794,
                "src": "280:9:6"
              },
              "referencedDeclaration": 3794,
              "src": "280:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceFeed_$3794",
                "typeString": "contract PriceFeed"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1257,
            "mutability": "mutable",
            "name": "_maximumLendingPercentage",
            "nameLocation": "313:25:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "305:40:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1255,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "305:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38353030",
              "id": 1256,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "341:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8500_by_1",
                "typeString": "int_const 8500"
              },
              "value": "8500"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1260,
            "mutability": "mutable",
            "name": "_lendingFee",
            "nameLocation": "379:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "371:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1258,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "371:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "353030",
              "id": 1259,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "393:3:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "500"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1264,
            "mutability": "mutable",
            "name": "_debtOwner",
            "nameLocation": "435:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "427:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1261,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "427:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 1262,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967281,
                "src": "448:3:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 1263,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberLocation": "452:6:6",
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "448:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1268,
            "mutability": "mutable",
            "name": "AVAXCollateralLedger",
            "nameLocation": "493:20:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "465:48:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1267,
              "keyType": {
                "id": 1265,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "473:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "465:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1266,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "484:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1272,
            "mutability": "mutable",
            "name": "AVAXLoanLedger",
            "nameLocation": "547:14:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "519:42:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1271,
              "keyType": {
                "id": 1269,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "527:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "519:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1270,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "538:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1276,
            "mutability": "mutable",
            "name": "AVAXCollateralValueLedgerinUSD",
            "nameLocation": "595:30:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "567:58:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1275,
              "keyType": {
                "id": 1273,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "575:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "567:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1274,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "586:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1280,
            "mutability": "mutable",
            "name": "AVAXCUserTotalReturnTransactions",
            "nameLocation": "659:32:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "631:60:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1279,
              "keyType": {
                "id": 1277,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "639:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "631:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1278,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "650:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1284,
            "mutability": "mutable",
            "name": "ETHCollateralLedger",
            "nameLocation": "726:19:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "698:47:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1283,
              "keyType": {
                "id": 1281,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "706:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "698:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1282,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "717:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1288,
            "mutability": "mutable",
            "name": "ETHLoanLedger",
            "nameLocation": "779:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "751:41:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1287,
              "keyType": {
                "id": 1285,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "759:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "751:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1286,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "770:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1292,
            "mutability": "mutable",
            "name": "ETHCollateralValueLedgerinUSD",
            "nameLocation": "826:29:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "798:57:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1291,
              "keyType": {
                "id": 1289,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "806:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "798:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1290,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "817:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1296,
            "mutability": "mutable",
            "name": "ETHUserTotalReturnTransactions",
            "nameLocation": "889:30:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "861:58:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1295,
              "keyType": {
                "id": 1293,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "869:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "861:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1294,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "880:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1299,
            "mutability": "mutable",
            "name": "ETHDebtors",
            "nameLocation": "936:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "926:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1297,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "926:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1298,
              "nodeType": "ArrayTypeName",
              "src": "926:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1302,
            "mutability": "mutable",
            "name": "AVAXDebtors",
            "nameLocation": "1011:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 2259,
            "src": "1001:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1300,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1001:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1301,
              "nodeType": "ArrayTypeName",
              "src": "1001:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1333,
              "nodeType": "Block",
              "src": "1177:133:6",
              "statements": [
                {
                  "expression": {
                    "id": 1319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1317,
                      "name": "avaxToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1245,
                      "src": "1187:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Avax_$106",
                        "typeString": "contract Avax"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1318,
                      "name": "avaxTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1305,
                      "src": "1199:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Avax_$106",
                        "typeString": "contract Avax"
                      }
                    },
                    "src": "1187:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avax_$106",
                      "typeString": "contract Avax"
                    }
                  },
                  "id": 1320,
                  "nodeType": "ExpressionStatement",
                  "src": "1187:28:6"
                },
                {
                  "expression": {
                    "id": 1323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1321,
                      "name": "liquidityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "1225:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$2731",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1322,
                      "name": "lp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1308,
                      "src": "1241:2:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$2731",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "src": "1225:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPool_$2731",
                      "typeString": "contract LiquidityPool"
                    }
                  },
                  "id": 1324,
                  "nodeType": "ExpressionStatement",
                  "src": "1225:18:6"
                },
                {
                  "expression": {
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1325,
                      "name": "reserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1251,
                      "src": "1253:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Reserves_$4022",
                        "typeString": "contract Reserves"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1326,
                      "name": "reservesAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1311,
                      "src": "1264:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Reserves_$4022",
                        "typeString": "contract Reserves"
                      }
                    },
                    "src": "1253:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Reserves_$4022",
                      "typeString": "contract Reserves"
                    }
                  },
                  "id": 1328,
                  "nodeType": "ExpressionStatement",
                  "src": "1253:26:6"
                },
                {
                  "expression": {
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1329,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1254,
                      "src": "1289:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceFeed_$3794",
                        "typeString": "contract PriceFeed"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1330,
                      "name": "pf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1314,
                      "src": "1301:2:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceFeed_$3794",
                        "typeString": "contract PriceFeed"
                      }
                    },
                    "src": "1289:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceFeed_$3794",
                      "typeString": "contract PriceFeed"
                    }
                  },
                  "id": 1332,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:14:6"
                }
              ]
            },
            "id": 1334,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1305,
                  "mutability": "mutable",
                  "name": "avaxTokenAddress",
                  "nameLocation": "1100:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1334,
                  "src": "1095:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Avax_$106",
                    "typeString": "contract Avax"
                  },
                  "typeName": {
                    "id": 1304,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1303,
                      "name": "Avax",
                      "nameLocations": [
                        "1095:4:6"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 106,
                      "src": "1095:4:6"
                    },
                    "referencedDeclaration": 106,
                    "src": "1095:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avax_$106",
                      "typeString": "contract Avax"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1308,
                  "mutability": "mutable",
                  "name": "lp",
                  "nameLocation": "1132:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1334,
                  "src": "1118:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LiquidityPool_$2731",
                    "typeString": "contract LiquidityPool"
                  },
                  "typeName": {
                    "id": 1307,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1306,
                      "name": "LiquidityPool",
                      "nameLocations": [
                        "1118:13:6"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2731,
                      "src": "1118:13:6"
                    },
                    "referencedDeclaration": 2731,
                    "src": "1118:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPool_$2731",
                      "typeString": "contract LiquidityPool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1311,
                  "mutability": "mutable",
                  "name": "reservesAddress",
                  "nameLocation": "1145:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1334,
                  "src": "1136:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Reserves_$4022",
                    "typeString": "contract Reserves"
                  },
                  "typeName": {
                    "id": 1310,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1309,
                      "name": "Reserves",
                      "nameLocations": [
                        "1136:8:6"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4022,
                      "src": "1136:8:6"
                    },
                    "referencedDeclaration": 4022,
                    "src": "1136:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Reserves_$4022",
                      "typeString": "contract Reserves"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1314,
                  "mutability": "mutable",
                  "name": "pf",
                  "nameLocation": "1173:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1334,
                  "src": "1163:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PriceFeed_$3794",
                    "typeString": "contract PriceFeed"
                  },
                  "typeName": {
                    "id": 1313,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1312,
                      "name": "PriceFeed",
                      "nameLocations": [
                        "1163:9:6"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3794,
                      "src": "1163:9:6"
                    },
                    "referencedDeclaration": 3794,
                    "src": "1163:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceFeed_$3794",
                      "typeString": "contract PriceFeed"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1094:82:6"
            },
            "returnParameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1177:0:6"
            },
            "scope": 2259,
            "src": "1083:227:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1440,
              "nodeType": "Block",
              "src": "1406:1079:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1340,
                          "name": "depositCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1336,
                          "src": "1424:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1445:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1424:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 1343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1448:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 1339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1416:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1345,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:61:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1349,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1516:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1520:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1516:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1347,
                              "name": "avaxToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1245,
                              "src": "1496:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Avax_$106",
                                "typeString": "contract Avax"
                              }
                            },
                            "id": 1348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1506:9:6",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 374,
                            "src": "1496:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1496:31:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1352,
                          "name": "depositCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1336,
                          "src": "1531:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1496:52:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b656e21",
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1550:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        },
                        "value": "You do not have enough AVAX token!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        }
                      ],
                      "id": 1346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1487:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1487:100:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1356,
                  "nodeType": "ExpressionStatement",
                  "src": "1487:100:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1360,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1614:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1618:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1614:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1357,
                        "name": "AVAXDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "1597:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1609:4:6",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1597:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1597:28:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1363,
                  "nodeType": "ExpressionStatement",
                  "src": "1597:28:6"
                },
                {
                  "assignments": [
                    1365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1365,
                      "mutability": "mutable",
                      "name": "_loanAmount",
                      "nameLocation": "1643:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1440,
                      "src": "1635:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1364,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1635:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1370,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1367,
                        "name": "depositCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1336,
                        "src": "1677:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1368,
                        "name": "_maximumLendingPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1257,
                        "src": "1696:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1366,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2148,
                      "src": "1657:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1657:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1635:87:6"
                },
                {
                  "expression": {
                    "id": 1376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1371,
                        "name": "AVAXCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1268,
                        "src": "1753:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1374,
                      "indexExpression": {
                        "expression": {
                          "id": 1372,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1774:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1778:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1774:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1753:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1375,
                      "name": "depositCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1336,
                      "src": "1789:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1753:53:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1377,
                  "nodeType": "ExpressionStatement",
                  "src": "1753:53:6"
                },
                {
                  "expression": {
                    "id": 1383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1378,
                        "name": "AVAXLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1272,
                        "src": "1816:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1381,
                      "indexExpression": {
                        "expression": {
                          "id": 1379,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1831:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1835:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1831:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1816:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1382,
                      "name": "_loanAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1365,
                      "src": "1846:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1816:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1384,
                  "nodeType": "ExpressionStatement",
                  "src": "1816:41:6"
                },
                {
                  "assignments": [
                    1386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1386,
                      "mutability": "mutable",
                      "name": "depositCollateralInUSD",
                      "nameLocation": "1876:22:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1440,
                      "src": "1868:30:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1868:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1392,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1387,
                      "name": "depositCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1336,
                      "src": "1901:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1388,
                          "name": "priceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1254,
                          "src": "1921:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PriceFeed_$3794",
                            "typeString": "contract PriceFeed"
                          }
                        },
                        "id": 1389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1931:17:6",
                        "memberName": "getAvaxPriceFirst",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3785,
                        "src": "1921:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 1390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1921:29:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1901:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1868:82:6"
                },
                {
                  "expression": {
                    "id": 1398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1393,
                        "name": "AVAXCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1276,
                        "src": "1969:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1396,
                      "indexExpression": {
                        "expression": {
                          "id": 1394,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2000:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2004:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2000:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1969:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1397,
                      "name": "depositCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1386,
                      "src": "2015:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1969:68:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1399,
                  "nodeType": "ExpressionStatement",
                  "src": "1969:68:6"
                },
                {
                  "assignments": [
                    1401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1401,
                      "mutability": "mutable",
                      "name": "liqudityPoolAddress",
                      "nameLocation": "2056:19:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1440,
                      "src": "2048:27:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1400,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2048:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1405,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1402,
                        "name": "liquidityPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1248,
                        "src": "2078:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$2731",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 1403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2092:12:6",
                      "memberName": "getLPAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2649,
                      "src": "2078:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 1404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:28:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2048:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1409,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2139:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2143:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2139:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1413,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2159:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$2259",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$2259",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2151:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1411,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2151:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2151:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1415,
                        "name": "depositCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1336,
                        "src": "2166:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1406,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1245,
                        "src": "2116:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$106",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 1408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2126:12:6",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 498,
                      "src": "2116:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2116:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1417,
                  "nodeType": "ExpressionStatement",
                  "src": "2116:68:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1421,
                        "name": "_loanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1365,
                        "src": "2282:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1424,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2303:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$2259",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$2259",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2295:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1422,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2295:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2295:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1418,
                        "name": "liquidityPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1248,
                        "src": "2242:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$2731",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 1420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2256:25:6",
                      "memberName": "sendAvaxToLendingContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2676,
                      "src": "2242:39:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 1426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2242:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1427,
                  "nodeType": "ExpressionStatement",
                  "src": "2242:67:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1433,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2392:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$2259",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$2259",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2384:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1431,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2384:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2384:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1435,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2399:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2403:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2399:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1437,
                        "name": "_loanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1365,
                        "src": "2411:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1428,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1245,
                        "src": "2361:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$106",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 1430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2371:12:6",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 498,
                      "src": "2361:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2361:62:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1439,
                  "nodeType": "ExpressionStatement",
                  "src": "2361:62:6"
                }
              ]
            },
            "functionSelector": "b968c930",
            "id": 1441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrowAVAX",
            "nameLocation": "1361:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1336,
                  "mutability": "mutable",
                  "name": "depositCollateral",
                  "nameLocation": "1380:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "1372:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1371:27:6"
            },
            "returnParameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:6"
            },
            "scope": 2259,
            "src": "1352:1133:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1571,
              "nodeType": "Block",
              "src": "2561:1405:6",
              "statements": [
                {
                  "assignments": [
                    1449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1449,
                      "mutability": "mutable",
                      "name": "amountToReturn",
                      "nameLocation": "2638:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1571,
                      "src": "2630:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1448,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2630:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1454,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1450,
                      "name": "AVAXLoanLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1272,
                      "src": "2655:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1453,
                    "indexExpression": {
                      "expression": {
                        "id": 1451,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2670:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2674:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2670:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2655:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2630:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1458,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2763:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2767:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2763:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1456,
                              "name": "avaxToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1245,
                              "src": "2743:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Avax_$106",
                                "typeString": "contract Avax"
                              }
                            },
                            "id": 1457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2753:9:6",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 374,
                            "src": "2743:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2743:31:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1461,
                          "name": "amountToReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1449,
                          "src": "2778:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2743:49:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b656e21",
                        "id": 1463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2794:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        },
                        "value": "You do not have enough AVAX token!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        }
                      ],
                      "id": 1455,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2734:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2734:97:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1465,
                  "nodeType": "ExpressionStatement",
                  "src": "2734:97:6"
                },
                {
                  "assignments": [
                    1467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1467,
                      "mutability": "mutable",
                      "name": "collateralAmount",
                      "nameLocation": "2850:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1571,
                      "src": "2842:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1466,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2842:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1472,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1468,
                      "name": "AVAXCollateralLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1268,
                      "src": "2869:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1471,
                    "indexExpression": {
                      "expression": {
                        "id": 1469,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2890:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2894:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2890:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2869:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2842:59:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1476,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2989:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2993:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2989:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1480,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3009:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$2259",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$2259",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3001:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1478,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3001:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3001:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1482,
                        "name": "amountToReturn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "3016:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1473,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1245,
                        "src": "2966:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$106",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 1475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2976:12:6",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 498,
                      "src": "2966:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2966:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1484,
                  "nodeType": "ExpressionStatement",
                  "src": "2966:65:6"
                },
                {
                  "assignments": [
                    1486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1486,
                      "mutability": "mutable",
                      "name": "lendingFeeToDeduct",
                      "nameLocation": "3112:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1571,
                      "src": "3104:26:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1485,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3104:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1491,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1488,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1467,
                        "src": "3153:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1489,
                        "name": "_lendingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1260,
                        "src": "3171:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1487,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2148,
                      "src": "3133:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3133:50:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3104:79:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1497,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3267:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$2259",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$2259",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3259:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1495,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3259:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3259:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1499,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3274:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3278:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3274:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1501,
                              "name": "collateralAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1467,
                              "src": "3287:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1502,
                              "name": "lendingFeeToDeduct",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1486,
                              "src": "3306:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3287:37:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1504,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3286:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1492,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1245,
                        "src": "3236:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$106",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 1494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3246:12:6",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 498,
                      "src": "3236:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3236:90:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1506,
                  "nodeType": "ExpressionStatement",
                  "src": "3236:90:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1512,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3392:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$2259",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$2259",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 1511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3384:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1510,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3384:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3384:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1514,
                            "name": "reserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1251,
                            "src": "3399:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Reserves_$4022",
                              "typeString": "contract Reserves"
                            }
                          },
                          "id": 1515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3408:18:6",
                          "memberName": "getReservesAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4005,
                          "src": "3399:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3399:29:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1517,
                        "name": "lendingFeeToDeduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1486,
                        "src": "3430:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1507,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1245,
                        "src": "3361:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$106",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 1509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3371:12:6",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 498,
                      "src": "3361:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3361:88:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1519,
                  "nodeType": "ExpressionStatement",
                  "src": "3361:88:6"
                },
                {
                  "expression": {
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3498:39:6",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1520,
                        "name": "AVAXCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1268,
                        "src": "3505:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1523,
                      "indexExpression": {
                        "expression": {
                          "id": 1521,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3526:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3530:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3526:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3505:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1525,
                  "nodeType": "ExpressionStatement",
                  "src": "3498:39:6"
                },
                {
                  "expression": {
                    "id": 1530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3592:33:6",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1526,
                        "name": "AVAXLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1272,
                        "src": "3599:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1529,
                      "indexExpression": {
                        "expression": {
                          "id": 1527,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3614:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3618:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3614:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3599:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1531,
                  "nodeType": "ExpressionStatement",
                  "src": "3592:33:6"
                },
                {
                  "expression": {
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3680:49:6",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1532,
                        "name": "AVAXCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1276,
                        "src": "3687:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1535,
                      "indexExpression": {
                        "expression": {
                          "id": 1533,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3718:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3722:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3718:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3687:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "3680:49:6"
                },
                {
                  "expression": {
                    "id": 1543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1538,
                        "name": "AVAXCUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1280,
                        "src": "3739:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1541,
                      "indexExpression": {
                        "expression": {
                          "id": 1539,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3772:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3776:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3772:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3739:44:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3787:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3739:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1544,
                  "nodeType": "ExpressionStatement",
                  "src": "3739:49:6"
                },
                {
                  "body": {
                    "id": 1569,
                    "nodeType": "Block",
                    "src": "3848:112:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1556,
                              "name": "AVAXDebtors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1302,
                              "src": "3866:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1558,
                            "indexExpression": {
                              "id": 1557,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1546,
                              "src": "3878:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3866:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1559,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3884:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3888:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3884:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3866:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1568,
                        "nodeType": "IfStatement",
                        "src": "3862:88:6",
                        "trueBody": {
                          "id": 1567,
                          "nodeType": "Block",
                          "src": "3896:54:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "3914:21:6",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1562,
                                    "name": "AVAXDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1302,
                                    "src": "3921:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1564,
                                  "indexExpression": {
                                    "id": 1563,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1546,
                                    "src": "3933:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3921:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1566,
                              "nodeType": "ExpressionStatement",
                              "src": "3914:21:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1549,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1546,
                      "src": "3819:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1550,
                        "name": "AVAXDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "3823:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3835:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3823:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3819:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1570,
                  "initializationExpression": {
                    "assignments": [
                      1546
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1546,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3812:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1570,
                        "src": "3804:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1545,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3804:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1548,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3816:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3804:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3843:3:6",
                      "subExpression": {
                        "id": 1553,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "3843:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1555,
                    "nodeType": "ExpressionStatement",
                    "src": "3843:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "3799:161:6"
                }
              ]
            },
            "functionSelector": "42b9309a",
            "id": 1572,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1444,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1443,
                  "name": "onlyAVAXDebtHolder",
                  "nameLocations": [
                    "2523:18:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2229,
                  "src": "2523:18:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2523:18:6"
              },
              {
                "id": 1446,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1445,
                  "name": "enoughAVAXInWallet",
                  "nameLocations": [
                    "2542:18:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2258,
                  "src": "2542:18:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2542:18:6"
              }
            ],
            "name": "repayAVAXDebt",
            "nameLocation": "2500:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2513:2:6"
            },
            "returnParameters": {
              "id": 1447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2561:0:6"
            },
            "scope": 2259,
            "src": "2491:1475:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1622,
              "nodeType": "Block",
              "src": "4052:459:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1580,
                          "name": "topUpCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1574,
                          "src": "4079:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4098:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4079:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 1583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4101:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 1579,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4071:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4071:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1585,
                  "nodeType": "ExpressionStatement",
                  "src": "4071:59:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1589,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4169:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4173:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4169:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1587,
                              "name": "avaxToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1245,
                              "src": "4149:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Avax_$106",
                                "typeString": "contract Avax"
                              }
                            },
                            "id": 1588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4159:9:6",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 374,
                            "src": "4149:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4149:31:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1592,
                          "name": "topUpCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1574,
                          "src": "4184:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4149:50:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768204156415820746f6b656e21",
                        "id": 1594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4201:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        },
                        "value": "You do not have enough AVAX token!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2d09b736cc5ae01288cb848319113d89fc89d02cbb7764e1d0f6f3dba9924bd",
                          "typeString": "literal_string \"You do not have enough AVAX token!\""
                        }
                      ],
                      "id": 1586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4140:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4140:98:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1596,
                  "nodeType": "ExpressionStatement",
                  "src": "4140:98:6"
                },
                {
                  "assignments": [
                    1598
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1598,
                      "mutability": "mutable",
                      "name": "topUpCollateralInUSD",
                      "nameLocation": "4256:20:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1622,
                      "src": "4248:28:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1597,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4248:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1599,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4248:28:6"
                },
                {
                  "expression": {
                    "id": 1606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1600,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1598,
                      "src": "4287:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1601,
                        "name": "topUpCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1574,
                        "src": "4310:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1602,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1254,
                            "src": "4328:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceFeed_$3794",
                              "typeString": "contract PriceFeed"
                            }
                          },
                          "id": 1603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4338:17:6",
                          "memberName": "getAvaxPriceFirst",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3785,
                          "src": "4328:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 1604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4328:29:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4310:47:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4287:70:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1607,
                  "nodeType": "ExpressionStatement",
                  "src": "4287:70:6"
                },
                {
                  "expression": {
                    "id": 1613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1608,
                        "name": "AVAXCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1268,
                        "src": "4377:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1611,
                      "indexExpression": {
                        "expression": {
                          "id": 1609,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4398:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4402:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4398:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4377:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1612,
                      "name": "topUpCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1574,
                      "src": "4413:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4377:51:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1614,
                  "nodeType": "ExpressionStatement",
                  "src": "4377:51:6"
                },
                {
                  "expression": {
                    "id": 1620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1615,
                        "name": "AVAXCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1276,
                        "src": "4438:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1618,
                      "indexExpression": {
                        "expression": {
                          "id": 1616,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4469:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4473:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4469:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4438:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1619,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1598,
                      "src": "4484:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4438:66:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1621,
                  "nodeType": "ExpressionStatement",
                  "src": "4438:66:6"
                }
              ]
            },
            "functionSelector": "b60d2617",
            "id": 1623,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1577,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1576,
                  "name": "onlyAVAXDebtHolder",
                  "nameLocations": [
                    "4033:18:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2229,
                  "src": "4033:18:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4033:18:6"
              }
            ],
            "name": "topUpAVAXCollateral",
            "nameLocation": "3981:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1574,
                  "mutability": "mutable",
                  "name": "topUpCollateral",
                  "nameLocation": "4009:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1623,
                  "src": "4001:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4001:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4000:25:6"
            },
            "returnParameters": {
              "id": 1578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4052:0:6"
            },
            "scope": 2259,
            "src": "3972:539:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1713,
              "nodeType": "Block",
              "src": "4550:1008:6",
              "statements": [
                {
                  "assignments": [
                    1627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1627,
                      "mutability": "mutable",
                      "name": "currentPriceOfAVAX",
                      "nameLocation": "4568:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1713,
                      "src": "4560:26:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1626,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4560:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1631,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1628,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "4589:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceFeed_$3794",
                          "typeString": "contract PriceFeed"
                        }
                      },
                      "id": 1629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4599:23:6",
                      "memberName": "getAvaxPriceToLiquidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3793,
                      "src": "4589:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4589:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4560:64:6"
                },
                {
                  "body": {
                    "id": 1711,
                    "nodeType": "Block",
                    "src": "4680:872:6",
                    "statements": [
                      {
                        "assignments": [
                          1644
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1644,
                            "mutability": "mutable",
                            "name": "newCollateralPrice",
                            "nameLocation": "4702:18:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1711,
                            "src": "4694:26:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1643,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4694:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1654,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1645,
                                "name": "currentPriceOfAVAX",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1627,
                                "src": "4724:18:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "baseExpression": {
                                      "id": 1646,
                                      "name": "AVAXCollateralLedger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1268,
                                      "src": "4746:20:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1650,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 1647,
                                        "name": "AVAXDebtors",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1302,
                                        "src": "4767:11:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1649,
                                      "indexExpression": {
                                        "id": 1648,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1633,
                                        "src": "4779:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4767:14:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4746:36:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1651,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4745:38:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4724:59:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1653,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4723:61:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4694:90:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1655,
                            "name": "newCollateralPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1644,
                            "src": "4802:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 1656,
                              "name": "AVAXCollateralValueLedgerinUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1276,
                              "src": "4824:30:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1660,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1657,
                                "name": "AVAXDebtors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1302,
                                "src": "4855:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1659,
                              "indexExpression": {
                                "id": 1658,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1633,
                                "src": "4867:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4855:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4824:46:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4802:68:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1710,
                        "nodeType": "IfStatement",
                        "src": "4798:744:6",
                        "trueBody": {
                          "id": 1709,
                          "nodeType": "Block",
                          "src": "4872:670:6",
                          "statements": [
                            {
                              "assignments": [
                                1663
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1663,
                                  "mutability": "mutable",
                                  "name": "accountAddress",
                                  "nameLocation": "5040:14:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1709,
                                  "src": "5032:22:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 1662,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5032:7:6",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1667,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1664,
                                  "name": "AVAXDebtors",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1302,
                                  "src": "5057:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1666,
                                "indexExpression": {
                                  "id": 1665,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1633,
                                  "src": "5069:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5057:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5032:39:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1673,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "5121:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Lending_$2259",
                                          "typeString": "contract Lending"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Lending_$2259",
                                          "typeString": "contract Lending"
                                        }
                                      ],
                                      "id": 1672,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5113:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1671,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5113:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1674,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5113:13:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 1675,
                                        "name": "liquidityPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1248,
                                        "src": "5128:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LiquidityPool_$2731",
                                          "typeString": "contract LiquidityPool"
                                        }
                                      },
                                      "id": 1676,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5142:12:6",
                                      "memberName": "getLPAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2649,
                                      "src": "5128:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 1677,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5128:28:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1678,
                                      "name": "AVAXCollateralLedger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1268,
                                      "src": "5158:20:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1680,
                                    "indexExpression": {
                                      "id": 1679,
                                      "name": "accountAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1663,
                                      "src": "5179:14:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5158:36:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1668,
                                    "name": "avaxToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1245,
                                    "src": "5090:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Avax_$106",
                                      "typeString": "contract Avax"
                                    }
                                  },
                                  "id": 1670,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5100:12:6",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 498,
                                  "src": "5090:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5090:105:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1682,
                              "nodeType": "ExpressionStatement",
                              "src": "5090:105:6"
                            },
                            {
                              "expression": {
                                "id": 1688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "5214:43:6",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1683,
                                    "name": "AVAXCollateralLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1268,
                                    "src": "5221:20:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1687,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1684,
                                      "name": "AVAXDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1302,
                                      "src": "5242:11:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1686,
                                    "indexExpression": {
                                      "id": 1685,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1633,
                                      "src": "5254:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5242:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5221:36:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1689,
                              "nodeType": "ExpressionStatement",
                              "src": "5214:43:6"
                            },
                            {
                              "expression": {
                                "id": 1695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "5327:37:6",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1690,
                                    "name": "AVAXLoanLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1272,
                                    "src": "5334:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1694,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1691,
                                      "name": "AVAXDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1302,
                                      "src": "5349:11:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1693,
                                    "indexExpression": {
                                      "id": 1692,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1633,
                                      "src": "5361:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5349:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5334:30:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1696,
                              "nodeType": "ExpressionStatement",
                              "src": "5327:37:6"
                            },
                            {
                              "expression": {
                                "id": 1702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "5434:53:6",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1697,
                                    "name": "AVAXCollateralValueLedgerinUSD",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1276,
                                    "src": "5441:30:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1701,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1698,
                                      "name": "AVAXDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1302,
                                      "src": "5472:11:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1700,
                                    "indexExpression": {
                                      "id": 1699,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1633,
                                      "src": "5484:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5472:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5441:46:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1703,
                              "nodeType": "ExpressionStatement",
                              "src": "5434:53:6"
                            },
                            {
                              "expression": {
                                "id": 1707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "5506:21:6",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1704,
                                    "name": "AVAXDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1302,
                                    "src": "5513:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1706,
                                  "indexExpression": {
                                    "id": 1705,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1633,
                                    "src": "5525:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5513:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1708,
                              "nodeType": "ExpressionStatement",
                              "src": "5506:21:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1636,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1633,
                      "src": "4651:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1637,
                        "name": "AVAXDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "4655:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4667:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4655:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4651:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1712,
                  "initializationExpression": {
                    "assignments": [
                      1633
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1633,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4644:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1712,
                        "src": "4639:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1632,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4639:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1635,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4648:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4639:10:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4675:3:6",
                      "subExpression": {
                        "id": 1640,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1633,
                        "src": "4675:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1642,
                    "nodeType": "ExpressionStatement",
                    "src": "4675:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "4634:918:6"
                }
              ]
            },
            "functionSelector": "db8bf7e6",
            "id": 1714,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateAVAX",
            "nameLocation": "4527:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4540:2:6"
            },
            "returnParameters": {
              "id": 1625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4550:0:6"
            },
            "scope": 2259,
            "src": "4518:1040:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1799,
              "nodeType": "Block",
              "src": "5655:829:6",
              "statements": [
                {
                  "assignments": [
                    1720
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1720,
                      "mutability": "mutable",
                      "name": "depositCollateral",
                      "nameLocation": "5673:17:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1799,
                      "src": "5665:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1719,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5665:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1723,
                  "initialValue": {
                    "expression": {
                      "id": 1721,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "5693:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5697:5:6",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "5693:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5665:37:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1725,
                          "name": "depositCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1720,
                          "src": "5720:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5741:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5720:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 1728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5744:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 1724,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5712:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5712:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1730,
                  "nodeType": "ExpressionStatement",
                  "src": "5712:61:6"
                },
                {
                  "assignments": [
                    1732
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1732,
                      "mutability": "mutable",
                      "name": "depositCollateralInEth",
                      "nameLocation": "5791:22:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1799,
                      "src": "5783:30:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1731,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5783:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1736,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1733,
                      "name": "depositCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1720,
                      "src": "5816:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030303030303030303030303030303030",
                      "id": 1734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5836:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1000000000000000000"
                    },
                    "src": "5816:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5783:72:6"
                },
                {
                  "assignments": [
                    1738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1738,
                      "mutability": "mutable",
                      "name": "depositCollateralInUSD",
                      "nameLocation": "5873:22:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1799,
                      "src": "5865:30:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1737,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5865:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1739,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5865:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1743,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5922:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5926:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5922:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1740,
                        "name": "ETHDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1299,
                        "src": "5906:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5917:4:6",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5906:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5906:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1746,
                  "nodeType": "ExpressionStatement",
                  "src": "5906:27:6"
                },
                {
                  "expression": {
                    "id": 1753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1747,
                      "name": "depositCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1738,
                      "src": "5943:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1748,
                        "name": "depositCollateralInEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1732,
                        "src": "5968:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1749,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1254,
                            "src": "5993:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceFeed_$3794",
                              "typeString": "contract PriceFeed"
                            }
                          },
                          "id": 1750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6003:16:6",
                          "memberName": "getEthPriceFirst",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3769,
                          "src": "5993:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 1751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5993:28:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5968:53:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5943:78:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1754,
                  "nodeType": "ExpressionStatement",
                  "src": "5943:78:6"
                },
                {
                  "assignments": [
                    1756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1756,
                      "mutability": "mutable",
                      "name": "_loanAmount",
                      "nameLocation": "6049:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1799,
                      "src": "6041:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1755,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6041:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1761,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1758,
                        "name": "depositCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1720,
                        "src": "6083:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1759,
                        "name": "_maximumLendingPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1257,
                        "src": "6102:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1757,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2148,
                      "src": "6063:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6063:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6041:87:6"
                },
                {
                  "expression": {
                    "id": 1767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1762,
                        "name": "ETHCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1284,
                        "src": "6158:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1765,
                      "indexExpression": {
                        "expression": {
                          "id": 1763,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6178:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6182:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6178:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6158:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1766,
                      "name": "depositCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1720,
                      "src": "6193:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6158:52:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1768,
                  "nodeType": "ExpressionStatement",
                  "src": "6158:52:6"
                },
                {
                  "expression": {
                    "id": 1774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1769,
                        "name": "ETHLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1288,
                        "src": "6220:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1772,
                      "indexExpression": {
                        "expression": {
                          "id": 1770,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6234:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6238:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6234:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6220:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1773,
                      "name": "_loanAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1756,
                      "src": "6249:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6220:40:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1775,
                  "nodeType": "ExpressionStatement",
                  "src": "6220:40:6"
                },
                {
                  "expression": {
                    "id": 1781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1776,
                        "name": "ETHCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1292,
                        "src": "6270:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1779,
                      "indexExpression": {
                        "expression": {
                          "id": 1777,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6300:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6304:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6300:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6270:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1780,
                      "name": "depositCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1738,
                      "src": "6315:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6270:67:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1782,
                  "nodeType": "ExpressionStatement",
                  "src": "6270:67:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1786,
                        "name": "_loanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1756,
                        "src": "6386:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1789,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6407:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6411:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6407:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6399:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1787,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6399:8:6",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6399:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 1783,
                        "name": "liquidityPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1248,
                        "src": "6356:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$2731",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 1785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6370:15:6",
                      "memberName": "sendEthToLender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2698,
                      "src": "6356:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_payable_$returns$__$",
                        "typeString": "function (uint256,address payable) external"
                      }
                    },
                    "id": 1792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6356:63:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1793,
                  "nodeType": "ExpressionStatement",
                  "src": "6356:63:6"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1794,
                      "name": "ETHCollateralValueLedgerinUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1292,
                      "src": "6436:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1797,
                    "indexExpression": {
                      "expression": {
                        "id": 1795,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "6466:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6470:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6466:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6436:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1718,
                  "id": 1798,
                  "nodeType": "Return",
                  "src": "6429:48:6"
                }
              ]
            },
            "functionSelector": "4fed0518",
            "id": 1800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrowEth",
            "nameLocation": "5610:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5619:2:6"
            },
            "returnParameters": {
              "id": 1718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1717,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "5646:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5646:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5645:9:6"
            },
            "scope": 2259,
            "src": "5601:883:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1848,
              "nodeType": "Block",
              "src": "6553:467:6",
              "statements": [
                {
                  "assignments": [
                    1806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1806,
                      "mutability": "mutable",
                      "name": "topUpCollateral",
                      "nameLocation": "6571:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1848,
                      "src": "6563:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1805,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6563:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1809,
                  "initialValue": {
                    "expression": {
                      "id": 1807,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "6589:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6593:5:6",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "6589:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6563:35:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1811,
                          "name": "topUpCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1806,
                          "src": "6616:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6635:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6616:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520707574206d6f726520636f6c6c61746572616c",
                        "id": 1814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6638:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        },
                        "value": "Please put more collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26fe8ecc7348e59765ead1df74c20d7a7d3cd4fc7eacd2d3461815d13f2062d1",
                          "typeString": "literal_string \"Please put more collateral\""
                        }
                      ],
                      "id": 1810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6608:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6608:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1816,
                  "nodeType": "ExpressionStatement",
                  "src": "6608:59:6"
                },
                {
                  "assignments": [
                    1818
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1818,
                      "mutability": "mutable",
                      "name": "topUpCollateralInEth",
                      "nameLocation": "6685:20:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1848,
                      "src": "6677:28:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1817,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6677:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1822,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1819,
                      "name": "topUpCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1806,
                      "src": "6708:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030303030303030303030303030303030",
                      "id": 1820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6726:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1000000000000000000"
                    },
                    "src": "6708:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6677:68:6"
                },
                {
                  "assignments": [
                    1824
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1824,
                      "mutability": "mutable",
                      "name": "topUpCollateralInUSD",
                      "nameLocation": "6763:20:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1848,
                      "src": "6755:28:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1823,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6755:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1825,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6755:28:6"
                },
                {
                  "expression": {
                    "id": 1832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1826,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1824,
                      "src": "6794:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1827,
                        "name": "topUpCollateralInEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1818,
                        "src": "6817:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1828,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1254,
                            "src": "6840:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceFeed_$3794",
                              "typeString": "contract PriceFeed"
                            }
                          },
                          "id": 1829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6850:16:6",
                          "memberName": "getEthPriceFirst",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3769,
                          "src": "6840:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 1830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6840:28:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6817:51:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6794:74:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1833,
                  "nodeType": "ExpressionStatement",
                  "src": "6794:74:6"
                },
                {
                  "expression": {
                    "id": 1839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1834,
                        "name": "ETHCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1284,
                        "src": "6888:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1837,
                      "indexExpression": {
                        "expression": {
                          "id": 1835,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6908:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6912:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6908:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6888:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1838,
                      "name": "topUpCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1806,
                      "src": "6923:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6888:50:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1840,
                  "nodeType": "ExpressionStatement",
                  "src": "6888:50:6"
                },
                {
                  "expression": {
                    "id": 1846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1841,
                        "name": "ETHCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1292,
                        "src": "6948:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1844,
                      "indexExpression": {
                        "expression": {
                          "id": 1842,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6978:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6982:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6978:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6948:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1845,
                      "name": "topUpCollateralInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1824,
                      "src": "6993:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6948:65:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1847,
                  "nodeType": "ExpressionStatement",
                  "src": "6948:65:6"
                }
              ]
            },
            "functionSelector": "2b0fa399",
            "id": 1849,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1803,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1802,
                  "name": "onlyEthDebtHolder",
                  "nameLocations": [
                    "6535:17:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2243,
                  "src": "6535:17:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6535:17:6"
              }
            ],
            "name": "topUpETHCollateral",
            "nameLocation": "6499:18:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6517:2:6"
            },
            "returnParameters": {
              "id": 1804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6553:0:6"
            },
            "scope": 2259,
            "src": "6490:530:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1991,
              "nodeType": "Block",
              "src": "7084:1587:6",
              "statements": [
                {
                  "assignments": [
                    1855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1855,
                      "mutability": "mutable",
                      "name": "amountToReturn",
                      "nameLocation": "7167:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1991,
                      "src": "7159:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1854,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7159:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1860,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1856,
                      "name": "ETHLoanLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1288,
                      "src": "7184:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1859,
                    "indexExpression": {
                      "expression": {
                        "id": 1857,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7198:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7202:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7198:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7184:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7159:50:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1862,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7271:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7275:5:6",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7271:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1864,
                          "name": "amountToReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1855,
                          "src": "7284:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7271:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c756520696e736572746564206973206e6f7420656e6f756768",
                        "id": 1866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7300:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
                          "typeString": "literal_string \"Value inserted is not enough\""
                        },
                        "value": "Value inserted is not enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3797c63d045fb7f6519418b3bc04ccaef32ae1ebfcc1bc96e3021896fcf952b",
                          "typeString": "literal_string \"Value inserted is not enough\""
                        }
                      ],
                      "id": 1861,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7262:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7262:69:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1868,
                  "nodeType": "ExpressionStatement",
                  "src": "7262:69:6"
                },
                {
                  "assignments": [
                    1870
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1870,
                      "mutability": "mutable",
                      "name": "collateralAmount",
                      "nameLocation": "7349:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1991,
                      "src": "7341:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1869,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7341:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1875,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1871,
                      "name": "ETHCollateralLedger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1284,
                      "src": "7368:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1874,
                    "indexExpression": {
                      "expression": {
                        "id": 1872,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7388:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7392:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7388:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7368:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7341:58:6"
                },
                {
                  "assignments": [
                    1877
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1877,
                      "mutability": "mutable",
                      "name": "lendingFeeToDeduct",
                      "nameLocation": "7480:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1991,
                      "src": "7472:26:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1876,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7472:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1882,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1879,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1870,
                        "src": "7521:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1880,
                        "name": "_lendingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1260,
                        "src": "7539:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1878,
                      "name": "calculatePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2148,
                      "src": "7501:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7501:50:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7472:79:6"
                },
                {
                  "assignments": [
                    1884
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1884,
                      "mutability": "mutable",
                      "name": "addressToSend",
                      "nameLocation": "7620:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1991,
                      "src": "7604:29:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1883,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7604:15:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1890,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1887,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7645:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7649:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7645:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7636:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1885,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7636:9:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7636:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7604:52:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1894,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1870,
                          "src": "7689:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1895,
                          "name": "lendingFeeToDeduct",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1877,
                          "src": "7708:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7689:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1891,
                        "name": "addressToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1884,
                        "src": "7666:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7680:8:6",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7666:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7666:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1898,
                  "nodeType": "ExpressionStatement",
                  "src": "7666:61:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1902,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "7854:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Lending_$2259",
                                  "typeString": "contract Lending"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Lending_$2259",
                                  "typeString": "contract Lending"
                                }
                              ],
                              "id": 1901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7846:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1900,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7846:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7846:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7860:7:6",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "7846:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1905,
                          "name": "amountToReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1855,
                          "src": "7871:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7846:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f52",
                        "id": 1907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7887:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
                          "typeString": "literal_string \"ERROR\""
                        },
                        "value": "ERROR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6368faa35d5ea15ae80b929d8626383bb91c2157389a6ddb6239282e6aa9005d",
                          "typeString": "literal_string \"ERROR\""
                        }
                      ],
                      "id": 1899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7837:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7837:58:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1909,
                  "nodeType": "ExpressionStatement",
                  "src": "7837:58:6"
                },
                {
                  "assignments": [
                    1911
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1911,
                      "mutability": "mutable",
                      "name": "lpAddress",
                      "nameLocation": "7921:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1991,
                      "src": "7905:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1910,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7905:15:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1918,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1914,
                            "name": "liquidityPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1248,
                            "src": "7942:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityPool_$2731",
                              "typeString": "contract LiquidityPool"
                            }
                          },
                          "id": 1915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7956:12:6",
                          "memberName": "getLPAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2649,
                          "src": "7942:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7942:28:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7933:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1912,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7933:9:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7933:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7905:66:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1922,
                        "name": "amountToReturn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1855,
                        "src": "8000:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1919,
                        "name": "lpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1911,
                        "src": "7981:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7991:8:6",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7981:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7981:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1924,
                  "nodeType": "ExpressionStatement",
                  "src": "7981:34:6"
                },
                {
                  "assignments": [
                    1926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1926,
                      "mutability": "mutable",
                      "name": "reservesAddress",
                      "nameLocation": "8082:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1991,
                      "src": "8066:31:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1925,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8066:15:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1933,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1929,
                            "name": "reserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1251,
                            "src": "8108:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Reserves_$4022",
                              "typeString": "contract Reserves"
                            }
                          },
                          "id": 1930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8117:18:6",
                          "memberName": "getReservesAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4005,
                          "src": "8108:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8108:29:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8100:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1927,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8100:8:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8100:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8066:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1937,
                        "name": "lendingFeeToDeduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1877,
                        "src": "8173:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1934,
                        "name": "reservesAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1926,
                        "src": "8148:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8164:8:6",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "8148:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8148:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1939,
                  "nodeType": "ExpressionStatement",
                  "src": "8148:44:6"
                },
                {
                  "expression": {
                    "id": 1944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "8203:38:6",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1940,
                        "name": "ETHCollateralLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1284,
                        "src": "8210:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1943,
                      "indexExpression": {
                        "expression": {
                          "id": 1941,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8230:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8234:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8230:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8210:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1945,
                  "nodeType": "ExpressionStatement",
                  "src": "8203:38:6"
                },
                {
                  "expression": {
                    "id": 1950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "8296:32:6",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1946,
                        "name": "ETHLoanLedger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1288,
                        "src": "8303:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1949,
                      "indexExpression": {
                        "expression": {
                          "id": 1947,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8317:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8321:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8317:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8303:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1951,
                  "nodeType": "ExpressionStatement",
                  "src": "8296:32:6"
                },
                {
                  "expression": {
                    "id": 1956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "8383:48:6",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1952,
                        "name": "ETHCollateralValueLedgerinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1292,
                        "src": "8390:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1955,
                      "indexExpression": {
                        "expression": {
                          "id": 1953,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8420:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8424:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8420:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8390:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1957,
                  "nodeType": "ExpressionStatement",
                  "src": "8383:48:6"
                },
                {
                  "expression": {
                    "id": 1963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1958,
                        "name": "ETHUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1296,
                        "src": "8441:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1961,
                      "indexExpression": {
                        "expression": {
                          "id": 1959,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8472:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8476:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8472:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8441:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8487:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "8441:47:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1964,
                  "nodeType": "ExpressionStatement",
                  "src": "8441:47:6"
                },
                {
                  "body": {
                    "id": 1989,
                    "nodeType": "Block",
                    "src": "8555:110:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1976,
                              "name": "ETHDebtors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1299,
                              "src": "8573:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1978,
                            "indexExpression": {
                              "id": 1977,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1966,
                              "src": "8584:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8573:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1979,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "8590:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8594:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8590:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8573:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1988,
                        "nodeType": "IfStatement",
                        "src": "8569:86:6",
                        "trueBody": {
                          "id": 1987,
                          "nodeType": "Block",
                          "src": "8602:53:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1985,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "8620:20:6",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1982,
                                    "name": "ETHDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1299,
                                    "src": "8627:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1984,
                                  "indexExpression": {
                                    "id": 1983,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1966,
                                    "src": "8638:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8627:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1986,
                              "nodeType": "ExpressionStatement",
                              "src": "8620:20:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1969,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1966,
                      "src": "8527:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1970,
                        "name": "ETHDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1299,
                        "src": "8531:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8542:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8531:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8527:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1990,
                  "initializationExpression": {
                    "assignments": [
                      1966
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1966,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8520:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1990,
                        "src": "8512:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1965,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8512:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1968,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8524:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8512:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8550:3:6",
                      "subExpression": {
                        "id": 1973,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1966,
                        "src": "8550:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1975,
                    "nodeType": "ExpressionStatement",
                    "src": "8550:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "8507:158:6"
                }
              ]
            },
            "functionSelector": "4a282670",
            "id": 1992,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1852,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1851,
                  "name": "onlyEthDebtHolder",
                  "nameLocations": [
                    "7066:17:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2243,
                  "src": "7066:17:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "7066:17:6"
              }
            ],
            "name": "repayEth",
            "nameLocation": "7040:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7048:2:6"
            },
            "returnParameters": {
              "id": 1853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7084:0:6"
            },
            "scope": 2259,
            "src": "7031:1640:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2082,
              "nodeType": "Block",
              "src": "8727:918:6",
              "statements": [
                {
                  "assignments": [
                    1996
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1996,
                      "mutability": "mutable",
                      "name": "currentPriceOfEth",
                      "nameLocation": "8745:17:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2082,
                      "src": "8737:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1995,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8737:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2000,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1997,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "8765:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceFeed_$3794",
                          "typeString": "contract PriceFeed"
                        }
                      },
                      "id": 1998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8775:22:6",
                      "memberName": "getEthPriceToLiquidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3777,
                      "src": "8765:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8765:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8737:62:6"
                },
                {
                  "body": {
                    "id": 2080,
                    "nodeType": "Block",
                    "src": "8854:785:6",
                    "statements": [
                      {
                        "assignments": [
                          2013
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2013,
                            "mutability": "mutable",
                            "name": "newCollateralPrice",
                            "nameLocation": "8876:18:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2080,
                            "src": "8868:26:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2012,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8868:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2025,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2014,
                                "name": "currentPriceOfEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1996,
                                "src": "8898:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2021,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 2015,
                                        "name": "ETHCollateralLedger",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1284,
                                        "src": "8919:19:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 2019,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 2016,
                                          "name": "ETHDebtors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1299,
                                          "src": "8939:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 2018,
                                        "indexExpression": {
                                          "id": 2017,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2002,
                                          "src": "8950:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8939:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8919:34:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "31303030303030303030303030303030303030",
                                      "id": 2020,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8956:19:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "value": "1000000000000000000"
                                    },
                                    "src": "8919:56:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2022,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8918:58:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8898:78:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2024,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8897:80:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8868:109:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2026,
                            "name": "newCollateralPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2013,
                            "src": "8995:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 2027,
                              "name": "ETHCollateralValueLedgerinUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1292,
                              "src": "9017:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2031,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 2028,
                                "name": "ETHDebtors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1299,
                                "src": "9047:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 2030,
                              "indexExpression": {
                                "id": 2029,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2002,
                                "src": "9058:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9047:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9017:44:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8995:66:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2079,
                        "nodeType": "IfStatement",
                        "src": "8991:638:6",
                        "trueBody": {
                          "id": 2078,
                          "nodeType": "Block",
                          "src": "9063:566:6",
                          "statements": [
                            {
                              "assignments": [
                                2034
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2034,
                                  "mutability": "mutable",
                                  "name": "addressToSend",
                                  "nameLocation": "9159:13:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2078,
                                  "src": "9143:29:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 2033,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9143:15:6",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2041,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 2037,
                                        "name": "liquidityPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1248,
                                        "src": "9184:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LiquidityPool_$2731",
                                          "typeString": "contract LiquidityPool"
                                        }
                                      },
                                      "id": 2038,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9198:12:6",
                                      "memberName": "getLPAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2649,
                                      "src": "9184:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 2039,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9184:28:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2036,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9175:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 2035,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9175:9:6",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2040,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9175:38:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9143:70:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 2045,
                                      "name": "ETHCollateralLedger",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1284,
                                      "src": "9254:19:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 2049,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 2046,
                                        "name": "ETHDebtors",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1299,
                                        "src": "9274:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 2048,
                                      "indexExpression": {
                                        "id": 2047,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2002,
                                        "src": "9285:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9274:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9254:34:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2042,
                                    "name": "addressToSend",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2034,
                                    "src": "9231:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 2044,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9245:8:6",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "9231:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 2050,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9231:58:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2051,
                              "nodeType": "ExpressionStatement",
                              "src": "9231:58:6"
                            },
                            {
                              "expression": {
                                "id": 2057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "9308:41:6",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 2052,
                                    "name": "ETHCollateralLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1284,
                                    "src": "9315:19:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 2056,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 2053,
                                      "name": "ETHDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1299,
                                      "src": "9335:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 2055,
                                    "indexExpression": {
                                      "id": 2054,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2002,
                                      "src": "9346:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9335:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9315:34:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2058,
                              "nodeType": "ExpressionStatement",
                              "src": "9308:41:6"
                            },
                            {
                              "expression": {
                                "id": 2064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "9419:35:6",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 2059,
                                    "name": "ETHLoanLedger",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1288,
                                    "src": "9426:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 2063,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 2060,
                                      "name": "ETHDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1299,
                                      "src": "9440:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 2062,
                                    "indexExpression": {
                                      "id": 2061,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2002,
                                      "src": "9451:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9440:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9426:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2065,
                              "nodeType": "ExpressionStatement",
                              "src": "9419:35:6"
                            },
                            {
                              "expression": {
                                "id": 2071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "9524:51:6",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 2066,
                                    "name": "ETHCollateralValueLedgerinUSD",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1292,
                                    "src": "9531:29:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 2070,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 2067,
                                      "name": "ETHDebtors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1299,
                                      "src": "9561:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 2069,
                                    "indexExpression": {
                                      "id": 2068,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2002,
                                      "src": "9572:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9561:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9531:44:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2072,
                              "nodeType": "ExpressionStatement",
                              "src": "9524:51:6"
                            },
                            {
                              "expression": {
                                "id": 2076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "9594:20:6",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 2073,
                                    "name": "ETHDebtors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1299,
                                    "src": "9601:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 2075,
                                  "indexExpression": {
                                    "id": 2074,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2002,
                                    "src": "9612:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9601:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2077,
                              "nodeType": "ExpressionStatement",
                              "src": "9594:20:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2005,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2002,
                      "src": "8826:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2006,
                        "name": "ETHDebtors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1299,
                        "src": "8830:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8841:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8830:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8826:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2081,
                  "initializationExpression": {
                    "assignments": [
                      2002
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2002,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8819:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2081,
                        "src": "8814:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2001,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8814:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2004,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8823:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8814:10:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8849:3:6",
                      "subExpression": {
                        "id": 2009,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2002,
                        "src": "8849:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2011,
                    "nodeType": "ExpressionStatement",
                    "src": "8849:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "8809:830:6"
                }
              ]
            },
            "functionSelector": "734997e5",
            "id": 2083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateETH",
            "nameLocation": "8697:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8709:2:6"
            },
            "returnParameters": {
              "id": 1994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8727:0:6"
            },
            "scope": 2259,
            "src": "8688:957:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2093,
              "nodeType": "Block",
              "src": "9722:66:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2088,
                      "name": "ETHUserTotalReturnTransactions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1296,
                      "src": "9739:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2091,
                    "indexExpression": {
                      "expression": {
                        "id": 2089,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9770:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9774:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9770:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9739:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2087,
                  "id": 2092,
                  "nodeType": "Return",
                  "src": "9732:49:6"
                }
              ]
            },
            "functionSelector": "6862f589",
            "id": 2094,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotaETHRepaymentAmount",
            "nameLocation": "9660:29:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9689:2:6"
            },
            "returnParameters": {
              "id": 2087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2086,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2094,
                  "src": "9713:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9713:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9712:9:6"
            },
            "scope": 2259,
            "src": "9651:137:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2104,
              "nodeType": "Block",
              "src": "9866:68:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2099,
                      "name": "AVAXCUserTotalReturnTransactions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1280,
                      "src": "9883:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2102,
                    "indexExpression": {
                      "expression": {
                        "id": 2100,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9916:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9920:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9916:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9883:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2098,
                  "id": 2103,
                  "nodeType": "Return",
                  "src": "9876:51:6"
                }
              ]
            },
            "functionSelector": "6e67fcdd",
            "id": 2105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotaAVAXRepaymentAmount",
            "nameLocation": "9803:30:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9833:2:6"
            },
            "returnParameters": {
              "id": 2098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2097,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2105,
                  "src": "9857:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2096,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9857:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9856:9:6"
            },
            "scope": 2259,
            "src": "9794:140:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2117,
              "nodeType": "Block",
              "src": "10035:65:6",
              "statements": [
                {
                  "expression": {
                    "id": 2115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2110,
                        "name": "ETHUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1296,
                        "src": "10044:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2113,
                      "indexExpression": {
                        "expression": {
                          "id": 2111,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10075:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10079:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10075:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10044:42:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "313030",
                      "id": 2114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10090:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "10044:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2116,
                  "nodeType": "ExpressionStatement",
                  "src": "10044:49:6"
                }
              ]
            },
            "functionSelector": "b731bc6d",
            "id": 2118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initUserTotalEthRepaymentAmount",
            "nameLocation": "9976:31:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10007:2:6"
            },
            "returnParameters": {
              "id": 2109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2108,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2118,
                  "src": "10026:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10026:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10025:9:6"
            },
            "scope": 2259,
            "src": "9967:133:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2130,
              "nodeType": "Block",
              "src": "10175:67:6",
              "statements": [
                {
                  "expression": {
                    "id": 2128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2123,
                        "name": "AVAXCUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1280,
                        "src": "10184:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2126,
                      "indexExpression": {
                        "expression": {
                          "id": 2124,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10217:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10221:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10217:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10184:44:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "313030",
                      "id": 2127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10232:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "10184:51:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2129,
                  "nodeType": "ExpressionStatement",
                  "src": "10184:51:6"
                }
              ]
            },
            "functionSelector": "dcbbdbb8",
            "id": 2131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initUserTotalAVAXRepaymentAmount",
            "nameLocation": "10115:32:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10147:2:6"
            },
            "returnParameters": {
              "id": 2122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2121,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2131,
                  "src": "10166:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10166:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10165:9:6"
            },
            "scope": 2259,
            "src": "10106:136:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2147,
              "nodeType": "Block",
              "src": "10576:64:6",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2140,
                            "name": "collateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2133,
                            "src": "10594:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2141,
                            "name": "percentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2135,
                            "src": "10613:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10594:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2143,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10593:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31305f303030",
                      "id": 2144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10627:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10_000"
                    },
                    "src": "10593:40:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2139,
                  "id": 2146,
                  "nodeType": "Return",
                  "src": "10586:47:6"
                }
              ]
            },
            "functionSelector": "2133e3b9",
            "id": 2148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePercentage",
            "nameLocation": "10480:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2133,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "10508:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2148,
                  "src": "10500:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10500:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2135,
                  "mutability": "mutable",
                  "name": "percentage",
                  "nameLocation": "10534:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2148,
                  "src": "10526:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10526:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10499:46:6"
            },
            "returnParameters": {
              "id": 2139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2138,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2148,
                  "src": "10567:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10567:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10566:9:6"
            },
            "scope": 2259,
            "src": "10471:169:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2161,
              "nodeType": "Block",
              "src": "10712:58:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2157,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "10757:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lending_$2259",
                              "typeString": "contract Lending"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lending_$2259",
                              "typeString": "contract Lending"
                            }
                          ],
                          "id": 2156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10749:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2155,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10749:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10749:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2153,
                        "name": "avaxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1245,
                        "src": "10729:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Avax_$106",
                          "typeString": "contract Avax"
                        }
                      },
                      "id": 2154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10739:9:6",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 374,
                      "src": "10729:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10729:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2152,
                  "id": 2160,
                  "nodeType": "Return",
                  "src": "10722:41:6"
                }
              ]
            },
            "functionSelector": "4b84a647",
            "id": 2162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHoldingAVAXCollateral",
            "nameLocation": "10655:24:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10679:2:6"
            },
            "returnParameters": {
              "id": 2152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "10703:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10703:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10702:9:6"
            },
            "scope": 2259,
            "src": "10646:124:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2173,
              "nodeType": "Block",
              "src": "10841:45:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2169,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "10866:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Lending_$2259",
                            "typeString": "contract Lending"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Lending_$2259",
                            "typeString": "contract Lending"
                          }
                        ],
                        "id": 2168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10858:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2167,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10858:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10858:13:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "10872:7:6",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "10858:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2166,
                  "id": 2172,
                  "nodeType": "Return",
                  "src": "10851:28:6"
                }
              ]
            },
            "functionSelector": "fcd6e191",
            "id": 2174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHoldingEthCollateral",
            "nameLocation": "10785:23:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10808:2:6"
            },
            "returnParameters": {
              "id": 2166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2165,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2174,
                  "src": "10832:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10832:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10831:9:6"
            },
            "scope": 2259,
            "src": "10776:110:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2187,
              "nodeType": "Block",
              "src": "11036:52:6",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 2181,
                          "name": "AVAXLoanLedger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1272,
                          "src": "11054:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2184,
                        "indexExpression": {
                          "expression": {
                            "id": 2182,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "11069:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11073:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11069:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11054:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 2185,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "11053:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2180,
                  "id": 2186,
                  "nodeType": "Return",
                  "src": "11046:35:6"
                }
              ]
            },
            "functionSelector": "23ded52a",
            "id": 2188,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2177,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2176,
                  "name": "onlyAVAXDebtHolder",
                  "nameLocations": [
                    "10999:18:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2229,
                  "src": "10999:18:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "10999:18:6"
              }
            ],
            "name": "getAVAXDebt",
            "nameLocation": "10973:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10984:2:6"
            },
            "returnParameters": {
              "id": 2180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2179,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2188,
                  "src": "11027:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11027:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11026:9:6"
            },
            "scope": 2259,
            "src": "10964:124:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2198,
              "nodeType": "Block",
              "src": "11146:37:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2195,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "11171:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Lending_$2259",
                          "typeString": "contract Lending"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Lending_$2259",
                          "typeString": "contract Lending"
                        }
                      ],
                      "id": 2194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "11163:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 2193,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11163:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11163:13:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2192,
                  "id": 2197,
                  "nodeType": "Return",
                  "src": "11156:20:6"
                }
              ]
            },
            "functionSelector": "38cc4831",
            "id": 2199,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "11103:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11113:2:6"
            },
            "returnParameters": {
              "id": 2192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2199,
                  "src": "11137:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11137:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11136:9:6"
            },
            "scope": 2259,
            "src": "11094:89:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2214,
              "nodeType": "Block",
              "src": "11310:101:6",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 2206,
                        "name": "AVAXCUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1280,
                        "src": "11327:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2208,
                      "indexExpression": {
                        "id": 2207,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2201,
                        "src": "11360:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11327:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 2209,
                        "name": "ETHUserTotalReturnTransactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1296,
                        "src": "11368:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2211,
                      "indexExpression": {
                        "id": 2210,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2201,
                        "src": "11399:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11368:36:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11327:77:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2205,
                  "id": 2213,
                  "nodeType": "Return",
                  "src": "11320:84:6"
                }
              ]
            },
            "functionSelector": "4075af22",
            "id": 2215,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalTransactionCount",
            "nameLocation": "11241:24:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2201,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "11274:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2215,
                  "src": "11266:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11266:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11265:14:6"
            },
            "returnParameters": {
              "id": 2205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2204,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2215,
                  "src": "11301:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11301:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11300:9:6"
            },
            "scope": 2259,
            "src": "11232:179:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2228,
              "nodeType": "Block",
              "src": "11447:107:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2218,
                            "name": "AVAXLoanLedger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1272,
                            "src": "11465:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2221,
                          "indexExpression": {
                            "expression": {
                              "id": 2219,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "11480:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11484:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11480:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11465:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11494:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11465:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520616e79206f75747374616e64696e672064656274",
                        "id": 2224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11497:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
                          "typeString": "literal_string \"You do not have any outstanding debt\""
                        },
                        "value": "You do not have any outstanding debt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f374e7b3e61ae02e507ea3927d6d6b789029723c1574ecee5ce894fb73b67ae4",
                          "typeString": "literal_string \"You do not have any outstanding debt\""
                        }
                      ],
                      "id": 2217,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11457:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11457:79:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2226,
                  "nodeType": "ExpressionStatement",
                  "src": "11457:79:6"
                },
                {
                  "id": 2227,
                  "nodeType": "PlaceholderStatement",
                  "src": "11546:1:6"
                }
              ]
            },
            "id": 2229,
            "name": "onlyAVAXDebtHolder",
            "nameLocation": "11426:18:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11444:2:6"
            },
            "src": "11417:137:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2242,
              "nodeType": "Block",
              "src": "11589:102:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2232,
                            "name": "ETHLoanLedger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1288,
                            "src": "11607:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2235,
                          "indexExpression": {
                            "expression": {
                              "id": 2233,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "11621:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11625:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11621:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11607:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11635:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11607:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f742068617665206f75747374616e64696e672064656274",
                        "id": 2238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11638:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
                          "typeString": "literal_string \"You do not have outstanding debt\""
                        },
                        "value": "You do not have outstanding debt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9783786385e6686880bad136ad2dfd58a8744a41d2fa3790387056b58d6a6a50",
                          "typeString": "literal_string \"You do not have outstanding debt\""
                        }
                      ],
                      "id": 2231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11599:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11599:74:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2240,
                  "nodeType": "ExpressionStatement",
                  "src": "11599:74:6"
                },
                {
                  "id": 2241,
                  "nodeType": "PlaceholderStatement",
                  "src": "11683:1:6"
                }
              ]
            },
            "id": 2243,
            "name": "onlyEthDebtHolder",
            "nameLocation": "11569:17:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11586:2:6"
            },
            "src": "11560:131:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2257,
              "nodeType": "Block",
              "src": "11732:122:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2248,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "11770:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11774:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11770:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2246,
                              "name": "avaxToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1245,
                              "src": "11750:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Avax_$106",
                                "typeString": "contract Avax"
                              }
                            },
                            "id": 2247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11760:9:6",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 374,
                            "src": "11750:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11750:31:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11784:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11750:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520656e6f756768205553444320746f20726570617920746869732064656274",
                        "id": 2253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11787:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8",
                          "typeString": "literal_string \"You do not have enough USDC to repay this debt\""
                        },
                        "value": "You do not have enough USDC to repay this debt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b35aa5f4e943f87cecdfa790fea95f1a73f51a3289db875cc9def21781eb29f8",
                          "typeString": "literal_string \"You do not have enough USDC to repay this debt\""
                        }
                      ],
                      "id": 2245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11742:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11742:94:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2255,
                  "nodeType": "ExpressionStatement",
                  "src": "11742:94:6"
                },
                {
                  "id": 2256,
                  "nodeType": "PlaceholderStatement",
                  "src": "11846:1:6"
                }
              ]
            },
            "id": 2258,
            "name": "enoughAVAXInWallet",
            "nameLocation": "11711:18:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11729:2:6"
            },
            "src": "11702:152:6",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2260,
        "src": "181:11675:6",
        "usedErrors": []
      }
    ],
    "src": "32:11824:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xA52Ac994Ac52E531b5Be7e12e22C60AbC608805E",
      "transactionHash": "0x9b21ca9fec4015ca50253c75d4e03bf6aeee2a45c91b67af32213c495094705f"
    }
  },
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-03-21T10:45:09.866Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}